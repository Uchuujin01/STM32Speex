ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"jitter.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.speex_alloc,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	speex_alloc:
  25              	.LFB1:
  26              		.file 1 "STM32F10x_Speex_Lib/libspeex/os_support.h"
   1:STM32F10x_Speex_Lib/libspeex/os_support.h **** /* Copyright (C) 2007 Jean-Marc Valin
   2:STM32F10x_Speex_Lib/libspeex/os_support.h ****       
   3:STM32F10x_Speex_Lib/libspeex/os_support.h ****    File: os_support.h
   4:STM32F10x_Speex_Lib/libspeex/os_support.h ****    This is the (tiny) OS abstraction layer. Aside from math.h, this is the
   5:STM32F10x_Speex_Lib/libspeex/os_support.h ****    only place where system headers are allowed.
   6:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
   7:STM32F10x_Speex_Lib/libspeex/os_support.h ****    Redistribution and use in source and binary forms, with or without
   8:STM32F10x_Speex_Lib/libspeex/os_support.h ****    modification, are permitted provided that the following conditions are
   9:STM32F10x_Speex_Lib/libspeex/os_support.h ****    met:
  10:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
  11:STM32F10x_Speex_Lib/libspeex/os_support.h ****    1. Redistributions of source code must retain the above copyright notice,
  12:STM32F10x_Speex_Lib/libspeex/os_support.h ****    this list of conditions and the following disclaimer.
  13:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
  14:STM32F10x_Speex_Lib/libspeex/os_support.h ****    2. Redistributions in binary form must reproduce the above copyright
  15:STM32F10x_Speex_Lib/libspeex/os_support.h ****    notice, this list of conditions and the following disclaimer in the
  16:STM32F10x_Speex_Lib/libspeex/os_support.h ****    documentation and/or other materials provided with the distribution.
  17:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
  18:STM32F10x_Speex_Lib/libspeex/os_support.h ****    3. The name of the author may not be used to endorse or promote products
  19:STM32F10x_Speex_Lib/libspeex/os_support.h ****    derived from this software without specific prior written permission.
  20:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
  21:STM32F10x_Speex_Lib/libspeex/os_support.h ****    THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
  22:STM32F10x_Speex_Lib/libspeex/os_support.h ****    IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
  23:STM32F10x_Speex_Lib/libspeex/os_support.h ****    OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  24:STM32F10x_Speex_Lib/libspeex/os_support.h ****    DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
  25:STM32F10x_Speex_Lib/libspeex/os_support.h ****    INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  26:STM32F10x_Speex_Lib/libspeex/os_support.h ****    (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:STM32F10x_Speex_Lib/libspeex/os_support.h ****    SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  28:STM32F10x_Speex_Lib/libspeex/os_support.h ****    HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  29:STM32F10x_Speex_Lib/libspeex/os_support.h ****    STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  30:STM32F10x_Speex_Lib/libspeex/os_support.h ****    ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:STM32F10x_Speex_Lib/libspeex/os_support.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:STM32F10x_Speex_Lib/libspeex/os_support.h **** */
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 2


  33:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
  34:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef OS_SUPPORT_H
  35:STM32F10x_Speex_Lib/libspeex/os_support.h **** #define OS_SUPPORT_H
  36:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
  37:STM32F10x_Speex_Lib/libspeex/os_support.h **** #include <string.h>
  38:STM32F10x_Speex_Lib/libspeex/os_support.h **** #include <stdio.h>
  39:STM32F10x_Speex_Lib/libspeex/os_support.h **** #include <stdlib.h>
  40:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
  41:STM32F10x_Speex_Lib/libspeex/os_support.h **** // #ifdef HAVE_CONFIG_H
  42:STM32F10x_Speex_Lib/libspeex/os_support.h **** #include "config.h"
  43:STM32F10x_Speex_Lib/libspeex/os_support.h **** // #endif
  44:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifdef OS_SUPPORT_CUSTOM
  45:STM32F10x_Speex_Lib/libspeex/os_support.h **** #include "os_support_custom.h"
  46:STM32F10x_Speex_Lib/libspeex/os_support.h **** #endif
  47:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
  48:STM32F10x_Speex_Lib/libspeex/os_support.h **** /** Speex wrapper for calloc. To do your own dynamic allocation, all you need to do is replace this
  49:STM32F10x_Speex_Lib/libspeex/os_support.h ****     NOTE: speex_alloc needs to CLEAR THE MEMORY */
  50:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef OVERRIDE_SPEEX_ALLOC
  51:STM32F10x_Speex_Lib/libspeex/os_support.h **** static inline void *speex_alloc (int size)
  52:STM32F10x_Speex_Lib/libspeex/os_support.h **** {
  27              		.loc 1 52 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
  53:STM32F10x_Speex_Lib/libspeex/os_support.h ****    /* WARNING: this is not equivalent to malloc(). If you want to use malloc() 
  54:STM32F10x_Speex_Lib/libspeex/os_support.h ****       or your own allocator, YOU NEED TO CLEAR THE MEMORY ALLOCATED. Otherwise
  55:STM32F10x_Speex_Lib/libspeex/os_support.h ****       you will experience strange bugs */
  56:STM32F10x_Speex_Lib/libspeex/os_support.h ****    return calloc(size,1);
  43              		.loc 1 56 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 0121     		movs	r1, #1
  46 000c 1846     		mov	r0, r3
  47 000e FFF7FEFF 		bl	calloc
  48 0012 0346     		mov	r3, r0
  57:STM32F10x_Speex_Lib/libspeex/os_support.h **** }
  49              		.loc 1 57 0
  50 0014 1846     		mov	r0, r3
  51 0016 0837     		adds	r7, r7, #8
  52              	.LCFI3:
  53              		.cfi_def_cfa_offset 8
  54 0018 BD46     		mov	sp, r7
  55              	.LCFI4:
  56              		.cfi_def_cfa_register 13
  57              		@ sp needed
  58 001a 80BD     		pop	{r7, pc}
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 3


  59              		.cfi_endproc
  60              	.LFE1:
  62              		.section	.text.speex_free,"ax",%progbits
  63              		.align	2
  64              		.thumb
  65              		.thumb_func
  67              	speex_free:
  68              	.LFB4:
  58:STM32F10x_Speex_Lib/libspeex/os_support.h **** #endif
  59:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
  60:STM32F10x_Speex_Lib/libspeex/os_support.h **** /** Same as speex_alloc, except that the area is only needed inside a Speex call (might cause probl
  61:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef OVERRIDE_SPEEX_ALLOC_SCRATCH
  62:STM32F10x_Speex_Lib/libspeex/os_support.h **** static inline void *speex_alloc_scratch (int size)
  63:STM32F10x_Speex_Lib/libspeex/os_support.h **** {
  64:STM32F10x_Speex_Lib/libspeex/os_support.h ****    /* Scratch space doesn't need to be cleared */
  65:STM32F10x_Speex_Lib/libspeex/os_support.h ****    return calloc(size,1);
  66:STM32F10x_Speex_Lib/libspeex/os_support.h **** }
  67:STM32F10x_Speex_Lib/libspeex/os_support.h **** #endif
  68:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
  69:STM32F10x_Speex_Lib/libspeex/os_support.h **** /** Speex wrapper for realloc. To do your own dynamic allocation, all you need to do is replace thi
  70:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef OVERRIDE_SPEEX_REALLOC
  71:STM32F10x_Speex_Lib/libspeex/os_support.h **** static inline void *speex_realloc (void *ptr, int size)
  72:STM32F10x_Speex_Lib/libspeex/os_support.h **** {
  73:STM32F10x_Speex_Lib/libspeex/os_support.h ****    return realloc(ptr, size);
  74:STM32F10x_Speex_Lib/libspeex/os_support.h **** }
  75:STM32F10x_Speex_Lib/libspeex/os_support.h **** #endif
  76:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
  77:STM32F10x_Speex_Lib/libspeex/os_support.h **** /** Speex wrapper for calloc. To do your own dynamic allocation, all you need to do is replace this
  78:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef OVERRIDE_SPEEX_FREE
  79:STM32F10x_Speex_Lib/libspeex/os_support.h **** static inline void speex_free (void *ptr)
  80:STM32F10x_Speex_Lib/libspeex/os_support.h **** {
  69              		.loc 1 80 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 8
  72              		@ frame_needed = 1, uses_anonymous_args = 0
  73 0000 80B5     		push	{r7, lr}
  74              	.LCFI5:
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 7, -8
  77              		.cfi_offset 14, -4
  78 0002 82B0     		sub	sp, sp, #8
  79              	.LCFI6:
  80              		.cfi_def_cfa_offset 16
  81 0004 00AF     		add	r7, sp, #0
  82              	.LCFI7:
  83              		.cfi_def_cfa_register 7
  84 0006 7860     		str	r0, [r7, #4]
  81:STM32F10x_Speex_Lib/libspeex/os_support.h ****    free(ptr);
  85              		.loc 1 81 0
  86 0008 7868     		ldr	r0, [r7, #4]
  87 000a FFF7FEFF 		bl	free
  82:STM32F10x_Speex_Lib/libspeex/os_support.h **** }
  88              		.loc 1 82 0
  89 000e 00BF     		nop
  90 0010 0837     		adds	r7, r7, #8
  91              	.LCFI8:
  92              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 4


  93 0012 BD46     		mov	sp, r7
  94              	.LCFI9:
  95              		.cfi_def_cfa_register 13
  96              		@ sp needed
  97 0014 80BD     		pop	{r7, pc}
  98              		.cfi_endproc
  99              	.LFE4:
 101 0016 00BF     		.section	.text.speex_warning_int,"ax",%progbits
 102              		.align	2
 103              		.thumb
 104              		.thumb_func
 106              	speex_warning_int:
 107              	.LFB7:
  83:STM32F10x_Speex_Lib/libspeex/os_support.h **** #endif
  84:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
  85:STM32F10x_Speex_Lib/libspeex/os_support.h **** /** Same as speex_free, except that the area is only needed inside a Speex call (might cause proble
  86:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef OVERRIDE_SPEEX_FREE_SCRATCH
  87:STM32F10x_Speex_Lib/libspeex/os_support.h **** static inline void speex_free_scratch (void *ptr)
  88:STM32F10x_Speex_Lib/libspeex/os_support.h **** {
  89:STM32F10x_Speex_Lib/libspeex/os_support.h ****    free(ptr);
  90:STM32F10x_Speex_Lib/libspeex/os_support.h **** }
  91:STM32F10x_Speex_Lib/libspeex/os_support.h **** #endif
  92:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
  93:STM32F10x_Speex_Lib/libspeex/os_support.h **** /** Copy n bytes of memory from src to dst. The 0* term provides compile-time type checking  */
  94:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef OVERRIDE_SPEEX_COPY
  95:STM32F10x_Speex_Lib/libspeex/os_support.h **** #define SPEEX_COPY(dst, src, n) (memcpy((dst), (src), (n)*sizeof(*(dst)) + 0*((dst)-(src)) ))
  96:STM32F10x_Speex_Lib/libspeex/os_support.h **** #endif
  97:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
  98:STM32F10x_Speex_Lib/libspeex/os_support.h **** /** Copy n bytes of memory from src to dst, allowing overlapping regions. The 0* term 
  99:STM32F10x_Speex_Lib/libspeex/os_support.h ****     provides compile-time type checking */
 100:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef OVERRIDE_SPEEX_MOVE
 101:STM32F10x_Speex_Lib/libspeex/os_support.h **** #define SPEEX_MOVE(dst, src, n) (memmove((dst), (src), (n)*sizeof(*(dst)) + 0*((dst)-(src)) ))
 102:STM32F10x_Speex_Lib/libspeex/os_support.h **** #endif
 103:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
 104:STM32F10x_Speex_Lib/libspeex/os_support.h **** /** Set n bytes of memory to value of c, starting at address s */
 105:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef OVERRIDE_SPEEX_MEMSET
 106:STM32F10x_Speex_Lib/libspeex/os_support.h **** #define SPEEX_MEMSET(dst, c, n) (memset((dst), (c), (n)*sizeof(*(dst))))
 107:STM32F10x_Speex_Lib/libspeex/os_support.h **** #endif
 108:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
 109:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
 110:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef OVERRIDE_SPEEX_FATAL
 111:STM32F10x_Speex_Lib/libspeex/os_support.h **** static inline void _speex_fatal(const char *str, const char *file, int line)
 112:STM32F10x_Speex_Lib/libspeex/os_support.h **** {
 113:STM32F10x_Speex_Lib/libspeex/os_support.h ****    fprintf (stderr, "Fatal (internal) error in %s, line %d: %s\n", file, line, str);
 114:STM32F10x_Speex_Lib/libspeex/os_support.h ****    exit(1);
 115:STM32F10x_Speex_Lib/libspeex/os_support.h **** }
 116:STM32F10x_Speex_Lib/libspeex/os_support.h **** #endif
 117:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
 118:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef OVERRIDE_SPEEX_WARNING
 119:STM32F10x_Speex_Lib/libspeex/os_support.h **** static inline void speex_warning(const char *str)
 120:STM32F10x_Speex_Lib/libspeex/os_support.h **** {
 121:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef DISABLE_WARNINGS
 122:STM32F10x_Speex_Lib/libspeex/os_support.h ****    fprintf (stderr, "warning: %s\n", str);
 123:STM32F10x_Speex_Lib/libspeex/os_support.h **** #endif
 124:STM32F10x_Speex_Lib/libspeex/os_support.h **** }
 125:STM32F10x_Speex_Lib/libspeex/os_support.h **** #endif
 126:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 5


 127:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef OVERRIDE_SPEEX_WARNING_INT
 128:STM32F10x_Speex_Lib/libspeex/os_support.h **** static inline void speex_warning_int(const char *str, int val)
 129:STM32F10x_Speex_Lib/libspeex/os_support.h **** {
 108              		.loc 1 129 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 8
 111              		@ frame_needed = 1, uses_anonymous_args = 0
 112              		@ link register save eliminated.
 113 0000 80B4     		push	{r7}
 114              	.LCFI10:
 115              		.cfi_def_cfa_offset 4
 116              		.cfi_offset 7, -4
 117 0002 83B0     		sub	sp, sp, #12
 118              	.LCFI11:
 119              		.cfi_def_cfa_offset 16
 120 0004 00AF     		add	r7, sp, #0
 121              	.LCFI12:
 122              		.cfi_def_cfa_register 7
 123 0006 7860     		str	r0, [r7, #4]
 124 0008 3960     		str	r1, [r7]
 130:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef DISABLE_WARNINGS
 131:STM32F10x_Speex_Lib/libspeex/os_support.h ****    fprintf (stderr, "warning: %s %d\n", str, val);
 132:STM32F10x_Speex_Lib/libspeex/os_support.h **** #endif
 133:STM32F10x_Speex_Lib/libspeex/os_support.h **** }
 125              		.loc 1 133 0
 126 000a 00BF     		nop
 127 000c 0C37     		adds	r7, r7, #12
 128              	.LCFI13:
 129              		.cfi_def_cfa_offset 4
 130 000e BD46     		mov	sp, r7
 131              	.LCFI14:
 132              		.cfi_def_cfa_register 13
 133              		@ sp needed
 134 0010 80BC     		pop	{r7}
 135              	.LCFI15:
 136              		.cfi_restore 7
 137              		.cfi_def_cfa_offset 0
 138 0012 7047     		bx	lr
 139              		.cfi_endproc
 140              	.LFE7:
 142              		.section	.text.tb_init,"ax",%progbits
 143              		.align	2
 144              		.thumb
 145              		.thumb_func
 147              	tb_init:
 148              	.LFB9:
 149              		.file 2 "STM32F10x_Speex_Lib/libspeex/jitter.c"
   1:STM32F10x_Speex_Lib/libspeex/jitter.c **** /* Copyright (C) 2002 Jean-Marc Valin 
   2:STM32F10x_Speex_Lib/libspeex/jitter.c ****    File: speex_jitter.h
   3:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
   4:STM32F10x_Speex_Lib/libspeex/jitter.c ****    Adaptive jitter buffer for Speex
   5:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
   6:STM32F10x_Speex_Lib/libspeex/jitter.c ****    Redistribution and use in source and binary forms, with or without
   7:STM32F10x_Speex_Lib/libspeex/jitter.c ****    modification, are permitted provided that the following conditions
   8:STM32F10x_Speex_Lib/libspeex/jitter.c ****    are met:
   9:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
  10:STM32F10x_Speex_Lib/libspeex/jitter.c ****    - Redistributions of source code must retain the above copyright
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 6


  11:STM32F10x_Speex_Lib/libspeex/jitter.c ****    notice, this list of conditions and the following disclaimer.
  12:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
  13:STM32F10x_Speex_Lib/libspeex/jitter.c ****    - Redistributions in binary form must reproduce the above copyright
  14:STM32F10x_Speex_Lib/libspeex/jitter.c ****    notice, this list of conditions and the following disclaimer in the
  15:STM32F10x_Speex_Lib/libspeex/jitter.c ****    documentation and/or other materials provided with the distribution.
  16:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
  17:STM32F10x_Speex_Lib/libspeex/jitter.c ****    - Neither the name of the Xiph.org Foundation nor the names of its
  18:STM32F10x_Speex_Lib/libspeex/jitter.c ****    contributors may be used to endorse or promote products derived from
  19:STM32F10x_Speex_Lib/libspeex/jitter.c ****    this software without specific prior written permission.
  20:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
  21:STM32F10x_Speex_Lib/libspeex/jitter.c ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:STM32F10x_Speex_Lib/libspeex/jitter.c ****    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:STM32F10x_Speex_Lib/libspeex/jitter.c ****    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
  24:STM32F10x_Speex_Lib/libspeex/jitter.c ****    A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR
  25:STM32F10x_Speex_Lib/libspeex/jitter.c ****    CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  26:STM32F10x_Speex_Lib/libspeex/jitter.c ****    EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
  27:STM32F10x_Speex_Lib/libspeex/jitter.c ****    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
  28:STM32F10x_Speex_Lib/libspeex/jitter.c ****    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  29:STM32F10x_Speex_Lib/libspeex/jitter.c ****    LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  30:STM32F10x_Speex_Lib/libspeex/jitter.c ****    NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  31:STM32F10x_Speex_Lib/libspeex/jitter.c ****    SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
  33:STM32F10x_Speex_Lib/libspeex/jitter.c **** */
  34:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
  35:STM32F10x_Speex_Lib/libspeex/jitter.c **** /*
  36:STM32F10x_Speex_Lib/libspeex/jitter.c **** TODO:
  37:STM32F10x_Speex_Lib/libspeex/jitter.c **** - Add short-term estimate
  38:STM32F10x_Speex_Lib/libspeex/jitter.c **** - Defensive programming
  39:STM32F10x_Speex_Lib/libspeex/jitter.c ****   + warn when last returned < last desired (begative buffering)
  40:STM32F10x_Speex_Lib/libspeex/jitter.c ****   + warn if update_delay not called between get() and tick() or is called twice in a row
  41:STM32F10x_Speex_Lib/libspeex/jitter.c **** - Linked list structure for holding the packets instead of the current fixed-size array
  42:STM32F10x_Speex_Lib/libspeex/jitter.c ****   + return memory to a pool
  43:STM32F10x_Speex_Lib/libspeex/jitter.c ****   + allow pre-allocation of the pool
  44:STM32F10x_Speex_Lib/libspeex/jitter.c ****   + optional max number of elements
  45:STM32F10x_Speex_Lib/libspeex/jitter.c **** - Statistics
  46:STM32F10x_Speex_Lib/libspeex/jitter.c ****   + drift
  47:STM32F10x_Speex_Lib/libspeex/jitter.c ****   + loss
  48:STM32F10x_Speex_Lib/libspeex/jitter.c ****   + late
  49:STM32F10x_Speex_Lib/libspeex/jitter.c ****   + jitter
  50:STM32F10x_Speex_Lib/libspeex/jitter.c ****   + buffering delay
  51:STM32F10x_Speex_Lib/libspeex/jitter.c **** */
  52:STM32F10x_Speex_Lib/libspeex/jitter.c **** // #ifdef HAVE_CONFIG_H
  53:STM32F10x_Speex_Lib/libspeex/jitter.c **** #include "config.h"
  54:STM32F10x_Speex_Lib/libspeex/jitter.c **** // #endif
  55:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
  56:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
  57:STM32F10x_Speex_Lib/libspeex/jitter.c **** #include "arch.h"
  58:STM32F10x_Speex_Lib/libspeex/jitter.c **** #include <speex/speex.h>
  59:STM32F10x_Speex_Lib/libspeex/jitter.c **** #include <speex/speex_bits.h>
  60:STM32F10x_Speex_Lib/libspeex/jitter.c **** #include <speex/speex_jitter.h>
  61:STM32F10x_Speex_Lib/libspeex/jitter.c **** #include "os_support.h"
  62:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
  63:STM32F10x_Speex_Lib/libspeex/jitter.c **** #ifndef NULL
  64:STM32F10x_Speex_Lib/libspeex/jitter.c **** #define NULL 0
  65:STM32F10x_Speex_Lib/libspeex/jitter.c **** #endif
  66:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
  67:STM32F10x_Speex_Lib/libspeex/jitter.c **** #define SPEEX_JITTER_MAX_BUFFER_SIZE 200   /**< Maximum number of packets in jitter buffer */
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 7


  68:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
  69:STM32F10x_Speex_Lib/libspeex/jitter.c **** #define TSUB(a,b) ((spx_int32_t)((a)-(b)))
  70:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
  71:STM32F10x_Speex_Lib/libspeex/jitter.c **** #define GT32(a,b) (((spx_int32_t)((a)-(b)))>0)
  72:STM32F10x_Speex_Lib/libspeex/jitter.c **** #define GE32(a,b) (((spx_int32_t)((a)-(b)))>=0)
  73:STM32F10x_Speex_Lib/libspeex/jitter.c **** #define LT32(a,b) (((spx_int32_t)((a)-(b)))<0)
  74:STM32F10x_Speex_Lib/libspeex/jitter.c **** #define LE32(a,b) (((spx_int32_t)((a)-(b)))<=0)
  75:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
  76:STM32F10x_Speex_Lib/libspeex/jitter.c **** #define ROUND_DOWN(x, step) ((x)<0 ? ((x)-(step)+1)/(step)*(step) : (x)/(step)*(step)) 
  77:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
  78:STM32F10x_Speex_Lib/libspeex/jitter.c **** #define MAX_TIMINGS 40
  79:STM32F10x_Speex_Lib/libspeex/jitter.c **** #define MAX_BUFFERS 3
  80:STM32F10x_Speex_Lib/libspeex/jitter.c **** #define TOP_DELAY 40
  81:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
  82:STM32F10x_Speex_Lib/libspeex/jitter.c **** /** Buffer that keeps the time of arrival of the latest packets */
  83:STM32F10x_Speex_Lib/libspeex/jitter.c **** struct TimingBuffer {
  84:STM32F10x_Speex_Lib/libspeex/jitter.c ****    int filled;                         /**< Number of entries occupied in "timing" and "counts"*/
  85:STM32F10x_Speex_Lib/libspeex/jitter.c ****    int curr_count;                     /**< Number of packet timings we got (including those we dis
  86:STM32F10x_Speex_Lib/libspeex/jitter.c ****    spx_int32_t timing[MAX_TIMINGS];    /**< Sorted list of all timings ("latest" packets first) */
  87:STM32F10x_Speex_Lib/libspeex/jitter.c ****    spx_int16_t counts[MAX_TIMINGS];    /**< Order the packets were put in (will be used for short-t
  88:STM32F10x_Speex_Lib/libspeex/jitter.c **** };
  89:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
  90:STM32F10x_Speex_Lib/libspeex/jitter.c **** static void tb_init(struct TimingBuffer *tb)
  91:STM32F10x_Speex_Lib/libspeex/jitter.c **** {
 150              		.loc 2 91 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 8
 153              		@ frame_needed = 1, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155 0000 80B4     		push	{r7}
 156              	.LCFI16:
 157              		.cfi_def_cfa_offset 4
 158              		.cfi_offset 7, -4
 159 0002 83B0     		sub	sp, sp, #12
 160              	.LCFI17:
 161              		.cfi_def_cfa_offset 16
 162 0004 00AF     		add	r7, sp, #0
 163              	.LCFI18:
 164              		.cfi_def_cfa_register 7
 165 0006 7860     		str	r0, [r7, #4]
  92:STM32F10x_Speex_Lib/libspeex/jitter.c ****    tb->filled = 0;
 166              		.loc 2 92 0
 167 0008 7B68     		ldr	r3, [r7, #4]
 168 000a 0022     		movs	r2, #0
 169 000c 1A60     		str	r2, [r3]
  93:STM32F10x_Speex_Lib/libspeex/jitter.c ****    tb->curr_count = 0;
 170              		.loc 2 93 0
 171 000e 7B68     		ldr	r3, [r7, #4]
 172 0010 0022     		movs	r2, #0
 173 0012 5A60     		str	r2, [r3, #4]
  94:STM32F10x_Speex_Lib/libspeex/jitter.c **** }
 174              		.loc 2 94 0
 175 0014 00BF     		nop
 176 0016 0C37     		adds	r7, r7, #12
 177              	.LCFI19:
 178              		.cfi_def_cfa_offset 4
 179 0018 BD46     		mov	sp, r7
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 8


 180              	.LCFI20:
 181              		.cfi_def_cfa_register 13
 182              		@ sp needed
 183 001a 80BC     		pop	{r7}
 184              	.LCFI21:
 185              		.cfi_restore 7
 186              		.cfi_def_cfa_offset 0
 187 001c 7047     		bx	lr
 188              		.cfi_endproc
 189              	.LFE9:
 191 001e 00BF     		.section	.rodata
 192              		.align	2
 193              	.LC0:
 194 0000 53544D33 		.ascii	"STM32F10x_Speex_Lib/libspeex/jitter.c\000"
 194      32463130 
 194      785F5370 
 194      6565785F 
 194      4C69622F 
 195 0026 0000     		.align	2
 196              	.LC1:
 197 0028 61737365 		.ascii	"assertion failed: pos <= tb->filled && pos < MAX_TI"
 197      7274696F 
 197      6E206661 
 197      696C6564 
 197      3A20706F 
 198 005b 4D494E47 		.ascii	"MINGS\000"
 198      5300
 199              		.section	.text.tb_add,"ax",%progbits
 200              		.align	2
 201              		.thumb
 202              		.thumb_func
 204              	tb_add:
 205              	.LFB10:
  95:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
  96:STM32F10x_Speex_Lib/libspeex/jitter.c **** /* Add the timing of a new packet to the TimingBuffer */
  97:STM32F10x_Speex_Lib/libspeex/jitter.c **** static void tb_add(struct TimingBuffer *tb, spx_int16_t timing)
  98:STM32F10x_Speex_Lib/libspeex/jitter.c **** {
 206              		.loc 2 98 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 16
 209              		@ frame_needed = 1, uses_anonymous_args = 0
 210 0000 80B5     		push	{r7, lr}
 211              	.LCFI22:
 212              		.cfi_def_cfa_offset 8
 213              		.cfi_offset 7, -8
 214              		.cfi_offset 14, -4
 215 0002 84B0     		sub	sp, sp, #16
 216              	.LCFI23:
 217              		.cfi_def_cfa_offset 24
 218 0004 00AF     		add	r7, sp, #0
 219              	.LCFI24:
 220              		.cfi_def_cfa_register 7
 221 0006 7860     		str	r0, [r7, #4]
 222 0008 0B46     		mov	r3, r1
 223 000a 7B80     		strh	r3, [r7, #2]	@ movhi
  99:STM32F10x_Speex_Lib/libspeex/jitter.c ****    int pos;
 100:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /* Discard packet that won't make it into the list because they're too early */
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 9


 101:STM32F10x_Speex_Lib/libspeex/jitter.c ****    if (tb->filled >= MAX_TIMINGS && timing >= tb->timing[tb->filled-1])
 224              		.loc 2 101 0
 225 000c 7B68     		ldr	r3, [r7, #4]
 226 000e 1B68     		ldr	r3, [r3]
 227 0010 272B     		cmp	r3, #39
 228 0012 10DD     		ble	.L7
 229              		.loc 2 101 0 is_stmt 0 discriminator 1
 230 0014 B7F90220 		ldrsh	r2, [r7, #2]
 231 0018 7B68     		ldr	r3, [r7, #4]
 232 001a 1B68     		ldr	r3, [r3]
 233 001c 591E     		subs	r1, r3, #1
 234 001e 7B68     		ldr	r3, [r7, #4]
 235 0020 0231     		adds	r1, r1, #2
 236 0022 53F82130 		ldr	r3, [r3, r1, lsl #2]
 237 0026 9A42     		cmp	r2, r3
 238 0028 05DB     		blt	.L7
 102:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 103:STM32F10x_Speex_Lib/libspeex/jitter.c ****       tb->curr_count++;
 239              		.loc 2 103 0 is_stmt 1
 240 002a 7B68     		ldr	r3, [r7, #4]
 241 002c 5B68     		ldr	r3, [r3, #4]
 242 002e 5A1C     		adds	r2, r3, #1
 243 0030 7B68     		ldr	r3, [r7, #4]
 244 0032 5A60     		str	r2, [r3, #4]
 104:STM32F10x_Speex_Lib/libspeex/jitter.c ****       return;
 245              		.loc 2 104 0
 246 0034 6EE0     		b	.L6
 247              	.L7:
 105:STM32F10x_Speex_Lib/libspeex/jitter.c ****    }
 106:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 107:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /* Find where the timing info goes in the sorted list */
 108:STM32F10x_Speex_Lib/libspeex/jitter.c ****    pos = 0;
 248              		.loc 2 108 0
 249 0036 0023     		movs	r3, #0
 250 0038 FB60     		str	r3, [r7, #12]
 109:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /* FIXME: Do bisection instead of linear search */
 110:STM32F10x_Speex_Lib/libspeex/jitter.c ****    while (pos<tb->filled && timing >= tb->timing[pos])
 251              		.loc 2 110 0
 252 003a 02E0     		b	.L9
 253              	.L11:
 111:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 112:STM32F10x_Speex_Lib/libspeex/jitter.c ****       pos++;
 254              		.loc 2 112 0
 255 003c FB68     		ldr	r3, [r7, #12]
 256 003e 0133     		adds	r3, r3, #1
 257 0040 FB60     		str	r3, [r7, #12]
 258              	.L9:
 110:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 259              		.loc 2 110 0
 260 0042 7B68     		ldr	r3, [r7, #4]
 261 0044 1A68     		ldr	r2, [r3]
 262 0046 FB68     		ldr	r3, [r7, #12]
 263 0048 9A42     		cmp	r2, r3
 264 004a 08DD     		ble	.L10
 110:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 265              		.loc 2 110 0 is_stmt 0 discriminator 1
 266 004c B7F90220 		ldrsh	r2, [r7, #2]
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 10


 267 0050 7B68     		ldr	r3, [r7, #4]
 268 0052 F968     		ldr	r1, [r7, #12]
 269 0054 0231     		adds	r1, r1, #2
 270 0056 53F82130 		ldr	r3, [r3, r1, lsl #2]
 271 005a 9A42     		cmp	r2, r3
 272 005c EEDA     		bge	.L11
 273              	.L10:
 113:STM32F10x_Speex_Lib/libspeex/jitter.c ****    }
 114:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 115:STM32F10x_Speex_Lib/libspeex/jitter.c ****    speex_assert(pos <= tb->filled && pos < MAX_TIMINGS);
 274              		.loc 2 115 0 is_stmt 1
 275 005e 7B68     		ldr	r3, [r7, #4]
 276 0060 1A68     		ldr	r2, [r3]
 277 0062 FB68     		ldr	r3, [r7, #12]
 278 0064 9A42     		cmp	r2, r3
 279 0066 02DB     		blt	.L12
 280              		.loc 2 115 0 is_stmt 0 discriminator 2
 281 0068 FB68     		ldr	r3, [r7, #12]
 282 006a 272B     		cmp	r3, #39
 283 006c 04DD     		ble	.L13
 284              	.L12:
 285              		.loc 2 115 0 discriminator 3
 286 006e 7322     		movs	r2, #115
 287 0070 2A49     		ldr	r1, .L16
 288 0072 2B48     		ldr	r0, .L16+4
 289 0074 FFF7FEFF 		bl	_speex_fatal
 290              	.L13:
 116:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 117:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /* Shift everything so we can perform the insertion */
 118:STM32F10x_Speex_Lib/libspeex/jitter.c ****    if (pos < tb->filled)
 291              		.loc 2 118 0 is_stmt 1
 292 0078 7B68     		ldr	r3, [r7, #4]
 293 007a 1A68     		ldr	r2, [r3]
 294 007c FB68     		ldr	r3, [r7, #12]
 295 007e 9A42     		cmp	r2, r3
 296 0080 2BDD     		ble	.L14
 297              	.LBB2:
 119:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 120:STM32F10x_Speex_Lib/libspeex/jitter.c ****       int move_size = tb->filled-pos;
 298              		.loc 2 120 0
 299 0082 7B68     		ldr	r3, [r7, #4]
 300 0084 1A68     		ldr	r2, [r3]
 301 0086 FB68     		ldr	r3, [r7, #12]
 302 0088 D31A     		subs	r3, r2, r3
 303 008a BB60     		str	r3, [r7, #8]
 121:STM32F10x_Speex_Lib/libspeex/jitter.c ****       if (tb->filled == MAX_TIMINGS)
 304              		.loc 2 121 0
 305 008c 7B68     		ldr	r3, [r7, #4]
 306 008e 1B68     		ldr	r3, [r3]
 307 0090 282B     		cmp	r3, #40
 308 0092 02D1     		bne	.L15
 122:STM32F10x_Speex_Lib/libspeex/jitter.c ****          move_size -= 1;
 309              		.loc 2 122 0
 310 0094 BB68     		ldr	r3, [r7, #8]
 311 0096 013B     		subs	r3, r3, #1
 312 0098 BB60     		str	r3, [r7, #8]
 313              	.L15:
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 11


 123:STM32F10x_Speex_Lib/libspeex/jitter.c ****       SPEEX_MOVE(&tb->timing[pos+1], &tb->timing[pos], move_size);
 314              		.loc 2 123 0
 315 009a FB68     		ldr	r3, [r7, #12]
 316 009c 0133     		adds	r3, r3, #1
 317 009e 0233     		adds	r3, r3, #2
 318 00a0 9B00     		lsls	r3, r3, #2
 319 00a2 7A68     		ldr	r2, [r7, #4]
 320 00a4 D018     		adds	r0, r2, r3
 321 00a6 FB68     		ldr	r3, [r7, #12]
 322 00a8 0233     		adds	r3, r3, #2
 323 00aa 9B00     		lsls	r3, r3, #2
 324 00ac 7A68     		ldr	r2, [r7, #4]
 325 00ae D118     		adds	r1, r2, r3
 326 00b0 BB68     		ldr	r3, [r7, #8]
 327 00b2 9B00     		lsls	r3, r3, #2
 328 00b4 1A46     		mov	r2, r3
 329 00b6 FFF7FEFF 		bl	memmove
 124:STM32F10x_Speex_Lib/libspeex/jitter.c ****       SPEEX_MOVE(&tb->counts[pos+1], &tb->counts[pos], move_size);
 330              		.loc 2 124 0
 331 00ba FB68     		ldr	r3, [r7, #12]
 332 00bc 0133     		adds	r3, r3, #1
 333 00be 5433     		adds	r3, r3, #84
 334 00c0 5B00     		lsls	r3, r3, #1
 335 00c2 7A68     		ldr	r2, [r7, #4]
 336 00c4 D018     		adds	r0, r2, r3
 337 00c6 FB68     		ldr	r3, [r7, #12]
 338 00c8 5433     		adds	r3, r3, #84
 339 00ca 5B00     		lsls	r3, r3, #1
 340 00cc 7A68     		ldr	r2, [r7, #4]
 341 00ce D118     		adds	r1, r2, r3
 342 00d0 BB68     		ldr	r3, [r7, #8]
 343 00d2 5B00     		lsls	r3, r3, #1
 344 00d4 1A46     		mov	r2, r3
 345 00d6 FFF7FEFF 		bl	memmove
 346              	.L14:
 347              	.LBE2:
 125:STM32F10x_Speex_Lib/libspeex/jitter.c ****    }
 126:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /* Insert */
 127:STM32F10x_Speex_Lib/libspeex/jitter.c ****    tb->timing[pos] = timing;
 348              		.loc 2 127 0
 349 00da B7F90210 		ldrsh	r1, [r7, #2]
 350 00de 7B68     		ldr	r3, [r7, #4]
 351 00e0 FA68     		ldr	r2, [r7, #12]
 352 00e2 0232     		adds	r2, r2, #2
 353 00e4 43F82210 		str	r1, [r3, r2, lsl #2]
 128:STM32F10x_Speex_Lib/libspeex/jitter.c ****    tb->counts[pos] = tb->curr_count;
 354              		.loc 2 128 0
 355 00e8 7B68     		ldr	r3, [r7, #4]
 356 00ea 5B68     		ldr	r3, [r3, #4]
 357 00ec 19B2     		sxth	r1, r3
 358 00ee 7B68     		ldr	r3, [r7, #4]
 359 00f0 FA68     		ldr	r2, [r7, #12]
 360 00f2 5432     		adds	r2, r2, #84
 361 00f4 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 129:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 130:STM32F10x_Speex_Lib/libspeex/jitter.c ****    tb->curr_count++;
 362              		.loc 2 130 0
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 12


 363 00f8 7B68     		ldr	r3, [r7, #4]
 364 00fa 5B68     		ldr	r3, [r3, #4]
 365 00fc 5A1C     		adds	r2, r3, #1
 366 00fe 7B68     		ldr	r3, [r7, #4]
 367 0100 5A60     		str	r2, [r3, #4]
 131:STM32F10x_Speex_Lib/libspeex/jitter.c ****    if (tb->filled<MAX_TIMINGS)
 368              		.loc 2 131 0
 369 0102 7B68     		ldr	r3, [r7, #4]
 370 0104 1B68     		ldr	r3, [r3]
 371 0106 272B     		cmp	r3, #39
 372 0108 04DC     		bgt	.L6
 132:STM32F10x_Speex_Lib/libspeex/jitter.c ****       tb->filled++;
 373              		.loc 2 132 0
 374 010a 7B68     		ldr	r3, [r7, #4]
 375 010c 1B68     		ldr	r3, [r3]
 376 010e 5A1C     		adds	r2, r3, #1
 377 0110 7B68     		ldr	r3, [r7, #4]
 378 0112 1A60     		str	r2, [r3]
 379              	.L6:
 133:STM32F10x_Speex_Lib/libspeex/jitter.c **** }
 380              		.loc 2 133 0
 381 0114 1037     		adds	r7, r7, #16
 382              	.LCFI25:
 383              		.cfi_def_cfa_offset 8
 384 0116 BD46     		mov	sp, r7
 385              	.LCFI26:
 386              		.cfi_def_cfa_register 13
 387              		@ sp needed
 388 0118 80BD     		pop	{r7, pc}
 389              	.L17:
 390 011a 00BF     		.align	2
 391              	.L16:
 392 011c 00000000 		.word	.LC0
 393 0120 28000000 		.word	.LC1
 394              		.cfi_endproc
 395              	.LFE10:
 397              		.global	__aeabi_i2f
 398              		.global	__aeabi_fmul
 399              		.global	__aeabi_fdiv
 400              		.global	__aeabi_fadd
 401              		.global	__aeabi_f2iz
 402              		.section	.text.compute_opt_delay,"ax",%progbits
 403              		.align	2
 404              		.thumb
 405              		.thumb_func
 407              	compute_opt_delay:
 408              	.LFB11:
 134:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 135:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 136:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 137:STM32F10x_Speex_Lib/libspeex/jitter.c **** /** Jitter buffer structure */
 138:STM32F10x_Speex_Lib/libspeex/jitter.c **** struct JitterBuffer_ {
 139:STM32F10x_Speex_Lib/libspeex/jitter.c ****    spx_uint32_t pointer_timestamp;                             /**< Timestamp of what we will *get*
 140:STM32F10x_Speex_Lib/libspeex/jitter.c ****    spx_uint32_t last_returned_timestamp;                       /**< Useful for getting the next pac
 141:STM32F10x_Speex_Lib/libspeex/jitter.c ****    spx_uint32_t next_stop;                                     /**< Estimated time the next get() w
 142:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 143:STM32F10x_Speex_Lib/libspeex/jitter.c ****    spx_int32_t buffered;                                       /**< Amount of data we think is stil
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 13


 144:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 145:STM32F10x_Speex_Lib/libspeex/jitter.c ****    JitterBufferPacket packets[SPEEX_JITTER_MAX_BUFFER_SIZE];   /**< Packets stored in the buffer */
 146:STM32F10x_Speex_Lib/libspeex/jitter.c ****    spx_uint32_t arrival[SPEEX_JITTER_MAX_BUFFER_SIZE];         /**< Packet arrival time (0 means it
 147:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 148:STM32F10x_Speex_Lib/libspeex/jitter.c ****    void (*destroy) (void *);                                   /**< Callback for destroying a packe
 149:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 150:STM32F10x_Speex_Lib/libspeex/jitter.c ****    spx_int32_t delay_step;                                     /**< Size of the steps when adjustin
 151:STM32F10x_Speex_Lib/libspeex/jitter.c ****    spx_int32_t concealment_size;                               /**< Size of the packet loss conceal
 152:STM32F10x_Speex_Lib/libspeex/jitter.c ****    int reset_state;                                            /**< True if state was just reset   
 153:STM32F10x_Speex_Lib/libspeex/jitter.c ****    int buffer_margin;                                          /**< How many frames we want to keep
 154:STM32F10x_Speex_Lib/libspeex/jitter.c ****    int late_cutoff;                                            /**< How late must a packet be for i
 155:STM32F10x_Speex_Lib/libspeex/jitter.c ****    int interp_requested;                                       /**< An interpolation is requested b
 156:STM32F10x_Speex_Lib/libspeex/jitter.c ****    int auto_adjust;                                            /**< Whether to automatically adjust
 157:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 158:STM32F10x_Speex_Lib/libspeex/jitter.c ****    struct TimingBuffer _tb[MAX_BUFFERS];                       /**< Don't use those directly */
 159:STM32F10x_Speex_Lib/libspeex/jitter.c ****    struct TimingBuffer *timeBuffers[MAX_BUFFERS];              /**< Storing arrival time of latest 
 160:STM32F10x_Speex_Lib/libspeex/jitter.c ****    int window_size;                                            /**< Total window over which the lat
 161:STM32F10x_Speex_Lib/libspeex/jitter.c ****    int subwindow_size;                                         /**< Sub-window size for faster comp
 162:STM32F10x_Speex_Lib/libspeex/jitter.c ****    int max_late_rate;                                          /**< Absolute maximum amount of late
 163:STM32F10x_Speex_Lib/libspeex/jitter.c ****    int latency_tradeoff;                                       /**< Latency equivalent of losing on
 164:STM32F10x_Speex_Lib/libspeex/jitter.c ****    int auto_tradeoff;                                          /**< Latency equivalent of losing on
 165:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 166:STM32F10x_Speex_Lib/libspeex/jitter.c ****    int lost_count;                                             /**< Number of consecutive lost pack
 167:STM32F10x_Speex_Lib/libspeex/jitter.c **** };
 168:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 169:STM32F10x_Speex_Lib/libspeex/jitter.c **** /** Based on available data, this computes the optimal delay for the jitter buffer. 
 170:STM32F10x_Speex_Lib/libspeex/jitter.c ****    The optimised function is in timestamp units and is:
 171:STM32F10x_Speex_Lib/libspeex/jitter.c ****    cost = delay + late_factor*[number of frames that would be late if we used that delay]
 172:STM32F10x_Speex_Lib/libspeex/jitter.c ****    @param tb Array of buffers
 173:STM32F10x_Speex_Lib/libspeex/jitter.c ****    @param late_factor Equivalent cost of a late frame (in timestamp units) 
 174:STM32F10x_Speex_Lib/libspeex/jitter.c ****  */
 175:STM32F10x_Speex_Lib/libspeex/jitter.c **** static spx_int16_t compute_opt_delay(JitterBuffer *jitter)
 176:STM32F10x_Speex_Lib/libspeex/jitter.c **** {
 409              		.loc 2 176 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 80
 412              		@ frame_needed = 1, uses_anonymous_args = 0
 413 0000 90B5     		push	{r4, r7, lr}
 414              	.LCFI27:
 415              		.cfi_def_cfa_offset 12
 416              		.cfi_offset 4, -12
 417              		.cfi_offset 7, -8
 418              		.cfi_offset 14, -4
 419 0002 95B0     		sub	sp, sp, #84
 420              	.LCFI28:
 421              		.cfi_def_cfa_offset 96
 422 0004 00AF     		add	r7, sp, #0
 423              	.LCFI29:
 424              		.cfi_def_cfa_register 7
 425 0006 7860     		str	r0, [r7, #4]
 177:STM32F10x_Speex_Lib/libspeex/jitter.c ****    int i;
 178:STM32F10x_Speex_Lib/libspeex/jitter.c ****    spx_int16_t opt=0;
 426              		.loc 2 178 0
 427 0008 0023     		movs	r3, #0
 428 000a A7F84A30 		strh	r3, [r7, #74]	@ movhi
 179:STM32F10x_Speex_Lib/libspeex/jitter.c ****    spx_int32_t best_cost=0x7fffffff;
 429              		.loc 2 179 0
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 14


 430 000e 6FF00043 		mvn	r3, #-2147483648
 431 0012 7B64     		str	r3, [r7, #68]
 180:STM32F10x_Speex_Lib/libspeex/jitter.c ****    int late = 0;
 432              		.loc 2 180 0
 433 0014 0023     		movs	r3, #0
 434 0016 3B64     		str	r3, [r7, #64]
 181:STM32F10x_Speex_Lib/libspeex/jitter.c ****    int pos[MAX_BUFFERS];
 182:STM32F10x_Speex_Lib/libspeex/jitter.c ****    int tot_count;
 183:STM32F10x_Speex_Lib/libspeex/jitter.c ****    float late_factor;
 184:STM32F10x_Speex_Lib/libspeex/jitter.c ****    int penalty_taken = 0;
 435              		.loc 2 184 0
 436 0018 0023     		movs	r3, #0
 437 001a 7B63     		str	r3, [r7, #52]
 185:STM32F10x_Speex_Lib/libspeex/jitter.c ****    int best = 0;
 438              		.loc 2 185 0
 439 001c 0023     		movs	r3, #0
 440 001e 3B63     		str	r3, [r7, #48]
 186:STM32F10x_Speex_Lib/libspeex/jitter.c ****    int worst = 0;
 441              		.loc 2 186 0
 442 0020 0023     		movs	r3, #0
 443 0022 FB62     		str	r3, [r7, #44]
 187:STM32F10x_Speex_Lib/libspeex/jitter.c ****    spx_int32_t deltaT;
 188:STM32F10x_Speex_Lib/libspeex/jitter.c ****    struct TimingBuffer *tb;
 189:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 190:STM32F10x_Speex_Lib/libspeex/jitter.c ****    tb = jitter->_tb;
 444              		.loc 2 190 0
 445 0024 7B68     		ldr	r3, [r7, #4]
 446 0026 03F5B053 		add	r3, r3, #5632
 447 002a 1033     		adds	r3, r3, #16
 448 002c FB61     		str	r3, [r7, #28]
 191:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 192:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /* Number of packet timings we have received (including those we didn't keep) */
 193:STM32F10x_Speex_Lib/libspeex/jitter.c ****    tot_count = 0;
 449              		.loc 2 193 0
 450 002e 0023     		movs	r3, #0
 451 0030 FB63     		str	r3, [r7, #60]
 194:STM32F10x_Speex_Lib/libspeex/jitter.c ****    for (i=0;i<MAX_BUFFERS;i++)
 452              		.loc 2 194 0
 453 0032 0023     		movs	r3, #0
 454 0034 FB64     		str	r3, [r7, #76]
 455 0036 0EE0     		b	.L19
 456              	.L20:
 195:STM32F10x_Speex_Lib/libspeex/jitter.c ****       tot_count += tb[i].curr_count;
 457              		.loc 2 195 0 discriminator 3
 458 0038 FA6C     		ldr	r2, [r7, #76]
 459 003a 1346     		mov	r3, r2
 460 003c 5B01     		lsls	r3, r3, #5
 461 003e 9B1A     		subs	r3, r3, r2
 462 0040 DB00     		lsls	r3, r3, #3
 463 0042 1A46     		mov	r2, r3
 464 0044 FB69     		ldr	r3, [r7, #28]
 465 0046 1344     		add	r3, r3, r2
 466 0048 5B68     		ldr	r3, [r3, #4]
 467 004a FA6B     		ldr	r2, [r7, #60]
 468 004c 1344     		add	r3, r3, r2
 469 004e FB63     		str	r3, [r7, #60]
 194:STM32F10x_Speex_Lib/libspeex/jitter.c ****    for (i=0;i<MAX_BUFFERS;i++)
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 15


 470              		.loc 2 194 0 discriminator 3
 471 0050 FB6C     		ldr	r3, [r7, #76]
 472 0052 0133     		adds	r3, r3, #1
 473 0054 FB64     		str	r3, [r7, #76]
 474              	.L19:
 194:STM32F10x_Speex_Lib/libspeex/jitter.c ****    for (i=0;i<MAX_BUFFERS;i++)
 475              		.loc 2 194 0 is_stmt 0 discriminator 1
 476 0056 FB6C     		ldr	r3, [r7, #76]
 477 0058 022B     		cmp	r3, #2
 478 005a EDDD     		ble	.L20
 196:STM32F10x_Speex_Lib/libspeex/jitter.c ****    if (tot_count==0)
 479              		.loc 2 196 0 is_stmt 1
 480 005c FB6B     		ldr	r3, [r7, #60]
 481 005e 002B     		cmp	r3, #0
 482 0060 01D1     		bne	.L21
 197:STM32F10x_Speex_Lib/libspeex/jitter.c ****       return 0;
 483              		.loc 2 197 0
 484 0062 0023     		movs	r3, #0
 485 0064 2CE1     		b	.L41
 486              	.L21:
 198:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 199:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /* Compute cost for one lost packet */
 200:STM32F10x_Speex_Lib/libspeex/jitter.c ****    if (jitter->latency_tradeoff != 0)
 487              		.loc 2 200 0
 488 0066 7B68     		ldr	r3, [r7, #4]
 489 0068 03F5C853 		add	r3, r3, #6400
 490 006c 1033     		adds	r3, r3, #16
 491 006e 1B68     		ldr	r3, [r3]
 492 0070 002B     		cmp	r3, #0
 493 0072 19D0     		beq	.L23
 201:STM32F10x_Speex_Lib/libspeex/jitter.c ****       late_factor = jitter->latency_tradeoff * 100.0f / tot_count;
 494              		.loc 2 201 0
 495 0074 7B68     		ldr	r3, [r7, #4]
 496 0076 03F5C853 		add	r3, r3, #6400
 497 007a 1033     		adds	r3, r3, #16
 498 007c 1B68     		ldr	r3, [r3]
 499 007e 1846     		mov	r0, r3
 500 0080 FFF7FEFF 		bl	__aeabi_i2f
 501 0084 0346     		mov	r3, r0
 502 0086 9049     		ldr	r1, .L43
 503 0088 1846     		mov	r0, r3
 504 008a FFF7FEFF 		bl	__aeabi_fmul
 505 008e 0346     		mov	r3, r0
 506 0090 1C46     		mov	r4, r3
 507 0092 F86B     		ldr	r0, [r7, #60]
 508 0094 FFF7FEFF 		bl	__aeabi_i2f
 509 0098 0346     		mov	r3, r0
 510 009a 1946     		mov	r1, r3
 511 009c 2046     		mov	r0, r4
 512 009e FFF7FEFF 		bl	__aeabi_fdiv
 513 00a2 0346     		mov	r3, r0
 514 00a4 BB63     		str	r3, [r7, #56]	@ float
 515 00a6 13E0     		b	.L24
 516              	.L23:
 202:STM32F10x_Speex_Lib/libspeex/jitter.c ****    else
 203:STM32F10x_Speex_Lib/libspeex/jitter.c ****       late_factor = jitter->auto_tradeoff * jitter->window_size/tot_count;
 517              		.loc 2 203 0
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 16


 518 00a8 7B68     		ldr	r3, [r7, #4]
 519 00aa 03F5C853 		add	r3, r3, #6400
 520 00ae 1433     		adds	r3, r3, #20
 521 00b0 1A68     		ldr	r2, [r3]
 522 00b2 7B68     		ldr	r3, [r7, #4]
 523 00b4 03F5C853 		add	r3, r3, #6400
 524 00b8 0433     		adds	r3, r3, #4
 525 00ba 1B68     		ldr	r3, [r3]
 526 00bc 03FB02F2 		mul	r2, r3, r2
 527 00c0 FB6B     		ldr	r3, [r7, #60]
 528 00c2 92FBF3F3 		sdiv	r3, r2, r3
 529 00c6 1846     		mov	r0, r3
 530 00c8 FFF7FEFF 		bl	__aeabi_i2f
 531 00cc 0346     		mov	r3, r0
 532 00ce BB63     		str	r3, [r7, #56]	@ float
 533              	.L24:
 204:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 205:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /*fprintf(stderr, "late_factor = %f\n", late_factor);*/
 206:STM32F10x_Speex_Lib/libspeex/jitter.c ****    for (i=0;i<MAX_BUFFERS;i++)
 534              		.loc 2 206 0
 535 00d0 0023     		movs	r3, #0
 536 00d2 FB64     		str	r3, [r7, #76]
 537 00d4 0AE0     		b	.L25
 538              	.L26:
 207:STM32F10x_Speex_Lib/libspeex/jitter.c ****       pos[i] = 0;
 539              		.loc 2 207 0 discriminator 3
 540 00d6 FB6C     		ldr	r3, [r7, #76]
 541 00d8 9B00     		lsls	r3, r3, #2
 542 00da 07F15002 		add	r2, r7, #80
 543 00de 1344     		add	r3, r3, r2
 544 00e0 0022     		movs	r2, #0
 545 00e2 43F8482C 		str	r2, [r3, #-72]
 206:STM32F10x_Speex_Lib/libspeex/jitter.c ****       pos[i] = 0;
 546              		.loc 2 206 0 discriminator 3
 547 00e6 FB6C     		ldr	r3, [r7, #76]
 548 00e8 0133     		adds	r3, r3, #1
 549 00ea FB64     		str	r3, [r7, #76]
 550              	.L25:
 206:STM32F10x_Speex_Lib/libspeex/jitter.c ****       pos[i] = 0;
 551              		.loc 2 206 0 is_stmt 0 discriminator 1
 552 00ec FB6C     		ldr	r3, [r7, #76]
 553 00ee 022B     		cmp	r3, #2
 554 00f0 F1DD     		ble	.L26
 208:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 209:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /* Pick the TOP_DELAY "latest" packets (doesn't need to actually be late 
 210:STM32F10x_Speex_Lib/libspeex/jitter.c ****       for the current settings) */
 211:STM32F10x_Speex_Lib/libspeex/jitter.c ****    for (i=0;i<TOP_DELAY;i++)
 555              		.loc 2 211 0 is_stmt 1
 556 00f2 0023     		movs	r3, #0
 557 00f4 FB64     		str	r3, [r7, #76]
 558 00f6 C1E0     		b	.L27
 559              	.L39:
 560              	.LBB3:
 212:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 213:STM32F10x_Speex_Lib/libspeex/jitter.c ****       int j;
 214:STM32F10x_Speex_Lib/libspeex/jitter.c ****       int next=-1;
 561              		.loc 2 214 0
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 17


 562 00f8 4FF0FF33 		mov	r3, #-1
 563 00fc 7B62     		str	r3, [r7, #36]
 215:STM32F10x_Speex_Lib/libspeex/jitter.c ****       int latest = 32767;
 564              		.loc 2 215 0
 565 00fe 47F6FF73 		movw	r3, #32767
 566 0102 3B62     		str	r3, [r7, #32]
 216:STM32F10x_Speex_Lib/libspeex/jitter.c ****       /* Pick latest amoung all sub-windows */
 217:STM32F10x_Speex_Lib/libspeex/jitter.c ****       for (j=0;j<MAX_BUFFERS;j++)
 567              		.loc 2 217 0
 568 0104 0023     		movs	r3, #0
 569 0106 BB62     		str	r3, [r7, #40]
 570 0108 3EE0     		b	.L28
 571              	.L30:
 218:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
 219:STM32F10x_Speex_Lib/libspeex/jitter.c ****          if (pos[j] < tb[j].filled && tb[j].timing[pos[j]] < latest)
 572              		.loc 2 219 0
 573 010a BB6A     		ldr	r3, [r7, #40]
 574 010c 9B00     		lsls	r3, r3, #2
 575 010e 07F15002 		add	r2, r7, #80
 576 0112 1344     		add	r3, r3, r2
 577 0114 53F8481C 		ldr	r1, [r3, #-72]
 578 0118 BA6A     		ldr	r2, [r7, #40]
 579 011a 1346     		mov	r3, r2
 580 011c 5B01     		lsls	r3, r3, #5
 581 011e 9B1A     		subs	r3, r3, r2
 582 0120 DB00     		lsls	r3, r3, #3
 583 0122 1A46     		mov	r2, r3
 584 0124 FB69     		ldr	r3, [r7, #28]
 585 0126 1344     		add	r3, r3, r2
 586 0128 1B68     		ldr	r3, [r3]
 587 012a 9942     		cmp	r1, r3
 588 012c 29DA     		bge	.L29
 589              		.loc 2 219 0 is_stmt 0 discriminator 1
 590 012e BA6A     		ldr	r2, [r7, #40]
 591 0130 1346     		mov	r3, r2
 592 0132 5B01     		lsls	r3, r3, #5
 593 0134 9B1A     		subs	r3, r3, r2
 594 0136 DB00     		lsls	r3, r3, #3
 595 0138 1A46     		mov	r2, r3
 596 013a FB69     		ldr	r3, [r7, #28]
 597 013c 1A44     		add	r2, r2, r3
 598 013e BB6A     		ldr	r3, [r7, #40]
 599 0140 9B00     		lsls	r3, r3, #2
 600 0142 07F15001 		add	r1, r7, #80
 601 0146 0B44     		add	r3, r3, r1
 602 0148 53F8483C 		ldr	r3, [r3, #-72]
 603 014c 0233     		adds	r3, r3, #2
 604 014e 52F82320 		ldr	r2, [r2, r3, lsl #2]
 605 0152 3B6A     		ldr	r3, [r7, #32]
 606 0154 9A42     		cmp	r2, r3
 607 0156 14DA     		bge	.L29
 220:STM32F10x_Speex_Lib/libspeex/jitter.c ****          {
 221:STM32F10x_Speex_Lib/libspeex/jitter.c ****             next = j;
 608              		.loc 2 221 0 is_stmt 1
 609 0158 BB6A     		ldr	r3, [r7, #40]
 610 015a 7B62     		str	r3, [r7, #36]
 222:STM32F10x_Speex_Lib/libspeex/jitter.c ****             latest = tb[j].timing[pos[j]];
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 18


 611              		.loc 2 222 0
 612 015c BA6A     		ldr	r2, [r7, #40]
 613 015e 1346     		mov	r3, r2
 614 0160 5B01     		lsls	r3, r3, #5
 615 0162 9B1A     		subs	r3, r3, r2
 616 0164 DB00     		lsls	r3, r3, #3
 617 0166 1A46     		mov	r2, r3
 618 0168 FB69     		ldr	r3, [r7, #28]
 619 016a 1A44     		add	r2, r2, r3
 620 016c BB6A     		ldr	r3, [r7, #40]
 621 016e 9B00     		lsls	r3, r3, #2
 622 0170 07F15001 		add	r1, r7, #80
 623 0174 0B44     		add	r3, r3, r1
 624 0176 53F8483C 		ldr	r3, [r3, #-72]
 625 017a 0233     		adds	r3, r3, #2
 626 017c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 627 0180 3B62     		str	r3, [r7, #32]
 628              	.L29:
 217:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
 629              		.loc 2 217 0 discriminator 2
 630 0182 BB6A     		ldr	r3, [r7, #40]
 631 0184 0133     		adds	r3, r3, #1
 632 0186 BB62     		str	r3, [r7, #40]
 633              	.L28:
 217:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
 634              		.loc 2 217 0 is_stmt 0 discriminator 1
 635 0188 BB6A     		ldr	r3, [r7, #40]
 636 018a 022B     		cmp	r3, #2
 637 018c BDDD     		ble	.L30
 223:STM32F10x_Speex_Lib/libspeex/jitter.c ****          }
 224:STM32F10x_Speex_Lib/libspeex/jitter.c ****       }
 225:STM32F10x_Speex_Lib/libspeex/jitter.c ****       if (next != -1)
 638              		.loc 2 225 0 is_stmt 1
 639 018e 7B6A     		ldr	r3, [r7, #36]
 640 0190 B3F1FF3F 		cmp	r3, #-1
 641 0194 77D0     		beq	.L42
 642              	.LBB4:
 226:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
 227:STM32F10x_Speex_Lib/libspeex/jitter.c ****          spx_int32_t cost;
 228:STM32F10x_Speex_Lib/libspeex/jitter.c ****          
 229:STM32F10x_Speex_Lib/libspeex/jitter.c ****          if (i==0)
 643              		.loc 2 229 0
 644 0196 FB6C     		ldr	r3, [r7, #76]
 645 0198 002B     		cmp	r3, #0
 646 019a 01D1     		bne	.L32
 230:STM32F10x_Speex_Lib/libspeex/jitter.c ****             worst = latest;
 647              		.loc 2 230 0
 648 019c 3B6A     		ldr	r3, [r7, #32]
 649 019e FB62     		str	r3, [r7, #44]
 650              	.L32:
 231:STM32F10x_Speex_Lib/libspeex/jitter.c ****          best = latest;
 651              		.loc 2 231 0
 652 01a0 3B6A     		ldr	r3, [r7, #32]
 653 01a2 3B63     		str	r3, [r7, #48]
 232:STM32F10x_Speex_Lib/libspeex/jitter.c ****          latest = ROUND_DOWN(latest, jitter->delay_step);
 654              		.loc 2 232 0
 655 01a4 3B6A     		ldr	r3, [r7, #32]
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 19


 656 01a6 002B     		cmp	r3, #0
 657 01a8 16DA     		bge	.L33
 658              		.loc 2 232 0 is_stmt 0 discriminator 1
 659 01aa 7B68     		ldr	r3, [r7, #4]
 660 01ac 03F5AF53 		add	r3, r3, #5600
 661 01b0 1433     		adds	r3, r3, #20
 662 01b2 1B68     		ldr	r3, [r3]
 663 01b4 3A6A     		ldr	r2, [r7, #32]
 664 01b6 D31A     		subs	r3, r2, r3
 665 01b8 5A1C     		adds	r2, r3, #1
 666 01ba 7B68     		ldr	r3, [r7, #4]
 667 01bc 03F5AF53 		add	r3, r3, #5600
 668 01c0 1433     		adds	r3, r3, #20
 669 01c2 1B68     		ldr	r3, [r3]
 670 01c4 92FBF3F2 		sdiv	r2, r2, r3
 671 01c8 7B68     		ldr	r3, [r7, #4]
 672 01ca 03F5AF53 		add	r3, r3, #5600
 673 01ce 1433     		adds	r3, r3, #20
 674 01d0 1B68     		ldr	r3, [r3]
 675 01d2 03FB02F3 		mul	r3, r3, r2
 676 01d6 0EE0     		b	.L34
 677              	.L33:
 678              		.loc 2 232 0 discriminator 2
 679 01d8 7B68     		ldr	r3, [r7, #4]
 680 01da 03F5AF53 		add	r3, r3, #5600
 681 01de 1433     		adds	r3, r3, #20
 682 01e0 1B68     		ldr	r3, [r3]
 683 01e2 3A6A     		ldr	r2, [r7, #32]
 684 01e4 92FBF3F2 		sdiv	r2, r2, r3
 685 01e8 7B68     		ldr	r3, [r7, #4]
 686 01ea 03F5AF53 		add	r3, r3, #5600
 687 01ee 1433     		adds	r3, r3, #20
 688 01f0 1B68     		ldr	r3, [r3]
 689 01f2 03FB02F3 		mul	r3, r3, r2
 690              	.L34:
 691              		.loc 2 232 0 discriminator 4
 692 01f6 3B62     		str	r3, [r7, #32]
 233:STM32F10x_Speex_Lib/libspeex/jitter.c ****          pos[next]++;
 693              		.loc 2 233 0 is_stmt 1 discriminator 4
 694 01f8 7B6A     		ldr	r3, [r7, #36]
 695 01fa 9B00     		lsls	r3, r3, #2
 696 01fc 07F15002 		add	r2, r7, #80
 697 0200 1344     		add	r3, r3, r2
 698 0202 53F8483C 		ldr	r3, [r3, #-72]
 699 0206 5A1C     		adds	r2, r3, #1
 700 0208 7B6A     		ldr	r3, [r7, #36]
 701 020a 9B00     		lsls	r3, r3, #2
 702 020c 07F15001 		add	r1, r7, #80
 703 0210 0B44     		add	r3, r3, r1
 704 0212 43F8482C 		str	r2, [r3, #-72]
 234:STM32F10x_Speex_Lib/libspeex/jitter.c ****          
 235:STM32F10x_Speex_Lib/libspeex/jitter.c ****          /* Actual cost function that tells us how bad using this delay would be */
 236:STM32F10x_Speex_Lib/libspeex/jitter.c ****          cost = -latest + late_factor*late;
 705              		.loc 2 236 0 discriminator 4
 706 0216 3B6A     		ldr	r3, [r7, #32]
 707 0218 5B42     		negs	r3, r3
 708 021a 1846     		mov	r0, r3
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 20


 709 021c FFF7FEFF 		bl	__aeabi_i2f
 710 0220 0446     		mov	r4, r0
 711 0222 386C     		ldr	r0, [r7, #64]
 712 0224 FFF7FEFF 		bl	__aeabi_i2f
 713 0228 0346     		mov	r3, r0
 714 022a B96B     		ldr	r1, [r7, #56]	@ float
 715 022c 1846     		mov	r0, r3
 716 022e FFF7FEFF 		bl	__aeabi_fmul
 717 0232 0346     		mov	r3, r0
 718 0234 1946     		mov	r1, r3
 719 0236 2046     		mov	r0, r4
 720 0238 FFF7FEFF 		bl	__aeabi_fadd
 721 023c 0346     		mov	r3, r0
 722 023e 1846     		mov	r0, r3
 723 0240 FFF7FEFF 		bl	__aeabi_f2iz
 724 0244 0346     		mov	r3, r0
 725 0246 BB61     		str	r3, [r7, #24]
 237:STM32F10x_Speex_Lib/libspeex/jitter.c ****          /*fprintf(stderr, "cost %d = %d + %f * %d\n", cost, -latest, late_factor, late);*/
 238:STM32F10x_Speex_Lib/libspeex/jitter.c ****          if (cost < best_cost)
 726              		.loc 2 238 0 discriminator 4
 727 0248 BA69     		ldr	r2, [r7, #24]
 728 024a 7B6C     		ldr	r3, [r7, #68]
 729 024c 9A42     		cmp	r2, r3
 730 024e 04DA     		bge	.L36
 239:STM32F10x_Speex_Lib/libspeex/jitter.c ****          {
 240:STM32F10x_Speex_Lib/libspeex/jitter.c ****             best_cost = cost;
 731              		.loc 2 240 0
 732 0250 BB69     		ldr	r3, [r7, #24]
 733 0252 7B64     		str	r3, [r7, #68]
 241:STM32F10x_Speex_Lib/libspeex/jitter.c ****             opt = latest;
 734              		.loc 2 241 0
 735 0254 3B6A     		ldr	r3, [r7, #32]
 736 0256 A7F84A30 		strh	r3, [r7, #74]	@ movhi
 737              	.L36:
 738              	.LBE4:
 242:STM32F10x_Speex_Lib/libspeex/jitter.c ****          }
 243:STM32F10x_Speex_Lib/libspeex/jitter.c ****       } else {
 244:STM32F10x_Speex_Lib/libspeex/jitter.c ****          break;
 245:STM32F10x_Speex_Lib/libspeex/jitter.c ****       }
 246:STM32F10x_Speex_Lib/libspeex/jitter.c ****       
 247:STM32F10x_Speex_Lib/libspeex/jitter.c ****       /* For the next timing we will consider, there will be one more late packet to count */
 248:STM32F10x_Speex_Lib/libspeex/jitter.c ****       late++;
 739              		.loc 2 248 0
 740 025a 3B6C     		ldr	r3, [r7, #64]
 741 025c 0133     		adds	r3, r3, #1
 742 025e 3B64     		str	r3, [r7, #64]
 249:STM32F10x_Speex_Lib/libspeex/jitter.c ****       /* Two-frame penalty if we're going to increase the amount of late frames (hysteresis) */
 250:STM32F10x_Speex_Lib/libspeex/jitter.c ****       if (latest >= 0 && !penalty_taken)
 743              		.loc 2 250 0
 744 0260 3B6A     		ldr	r3, [r7, #32]
 745 0262 002B     		cmp	r3, #0
 746 0264 07DB     		blt	.L38
 747              		.loc 2 250 0 is_stmt 0 discriminator 1
 748 0266 7B6B     		ldr	r3, [r7, #52]
 749 0268 002B     		cmp	r3, #0
 750 026a 04D1     		bne	.L38
 251:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 21


 252:STM32F10x_Speex_Lib/libspeex/jitter.c ****          penalty_taken = 1;
 751              		.loc 2 252 0 is_stmt 1
 752 026c 0123     		movs	r3, #1
 753 026e 7B63     		str	r3, [r7, #52]
 253:STM32F10x_Speex_Lib/libspeex/jitter.c ****          late+=4;
 754              		.loc 2 253 0
 755 0270 3B6C     		ldr	r3, [r7, #64]
 756 0272 0433     		adds	r3, r3, #4
 757 0274 3B64     		str	r3, [r7, #64]
 758              	.L38:
 759              	.LBE3:
 211:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 760              		.loc 2 211 0 discriminator 2
 761 0276 FB6C     		ldr	r3, [r7, #76]
 762 0278 0133     		adds	r3, r3, #1
 763 027a FB64     		str	r3, [r7, #76]
 764              	.L27:
 211:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 765              		.loc 2 211 0 is_stmt 0 discriminator 1
 766 027c FB6C     		ldr	r3, [r7, #76]
 767 027e 272B     		cmp	r3, #39
 768 0280 7FF73AAF 		ble	.L39
 769 0284 00E0     		b	.L37
 770              	.L42:
 771              	.LBB5:
 244:STM32F10x_Speex_Lib/libspeex/jitter.c ****       }
 772              		.loc 2 244 0 is_stmt 1
 773 0286 00BF     		nop
 774              	.L37:
 775              	.LBE5:
 254:STM32F10x_Speex_Lib/libspeex/jitter.c ****       }
 255:STM32F10x_Speex_Lib/libspeex/jitter.c ****    }
 256:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 257:STM32F10x_Speex_Lib/libspeex/jitter.c ****    deltaT = best-worst;
 776              		.loc 2 257 0
 777 0288 3A6B     		ldr	r2, [r7, #48]
 778 028a FB6A     		ldr	r3, [r7, #44]
 779 028c D31A     		subs	r3, r2, r3
 780 028e 7B61     		str	r3, [r7, #20]
 258:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /* This is a default "automatic latency tradeoff" when none is provided */
 259:STM32F10x_Speex_Lib/libspeex/jitter.c ****    jitter->auto_tradeoff = 1 + deltaT/TOP_DELAY;
 781              		.loc 2 259 0
 782 0290 7B69     		ldr	r3, [r7, #20]
 783 0292 0E4A     		ldr	r2, .L43+4
 784 0294 82FB0312 		smull	r1, r2, r2, r3
 785 0298 1211     		asrs	r2, r2, #4
 786 029a DB17     		asrs	r3, r3, #31
 787 029c D31A     		subs	r3, r2, r3
 788 029e 5A1C     		adds	r2, r3, #1
 789 02a0 7B68     		ldr	r3, [r7, #4]
 790 02a2 03F5C853 		add	r3, r3, #6400
 791 02a6 1433     		adds	r3, r3, #20
 792 02a8 1A60     		str	r2, [r3]
 260:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /*fprintf(stderr, "auto_tradeoff = %d (%d %d %d)\n", jitter->auto_tradeoff, best, worst, i);*/
 261:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 262:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /* FIXME: Compute a short-term estimate too and combine with the long-term one */
 263:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 22


 264:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /* Prevents reducing the buffer size when we haven't really had much data */
 265:STM32F10x_Speex_Lib/libspeex/jitter.c ****    if (tot_count < TOP_DELAY && opt > 0)
 793              		.loc 2 265 0
 794 02aa FB6B     		ldr	r3, [r7, #60]
 795 02ac 272B     		cmp	r3, #39
 796 02ae 05DC     		bgt	.L40
 797              		.loc 2 265 0 is_stmt 0 discriminator 1
 798 02b0 B7F94A30 		ldrsh	r3, [r7, #74]
 799 02b4 002B     		cmp	r3, #0
 800 02b6 01DD     		ble	.L40
 266:STM32F10x_Speex_Lib/libspeex/jitter.c ****       return 0;
 801              		.loc 2 266 0 is_stmt 1
 802 02b8 0023     		movs	r3, #0
 803 02ba 01E0     		b	.L41
 804              	.L40:
 267:STM32F10x_Speex_Lib/libspeex/jitter.c ****    return opt;
 805              		.loc 2 267 0
 806 02bc B7F94A30 		ldrsh	r3, [r7, #74]
 807              	.L41:
 268:STM32F10x_Speex_Lib/libspeex/jitter.c **** }
 808              		.loc 2 268 0 discriminator 1
 809 02c0 1846     		mov	r0, r3
 810 02c2 5437     		adds	r7, r7, #84
 811              	.LCFI30:
 812              		.cfi_def_cfa_offset 12
 813 02c4 BD46     		mov	sp, r7
 814              	.LCFI31:
 815              		.cfi_def_cfa_register 13
 816              		@ sp needed
 817 02c6 90BD     		pop	{r4, r7, pc}
 818              	.L44:
 819              		.align	2
 820              	.L43:
 821 02c8 0000C842 		.word	1120403456
 822 02cc 67666666 		.word	1717986919
 823              		.cfi_endproc
 824              	.LFE11:
 826              		.section	.text.jitter_buffer_init,"ax",%progbits
 827              		.align	2
 828              		.global	jitter_buffer_init
 829              		.thumb
 830              		.thumb_func
 832              	jitter_buffer_init:
 833              	.LFB12:
 269:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 270:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 271:STM32F10x_Speex_Lib/libspeex/jitter.c **** /** Initialise jitter buffer */
 272:STM32F10x_Speex_Lib/libspeex/jitter.c **** EXPORT JitterBuffer *jitter_buffer_init(int step_size)
 273:STM32F10x_Speex_Lib/libspeex/jitter.c **** {
 834              		.loc 2 273 0
 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 24
 837              		@ frame_needed = 1, uses_anonymous_args = 0
 838 0000 80B5     		push	{r7, lr}
 839              	.LCFI32:
 840              		.cfi_def_cfa_offset 8
 841              		.cfi_offset 7, -8
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 23


 842              		.cfi_offset 14, -4
 843 0002 86B0     		sub	sp, sp, #24
 844              	.LCFI33:
 845              		.cfi_def_cfa_offset 32
 846 0004 00AF     		add	r7, sp, #0
 847              	.LCFI34:
 848              		.cfi_def_cfa_register 7
 849 0006 7860     		str	r0, [r7, #4]
 274:STM32F10x_Speex_Lib/libspeex/jitter.c ****    JitterBuffer *jitter = (JitterBuffer*)speex_alloc(sizeof(JitterBuffer));
 850              		.loc 2 274 0
 851 0008 41F61C10 		movw	r0, #6428
 852 000c FFF7FEFF 		bl	speex_alloc
 853 0010 3861     		str	r0, [r7, #16]
 275:STM32F10x_Speex_Lib/libspeex/jitter.c ****    if (jitter)
 854              		.loc 2 275 0
 855 0012 3B69     		ldr	r3, [r7, #16]
 856 0014 002B     		cmp	r3, #0
 857 0016 47D0     		beq	.L46
 858              	.LBB6:
 276:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 277:STM32F10x_Speex_Lib/libspeex/jitter.c ****       int i;
 278:STM32F10x_Speex_Lib/libspeex/jitter.c ****       spx_int32_t tmp;
 279:STM32F10x_Speex_Lib/libspeex/jitter.c ****       for (i=0;i<SPEEX_JITTER_MAX_BUFFER_SIZE;i++)
 859              		.loc 2 279 0
 860 0018 0023     		movs	r3, #0
 861 001a 7B61     		str	r3, [r7, #20]
 862 001c 0CE0     		b	.L47
 863              	.L48:
 280:STM32F10x_Speex_Lib/libspeex/jitter.c ****          jitter->packets[i].data=NULL;
 864              		.loc 2 280 0 discriminator 3
 865 001e 3969     		ldr	r1, [r7, #16]
 866 0020 7A69     		ldr	r2, [r7, #20]
 867 0022 1346     		mov	r3, r2
 868 0024 5B00     		lsls	r3, r3, #1
 869 0026 1344     		add	r3, r3, r2
 870 0028 DB00     		lsls	r3, r3, #3
 871 002a 0B44     		add	r3, r3, r1
 872 002c 1033     		adds	r3, r3, #16
 873 002e 0022     		movs	r2, #0
 874 0030 1A60     		str	r2, [r3]
 279:STM32F10x_Speex_Lib/libspeex/jitter.c ****          jitter->packets[i].data=NULL;
 875              		.loc 2 279 0 discriminator 3
 876 0032 7B69     		ldr	r3, [r7, #20]
 877 0034 0133     		adds	r3, r3, #1
 878 0036 7B61     		str	r3, [r7, #20]
 879              	.L47:
 279:STM32F10x_Speex_Lib/libspeex/jitter.c ****          jitter->packets[i].data=NULL;
 880              		.loc 2 279 0 is_stmt 0 discriminator 1
 881 0038 7B69     		ldr	r3, [r7, #20]
 882 003a C72B     		cmp	r3, #199
 883 003c EFDD     		ble	.L48
 281:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->delay_step = step_size;
 884              		.loc 2 281 0 is_stmt 1
 885 003e 3B69     		ldr	r3, [r7, #16]
 886 0040 03F5AF53 		add	r3, r3, #5600
 887 0044 1433     		adds	r3, r3, #20
 888 0046 7A68     		ldr	r2, [r7, #4]
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 24


 889 0048 1A60     		str	r2, [r3]
 282:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->concealment_size = step_size;
 890              		.loc 2 282 0
 891 004a 3B69     		ldr	r3, [r7, #16]
 892 004c 03F5AF53 		add	r3, r3, #5600
 893 0050 1833     		adds	r3, r3, #24
 894 0052 7A68     		ldr	r2, [r7, #4]
 895 0054 1A60     		str	r2, [r3]
 283:STM32F10x_Speex_Lib/libspeex/jitter.c ****       /*FIXME: Should this be 0 or 1?*/
 284:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->buffer_margin = 0;
 896              		.loc 2 284 0
 897 0056 3B69     		ldr	r3, [r7, #16]
 898 0058 03F5B053 		add	r3, r3, #5632
 899 005c 0022     		movs	r2, #0
 900 005e 1A60     		str	r2, [r3]
 285:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->late_cutoff = 50;
 901              		.loc 2 285 0
 902 0060 3B69     		ldr	r3, [r7, #16]
 903 0062 03F5B053 		add	r3, r3, #5632
 904 0066 0433     		adds	r3, r3, #4
 905 0068 3222     		movs	r2, #50
 906 006a 1A60     		str	r2, [r3]
 286:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->destroy = NULL;
 907              		.loc 2 286 0
 908 006c 3B69     		ldr	r3, [r7, #16]
 909 006e 03F5AF53 		add	r3, r3, #5600
 910 0072 1033     		adds	r3, r3, #16
 911 0074 0022     		movs	r2, #0
 912 0076 1A60     		str	r2, [r3]
 287:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->latency_tradeoff = 0;
 913              		.loc 2 287 0
 914 0078 3B69     		ldr	r3, [r7, #16]
 915 007a 03F5C853 		add	r3, r3, #6400
 916 007e 1033     		adds	r3, r3, #16
 917 0080 0022     		movs	r2, #0
 918 0082 1A60     		str	r2, [r3]
 288:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->auto_adjust = 1;
 919              		.loc 2 288 0
 920 0084 3B69     		ldr	r3, [r7, #16]
 921 0086 03F5B053 		add	r3, r3, #5632
 922 008a 0C33     		adds	r3, r3, #12
 923 008c 0122     		movs	r2, #1
 924 008e 1A60     		str	r2, [r3]
 289:STM32F10x_Speex_Lib/libspeex/jitter.c ****       tmp = 4;
 925              		.loc 2 289 0
 926 0090 0423     		movs	r3, #4
 927 0092 FB60     		str	r3, [r7, #12]
 290:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter_buffer_ctl(jitter, JITTER_BUFFER_SET_MAX_LATE_RATE, &tmp);
 928              		.loc 2 290 0
 929 0094 07F10C03 		add	r3, r7, #12
 930 0098 1A46     		mov	r2, r3
 931 009a 0A21     		movs	r1, #10
 932 009c 3869     		ldr	r0, [r7, #16]
 933 009e FFF7FEFF 		bl	jitter_buffer_ctl
 291:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter_buffer_reset(jitter);
 934              		.loc 2 291 0
 935 00a2 3869     		ldr	r0, [r7, #16]
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 25


 936 00a4 FFF7FEFF 		bl	jitter_buffer_reset
 937              	.L46:
 938              	.LBE6:
 292:STM32F10x_Speex_Lib/libspeex/jitter.c ****    }
 293:STM32F10x_Speex_Lib/libspeex/jitter.c ****    return jitter;
 939              		.loc 2 293 0
 940 00a8 3B69     		ldr	r3, [r7, #16]
 294:STM32F10x_Speex_Lib/libspeex/jitter.c **** }
 941              		.loc 2 294 0
 942 00aa 1846     		mov	r0, r3
 943 00ac 1837     		adds	r7, r7, #24
 944              	.LCFI35:
 945              		.cfi_def_cfa_offset 8
 946 00ae BD46     		mov	sp, r7
 947              	.LCFI36:
 948              		.cfi_def_cfa_register 13
 949              		@ sp needed
 950 00b0 80BD     		pop	{r7, pc}
 951              		.cfi_endproc
 952              	.LFE12:
 954 00b2 00BF     		.section	.text.jitter_buffer_reset,"ax",%progbits
 955              		.align	2
 956              		.global	jitter_buffer_reset
 957              		.thumb
 958              		.thumb_func
 960              	jitter_buffer_reset:
 961              	.LFB13:
 295:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 296:STM32F10x_Speex_Lib/libspeex/jitter.c **** /** Reset jitter buffer */
 297:STM32F10x_Speex_Lib/libspeex/jitter.c **** EXPORT void jitter_buffer_reset(JitterBuffer *jitter)
 298:STM32F10x_Speex_Lib/libspeex/jitter.c **** {
 962              		.loc 2 298 0
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 16
 965              		@ frame_needed = 1, uses_anonymous_args = 0
 966 0000 80B5     		push	{r7, lr}
 967              	.LCFI37:
 968              		.cfi_def_cfa_offset 8
 969              		.cfi_offset 7, -8
 970              		.cfi_offset 14, -4
 971 0002 84B0     		sub	sp, sp, #16
 972              	.LCFI38:
 973              		.cfi_def_cfa_offset 24
 974 0004 00AF     		add	r7, sp, #0
 975              	.LCFI39:
 976              		.cfi_def_cfa_register 7
 977 0006 7860     		str	r0, [r7, #4]
 299:STM32F10x_Speex_Lib/libspeex/jitter.c ****    int i;
 300:STM32F10x_Speex_Lib/libspeex/jitter.c ****    for (i=0;i<SPEEX_JITTER_MAX_BUFFER_SIZE;i++)
 978              		.loc 2 300 0
 979 0008 0023     		movs	r3, #0
 980 000a FB60     		str	r3, [r7, #12]
 981 000c 3BE0     		b	.L51
 982              	.L55:
 301:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 302:STM32F10x_Speex_Lib/libspeex/jitter.c ****       if (jitter->packets[i].data)
 983              		.loc 2 302 0
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 26


 984 000e 7968     		ldr	r1, [r7, #4]
 985 0010 FA68     		ldr	r2, [r7, #12]
 986 0012 1346     		mov	r3, r2
 987 0014 5B00     		lsls	r3, r3, #1
 988 0016 1344     		add	r3, r3, r2
 989 0018 DB00     		lsls	r3, r3, #3
 990 001a 0B44     		add	r3, r3, r1
 991 001c 1033     		adds	r3, r3, #16
 992 001e 1B68     		ldr	r3, [r3]
 993 0020 002B     		cmp	r3, #0
 994 0022 2DD0     		beq	.L52
 303:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
 304:STM32F10x_Speex_Lib/libspeex/jitter.c ****          if (jitter->destroy)
 995              		.loc 2 304 0
 996 0024 7B68     		ldr	r3, [r7, #4]
 997 0026 03F5AF53 		add	r3, r3, #5600
 998 002a 1033     		adds	r3, r3, #16
 999 002c 1B68     		ldr	r3, [r3]
 1000 002e 002B     		cmp	r3, #0
 1001 0030 10D0     		beq	.L53
 305:STM32F10x_Speex_Lib/libspeex/jitter.c ****             jitter->destroy(jitter->packets[i].data);
 1002              		.loc 2 305 0
 1003 0032 7B68     		ldr	r3, [r7, #4]
 1004 0034 03F5AF53 		add	r3, r3, #5600
 1005 0038 1033     		adds	r3, r3, #16
 1006 003a 1968     		ldr	r1, [r3]
 1007 003c 7868     		ldr	r0, [r7, #4]
 1008 003e FA68     		ldr	r2, [r7, #12]
 1009 0040 1346     		mov	r3, r2
 1010 0042 5B00     		lsls	r3, r3, #1
 1011 0044 1344     		add	r3, r3, r2
 1012 0046 DB00     		lsls	r3, r3, #3
 1013 0048 0344     		add	r3, r3, r0
 1014 004a 1033     		adds	r3, r3, #16
 1015 004c 1B68     		ldr	r3, [r3]
 1016 004e 1846     		mov	r0, r3
 1017 0050 8847     		blx	r1
 1018 0052 0BE0     		b	.L54
 1019              	.L53:
 306:STM32F10x_Speex_Lib/libspeex/jitter.c ****          else
 307:STM32F10x_Speex_Lib/libspeex/jitter.c ****             speex_free(jitter->packets[i].data);
 1020              		.loc 2 307 0
 1021 0054 7968     		ldr	r1, [r7, #4]
 1022 0056 FA68     		ldr	r2, [r7, #12]
 1023 0058 1346     		mov	r3, r2
 1024 005a 5B00     		lsls	r3, r3, #1
 1025 005c 1344     		add	r3, r3, r2
 1026 005e DB00     		lsls	r3, r3, #3
 1027 0060 0B44     		add	r3, r3, r1
 1028 0062 1033     		adds	r3, r3, #16
 1029 0064 1B68     		ldr	r3, [r3]
 1030 0066 1846     		mov	r0, r3
 1031 0068 FFF7FEFF 		bl	speex_free
 1032              	.L54:
 308:STM32F10x_Speex_Lib/libspeex/jitter.c ****          jitter->packets[i].data = NULL;
 1033              		.loc 2 308 0
 1034 006c 7968     		ldr	r1, [r7, #4]
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 27


 1035 006e FA68     		ldr	r2, [r7, #12]
 1036 0070 1346     		mov	r3, r2
 1037 0072 5B00     		lsls	r3, r3, #1
 1038 0074 1344     		add	r3, r3, r2
 1039 0076 DB00     		lsls	r3, r3, #3
 1040 0078 0B44     		add	r3, r3, r1
 1041 007a 1033     		adds	r3, r3, #16
 1042 007c 0022     		movs	r2, #0
 1043 007e 1A60     		str	r2, [r3]
 1044              	.L52:
 300:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 1045              		.loc 2 300 0 discriminator 2
 1046 0080 FB68     		ldr	r3, [r7, #12]
 1047 0082 0133     		adds	r3, r3, #1
 1048 0084 FB60     		str	r3, [r7, #12]
 1049              	.L51:
 300:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 1050              		.loc 2 300 0 is_stmt 0 discriminator 1
 1051 0086 FB68     		ldr	r3, [r7, #12]
 1052 0088 C72B     		cmp	r3, #199
 1053 008a C0DD     		ble	.L55
 309:STM32F10x_Speex_Lib/libspeex/jitter.c ****       }
 310:STM32F10x_Speex_Lib/libspeex/jitter.c ****    }
 311:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /* Timestamp is actually undefined at this point */
 312:STM32F10x_Speex_Lib/libspeex/jitter.c ****    jitter->pointer_timestamp = 0;
 1054              		.loc 2 312 0 is_stmt 1
 1055 008c 7B68     		ldr	r3, [r7, #4]
 1056 008e 0022     		movs	r2, #0
 1057 0090 1A60     		str	r2, [r3]
 313:STM32F10x_Speex_Lib/libspeex/jitter.c ****    jitter->next_stop = 0;
 1058              		.loc 2 313 0
 1059 0092 7B68     		ldr	r3, [r7, #4]
 1060 0094 0022     		movs	r2, #0
 1061 0096 9A60     		str	r2, [r3, #8]
 314:STM32F10x_Speex_Lib/libspeex/jitter.c ****    jitter->reset_state = 1;
 1062              		.loc 2 314 0
 1063 0098 7B68     		ldr	r3, [r7, #4]
 1064 009a 03F5AF53 		add	r3, r3, #5600
 1065 009e 1C33     		adds	r3, r3, #28
 1066 00a0 0122     		movs	r2, #1
 1067 00a2 1A60     		str	r2, [r3]
 315:STM32F10x_Speex_Lib/libspeex/jitter.c ****    jitter->lost_count = 0;
 1068              		.loc 2 315 0
 1069 00a4 7B68     		ldr	r3, [r7, #4]
 1070 00a6 03F5C853 		add	r3, r3, #6400
 1071 00aa 1833     		adds	r3, r3, #24
 1072 00ac 0022     		movs	r2, #0
 1073 00ae 1A60     		str	r2, [r3]
 316:STM32F10x_Speex_Lib/libspeex/jitter.c ****    jitter->buffered = 0;
 1074              		.loc 2 316 0
 1075 00b0 7B68     		ldr	r3, [r7, #4]
 1076 00b2 0022     		movs	r2, #0
 1077 00b4 DA60     		str	r2, [r3, #12]
 317:STM32F10x_Speex_Lib/libspeex/jitter.c ****    jitter->auto_tradeoff = 32000;
 1078              		.loc 2 317 0
 1079 00b6 7B68     		ldr	r3, [r7, #4]
 1080 00b8 03F5C853 		add	r3, r3, #6400
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 28


 1081 00bc 1433     		adds	r3, r3, #20
 1082 00be 4FF4FA42 		mov	r2, #32000
 1083 00c2 1A60     		str	r2, [r3]
 318:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 319:STM32F10x_Speex_Lib/libspeex/jitter.c ****    for (i=0;i<MAX_BUFFERS;i++)
 1084              		.loc 2 319 0
 1085 00c4 0023     		movs	r3, #0
 1086 00c6 FB60     		str	r3, [r7, #12]
 1087 00c8 1FE0     		b	.L56
 1088              	.L57:
 320:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 321:STM32F10x_Speex_Lib/libspeex/jitter.c ****       tb_init(&jitter->_tb[i]);
 1089              		.loc 2 321 0 discriminator 3
 1090 00ca FA68     		ldr	r2, [r7, #12]
 1091 00cc 1346     		mov	r3, r2
 1092 00ce 5B01     		lsls	r3, r3, #5
 1093 00d0 9B1A     		subs	r3, r3, r2
 1094 00d2 DB00     		lsls	r3, r3, #3
 1095 00d4 03F5B053 		add	r3, r3, #5632
 1096 00d8 1033     		adds	r3, r3, #16
 1097 00da 7A68     		ldr	r2, [r7, #4]
 1098 00dc 1344     		add	r3, r3, r2
 1099 00de 1846     		mov	r0, r3
 1100 00e0 FFF7FEFF 		bl	tb_init
 322:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->timeBuffers[i] = &jitter->_tb[i];
 1101              		.loc 2 322 0 discriminator 3
 1102 00e4 FA68     		ldr	r2, [r7, #12]
 1103 00e6 1346     		mov	r3, r2
 1104 00e8 5B01     		lsls	r3, r3, #5
 1105 00ea 9B1A     		subs	r3, r3, r2
 1106 00ec DB00     		lsls	r3, r3, #3
 1107 00ee 03F5B053 		add	r3, r3, #5632
 1108 00f2 1033     		adds	r3, r3, #16
 1109 00f4 7A68     		ldr	r2, [r7, #4]
 1110 00f6 D118     		adds	r1, r2, r3
 1111 00f8 7B68     		ldr	r3, [r7, #4]
 1112 00fa FA68     		ldr	r2, [r7, #12]
 1113 00fc 02F23E62 		addw	r2, r2, #1598
 1114 0100 43F82210 		str	r1, [r3, r2, lsl #2]
 319:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 1115              		.loc 2 319 0 discriminator 3
 1116 0104 FB68     		ldr	r3, [r7, #12]
 1117 0106 0133     		adds	r3, r3, #1
 1118 0108 FB60     		str	r3, [r7, #12]
 1119              	.L56:
 319:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 1120              		.loc 2 319 0 is_stmt 0 discriminator 1
 1121 010a FB68     		ldr	r3, [r7, #12]
 1122 010c 022B     		cmp	r3, #2
 1123 010e DCDD     		ble	.L57
 323:STM32F10x_Speex_Lib/libspeex/jitter.c ****    }
 324:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /*fprintf (stderr, "reset\n");*/
 325:STM32F10x_Speex_Lib/libspeex/jitter.c **** }
 1124              		.loc 2 325 0 is_stmt 1
 1125 0110 00BF     		nop
 1126 0112 1037     		adds	r7, r7, #16
 1127              	.LCFI40:
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 29


 1128              		.cfi_def_cfa_offset 8
 1129 0114 BD46     		mov	sp, r7
 1130              	.LCFI41:
 1131              		.cfi_def_cfa_register 13
 1132              		@ sp needed
 1133 0116 80BD     		pop	{r7, pc}
 1134              		.cfi_endproc
 1135              	.LFE13:
 1137              		.section	.text.jitter_buffer_destroy,"ax",%progbits
 1138              		.align	2
 1139              		.global	jitter_buffer_destroy
 1140              		.thumb
 1141              		.thumb_func
 1143              	jitter_buffer_destroy:
 1144              	.LFB14:
 326:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 327:STM32F10x_Speex_Lib/libspeex/jitter.c **** /** Destroy jitter buffer */
 328:STM32F10x_Speex_Lib/libspeex/jitter.c **** EXPORT void jitter_buffer_destroy(JitterBuffer *jitter)
 329:STM32F10x_Speex_Lib/libspeex/jitter.c **** {
 1145              		.loc 2 329 0
 1146              		.cfi_startproc
 1147              		@ args = 0, pretend = 0, frame = 8
 1148              		@ frame_needed = 1, uses_anonymous_args = 0
 1149 0000 80B5     		push	{r7, lr}
 1150              	.LCFI42:
 1151              		.cfi_def_cfa_offset 8
 1152              		.cfi_offset 7, -8
 1153              		.cfi_offset 14, -4
 1154 0002 82B0     		sub	sp, sp, #8
 1155              	.LCFI43:
 1156              		.cfi_def_cfa_offset 16
 1157 0004 00AF     		add	r7, sp, #0
 1158              	.LCFI44:
 1159              		.cfi_def_cfa_register 7
 1160 0006 7860     		str	r0, [r7, #4]
 330:STM32F10x_Speex_Lib/libspeex/jitter.c ****    jitter_buffer_reset(jitter);
 1161              		.loc 2 330 0
 1162 0008 7868     		ldr	r0, [r7, #4]
 1163 000a FFF7FEFF 		bl	jitter_buffer_reset
 331:STM32F10x_Speex_Lib/libspeex/jitter.c ****    speex_free(jitter);
 1164              		.loc 2 331 0
 1165 000e 7868     		ldr	r0, [r7, #4]
 1166 0010 FFF7FEFF 		bl	speex_free
 332:STM32F10x_Speex_Lib/libspeex/jitter.c **** }
 1167              		.loc 2 332 0
 1168 0014 00BF     		nop
 1169 0016 0837     		adds	r7, r7, #8
 1170              	.LCFI45:
 1171              		.cfi_def_cfa_offset 8
 1172 0018 BD46     		mov	sp, r7
 1173              	.LCFI46:
 1174              		.cfi_def_cfa_register 13
 1175              		@ sp needed
 1176 001a 80BD     		pop	{r7, pc}
 1177              		.cfi_endproc
 1178              	.LFE14:
 1180              		.section	.text.update_timings,"ax",%progbits
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 30


 1181              		.align	2
 1182              		.thumb
 1183              		.thumb_func
 1185              	update_timings:
 1186              	.LFB15:
 333:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 334:STM32F10x_Speex_Lib/libspeex/jitter.c **** /** Take the following timing into consideration for future calculations */
 335:STM32F10x_Speex_Lib/libspeex/jitter.c **** static void update_timings(JitterBuffer *jitter, spx_int32_t timing)
 336:STM32F10x_Speex_Lib/libspeex/jitter.c **** {
 1187              		.loc 2 336 0
 1188              		.cfi_startproc
 1189              		@ args = 0, pretend = 0, frame = 16
 1190              		@ frame_needed = 1, uses_anonymous_args = 0
 1191 0000 80B5     		push	{r7, lr}
 1192              	.LCFI47:
 1193              		.cfi_def_cfa_offset 8
 1194              		.cfi_offset 7, -8
 1195              		.cfi_offset 14, -4
 1196 0002 84B0     		sub	sp, sp, #16
 1197              	.LCFI48:
 1198              		.cfi_def_cfa_offset 24
 1199 0004 00AF     		add	r7, sp, #0
 1200              	.LCFI49:
 1201              		.cfi_def_cfa_register 7
 1202 0006 7860     		str	r0, [r7, #4]
 1203 0008 3960     		str	r1, [r7]
 337:STM32F10x_Speex_Lib/libspeex/jitter.c ****    if (timing < -32767)
 1204              		.loc 2 337 0
 1205 000a 3B68     		ldr	r3, [r7]
 1206 000c 13F5004F 		cmn	r3, #32768
 1207 0010 01DC     		bgt	.L60
 338:STM32F10x_Speex_Lib/libspeex/jitter.c ****       timing = -32767;
 1208              		.loc 2 338 0
 1209 0012 274B     		ldr	r3, .L65
 1210 0014 3B60     		str	r3, [r7]
 1211              	.L60:
 339:STM32F10x_Speex_Lib/libspeex/jitter.c ****    if (timing > 32767)
 1212              		.loc 2 339 0
 1213 0016 3B68     		ldr	r3, [r7]
 1214 0018 B3F5004F 		cmp	r3, #32768
 1215 001c 02DB     		blt	.L61
 340:STM32F10x_Speex_Lib/libspeex/jitter.c ****       timing = 32767;
 1216              		.loc 2 340 0
 1217 001e 47F6FF73 		movw	r3, #32767
 1218 0022 3B60     		str	r3, [r7]
 1219              	.L61:
 341:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /* If the current sub-window is full, perform a rotation and discard oldest sub-widow */
 342:STM32F10x_Speex_Lib/libspeex/jitter.c ****    if (jitter->timeBuffers[0]->curr_count >= jitter->subwindow_size)
 1220              		.loc 2 342 0
 1221 0024 7B68     		ldr	r3, [r7, #4]
 1222 0026 03F5C753 		add	r3, r3, #6368
 1223 002a 1833     		adds	r3, r3, #24
 1224 002c 1B68     		ldr	r3, [r3]
 1225 002e 5A68     		ldr	r2, [r3, #4]
 1226 0030 7B68     		ldr	r3, [r7, #4]
 1227 0032 03F5C853 		add	r3, r3, #6400
 1228 0036 0833     		adds	r3, r3, #8
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 31


 1229 0038 1B68     		ldr	r3, [r3]
 1230 003a 9A42     		cmp	r2, r3
 1231 003c 28DB     		blt	.L62
 1232              	.LBB7:
 343:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 344:STM32F10x_Speex_Lib/libspeex/jitter.c ****       int i;
 345:STM32F10x_Speex_Lib/libspeex/jitter.c ****       /*fprintf(stderr, "Rotate buffer\n");*/
 346:STM32F10x_Speex_Lib/libspeex/jitter.c ****       struct TimingBuffer *tmp = jitter->timeBuffers[MAX_BUFFERS-1];
 1233              		.loc 2 346 0
 1234 003e 7B68     		ldr	r3, [r7, #4]
 1235 0040 03F5C853 		add	r3, r3, #6400
 1236 0044 1B68     		ldr	r3, [r3]
 1237 0046 BB60     		str	r3, [r7, #8]
 347:STM32F10x_Speex_Lib/libspeex/jitter.c ****       for (i=MAX_BUFFERS-1;i>=1;i--)
 1238              		.loc 2 347 0
 1239 0048 0223     		movs	r3, #2
 1240 004a FB60     		str	r3, [r7, #12]
 1241 004c 0FE0     		b	.L63
 1242              	.L64:
 348:STM32F10x_Speex_Lib/libspeex/jitter.c ****          jitter->timeBuffers[i] = jitter->timeBuffers[i-1];
 1243              		.loc 2 348 0 discriminator 3
 1244 004e FB68     		ldr	r3, [r7, #12]
 1245 0050 5A1E     		subs	r2, r3, #1
 1246 0052 7B68     		ldr	r3, [r7, #4]
 1247 0054 02F23E62 		addw	r2, r2, #1598
 1248 0058 53F82210 		ldr	r1, [r3, r2, lsl #2]
 1249 005c 7B68     		ldr	r3, [r7, #4]
 1250 005e FA68     		ldr	r2, [r7, #12]
 1251 0060 02F23E62 		addw	r2, r2, #1598
 1252 0064 43F82210 		str	r1, [r3, r2, lsl #2]
 347:STM32F10x_Speex_Lib/libspeex/jitter.c ****       for (i=MAX_BUFFERS-1;i>=1;i--)
 1253              		.loc 2 347 0 discriminator 3
 1254 0068 FB68     		ldr	r3, [r7, #12]
 1255 006a 013B     		subs	r3, r3, #1
 1256 006c FB60     		str	r3, [r7, #12]
 1257              	.L63:
 347:STM32F10x_Speex_Lib/libspeex/jitter.c ****       for (i=MAX_BUFFERS-1;i>=1;i--)
 1258              		.loc 2 347 0 is_stmt 0 discriminator 1
 1259 006e FB68     		ldr	r3, [r7, #12]
 1260 0070 002B     		cmp	r3, #0
 1261 0072 ECDC     		bgt	.L64
 349:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->timeBuffers[0] = tmp;
 1262              		.loc 2 349 0 is_stmt 1
 1263 0074 7B68     		ldr	r3, [r7, #4]
 1264 0076 03F5C753 		add	r3, r3, #6368
 1265 007a 1833     		adds	r3, r3, #24
 1266 007c BA68     		ldr	r2, [r7, #8]
 1267 007e 1A60     		str	r2, [r3]
 350:STM32F10x_Speex_Lib/libspeex/jitter.c ****       tb_init(jitter->timeBuffers[0]);
 1268              		.loc 2 350 0
 1269 0080 7B68     		ldr	r3, [r7, #4]
 1270 0082 03F5C753 		add	r3, r3, #6368
 1271 0086 1833     		adds	r3, r3, #24
 1272 0088 1B68     		ldr	r3, [r3]
 1273 008a 1846     		mov	r0, r3
 1274 008c FFF7FEFF 		bl	tb_init
 1275              	.L62:
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 32


 1276              	.LBE7:
 351:STM32F10x_Speex_Lib/libspeex/jitter.c ****    }
 352:STM32F10x_Speex_Lib/libspeex/jitter.c ****    tb_add(jitter->timeBuffers[0], timing);
 1277              		.loc 2 352 0
 1278 0090 7B68     		ldr	r3, [r7, #4]
 1279 0092 03F5C753 		add	r3, r3, #6368
 1280 0096 1833     		adds	r3, r3, #24
 1281 0098 1B68     		ldr	r3, [r3]
 1282 009a 3A68     		ldr	r2, [r7]
 1283 009c 12B2     		sxth	r2, r2
 1284 009e 1146     		mov	r1, r2
 1285 00a0 1846     		mov	r0, r3
 1286 00a2 FFF7FEFF 		bl	tb_add
 353:STM32F10x_Speex_Lib/libspeex/jitter.c **** }
 1287              		.loc 2 353 0
 1288 00a6 00BF     		nop
 1289 00a8 1037     		adds	r7, r7, #16
 1290              	.LCFI50:
 1291              		.cfi_def_cfa_offset 8
 1292 00aa BD46     		mov	sp, r7
 1293              	.LCFI51:
 1294              		.cfi_def_cfa_register 13
 1295              		@ sp needed
 1296 00ac 80BD     		pop	{r7, pc}
 1297              	.L66:
 1298 00ae 00BF     		.align	2
 1299              	.L65:
 1300 00b0 0180FFFF 		.word	-32767
 1301              		.cfi_endproc
 1302              	.LFE15:
 1304              		.section	.text.shift_timings,"ax",%progbits
 1305              		.align	2
 1306              		.thumb
 1307              		.thumb_func
 1309              	shift_timings:
 1310              	.LFB16:
 354:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 355:STM32F10x_Speex_Lib/libspeex/jitter.c **** /** Compensate all timings when we do an adjustment of the buffering */
 356:STM32F10x_Speex_Lib/libspeex/jitter.c **** static void shift_timings(JitterBuffer *jitter, spx_int16_t amount)
 357:STM32F10x_Speex_Lib/libspeex/jitter.c **** {
 1311              		.loc 2 357 0
 1312              		.cfi_startproc
 1313              		@ args = 0, pretend = 0, frame = 16
 1314              		@ frame_needed = 1, uses_anonymous_args = 0
 1315              		@ link register save eliminated.
 1316 0000 80B4     		push	{r7}
 1317              	.LCFI52:
 1318              		.cfi_def_cfa_offset 4
 1319              		.cfi_offset 7, -4
 1320 0002 85B0     		sub	sp, sp, #20
 1321              	.LCFI53:
 1322              		.cfi_def_cfa_offset 24
 1323 0004 00AF     		add	r7, sp, #0
 1324              	.LCFI54:
 1325              		.cfi_def_cfa_register 7
 1326 0006 7860     		str	r0, [r7, #4]
 1327 0008 0B46     		mov	r3, r1
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 33


 1328 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 358:STM32F10x_Speex_Lib/libspeex/jitter.c ****    int i, j;
 359:STM32F10x_Speex_Lib/libspeex/jitter.c ****    for (i=0;i<MAX_BUFFERS;i++)
 1329              		.loc 2 359 0
 1330 000c 0023     		movs	r3, #0
 1331 000e FB60     		str	r3, [r7, #12]
 1332 0010 29E0     		b	.L68
 1333              	.L71:
 360:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 361:STM32F10x_Speex_Lib/libspeex/jitter.c ****       for (j=0;j<jitter->timeBuffers[i]->filled;j++)
 1334              		.loc 2 361 0
 1335 0012 0023     		movs	r3, #0
 1336 0014 BB60     		str	r3, [r7, #8]
 1337 0016 19E0     		b	.L69
 1338              	.L70:
 362:STM32F10x_Speex_Lib/libspeex/jitter.c ****          jitter->timeBuffers[i]->timing[j] += amount;
 1339              		.loc 2 362 0 discriminator 3
 1340 0018 7B68     		ldr	r3, [r7, #4]
 1341 001a FA68     		ldr	r2, [r7, #12]
 1342 001c 02F23E62 		addw	r2, r2, #1598
 1343 0020 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1344 0024 7A68     		ldr	r2, [r7, #4]
 1345 0026 F968     		ldr	r1, [r7, #12]
 1346 0028 01F23E61 		addw	r1, r1, #1598
 1347 002c 52F82120 		ldr	r2, [r2, r1, lsl #2]
 1348 0030 B968     		ldr	r1, [r7, #8]
 1349 0032 0231     		adds	r1, r1, #2
 1350 0034 52F82110 		ldr	r1, [r2, r1, lsl #2]
 1351 0038 B7F90220 		ldrsh	r2, [r7, #2]
 1352 003c 1144     		add	r1, r1, r2
 1353 003e BA68     		ldr	r2, [r7, #8]
 1354 0040 0232     		adds	r2, r2, #2
 1355 0042 43F82210 		str	r1, [r3, r2, lsl #2]
 361:STM32F10x_Speex_Lib/libspeex/jitter.c ****          jitter->timeBuffers[i]->timing[j] += amount;
 1356              		.loc 2 361 0 discriminator 3
 1357 0046 BB68     		ldr	r3, [r7, #8]
 1358 0048 0133     		adds	r3, r3, #1
 1359 004a BB60     		str	r3, [r7, #8]
 1360              	.L69:
 361:STM32F10x_Speex_Lib/libspeex/jitter.c ****          jitter->timeBuffers[i]->timing[j] += amount;
 1361              		.loc 2 361 0 is_stmt 0 discriminator 1
 1362 004c 7B68     		ldr	r3, [r7, #4]
 1363 004e FA68     		ldr	r2, [r7, #12]
 1364 0050 02F23E62 		addw	r2, r2, #1598
 1365 0054 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1366 0058 1A68     		ldr	r2, [r3]
 1367 005a BB68     		ldr	r3, [r7, #8]
 1368 005c 9A42     		cmp	r2, r3
 1369 005e DBDC     		bgt	.L70
 359:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 1370              		.loc 2 359 0 is_stmt 1 discriminator 2
 1371 0060 FB68     		ldr	r3, [r7, #12]
 1372 0062 0133     		adds	r3, r3, #1
 1373 0064 FB60     		str	r3, [r7, #12]
 1374              	.L68:
 359:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 1375              		.loc 2 359 0 is_stmt 0 discriminator 1
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 34


 1376 0066 FB68     		ldr	r3, [r7, #12]
 1377 0068 022B     		cmp	r3, #2
 1378 006a D2DD     		ble	.L71
 363:STM32F10x_Speex_Lib/libspeex/jitter.c ****    }
 364:STM32F10x_Speex_Lib/libspeex/jitter.c **** }
 1379              		.loc 2 364 0 is_stmt 1
 1380 006c 00BF     		nop
 1381 006e 1437     		adds	r7, r7, #20
 1382              	.LCFI55:
 1383              		.cfi_def_cfa_offset 4
 1384 0070 BD46     		mov	sp, r7
 1385              	.LCFI56:
 1386              		.cfi_def_cfa_register 13
 1387              		@ sp needed
 1388 0072 80BC     		pop	{r7}
 1389              	.LCFI57:
 1390              		.cfi_restore 7
 1391              		.cfi_def_cfa_offset 0
 1392 0074 7047     		bx	lr
 1393              		.cfi_endproc
 1394              	.LFE16:
 1396 0076 00BF     		.section	.text.jitter_buffer_put,"ax",%progbits
 1397              		.align	2
 1398              		.global	jitter_buffer_put
 1399              		.thumb
 1400              		.thumb_func
 1402              	jitter_buffer_put:
 1403              	.LFB17:
 365:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 366:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 367:STM32F10x_Speex_Lib/libspeex/jitter.c **** /** Put one packet into the jitter buffer */
 368:STM32F10x_Speex_Lib/libspeex/jitter.c **** EXPORT void jitter_buffer_put(JitterBuffer *jitter, const JitterBufferPacket *packet)
 369:STM32F10x_Speex_Lib/libspeex/jitter.c **** {
 1404              		.loc 2 369 0
 1405              		.cfi_startproc
 1406              		@ args = 0, pretend = 0, frame = 24
 1407              		@ frame_needed = 1, uses_anonymous_args = 0
 1408 0000 80B5     		push	{r7, lr}
 1409              	.LCFI58:
 1410              		.cfi_def_cfa_offset 8
 1411              		.cfi_offset 7, -8
 1412              		.cfi_offset 14, -4
 1413 0002 86B0     		sub	sp, sp, #24
 1414              	.LCFI59:
 1415              		.cfi_def_cfa_offset 32
 1416 0004 00AF     		add	r7, sp, #0
 1417              	.LCFI60:
 1418              		.cfi_def_cfa_register 7
 1419 0006 7860     		str	r0, [r7, #4]
 1420 0008 3960     		str	r1, [r7]
 370:STM32F10x_Speex_Lib/libspeex/jitter.c ****    int i,j;
 371:STM32F10x_Speex_Lib/libspeex/jitter.c ****    int late;
 372:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /*fprintf (stderr, "put packet %d %d\n", timestamp, span);*/
 373:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 374:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /* Cleanup buffer (remove old packets that weren't played) */
 375:STM32F10x_Speex_Lib/libspeex/jitter.c ****    if (!jitter->reset_state)
 1421              		.loc 2 375 0
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 35


 1422 000a 7B68     		ldr	r3, [r7, #4]
 1423 000c 03F5AF53 		add	r3, r3, #5600
 1424 0010 1C33     		adds	r3, r3, #28
 1425 0012 1B68     		ldr	r3, [r3]
 1426 0014 002B     		cmp	r3, #0
 1427 0016 5AD1     		bne	.L73
 376:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 377:STM32F10x_Speex_Lib/libspeex/jitter.c ****       for (i=0;i<SPEEX_JITTER_MAX_BUFFER_SIZE;i++)
 1428              		.loc 2 377 0
 1429 0018 0023     		movs	r3, #0
 1430 001a 7B61     		str	r3, [r7, #20]
 1431 001c 54E0     		b	.L74
 1432              	.L78:
 378:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
 379:STM32F10x_Speex_Lib/libspeex/jitter.c ****          /* Make sure we don't discard a "just-late" packet in case we want to play it next (if we 
 380:STM32F10x_Speex_Lib/libspeex/jitter.c ****          if (jitter->packets[i].data && LE32(jitter->packets[i].timestamp + jitter->packets[i].span
 1433              		.loc 2 380 0
 1434 001e 7968     		ldr	r1, [r7, #4]
 1435 0020 7A69     		ldr	r2, [r7, #20]
 1436 0022 1346     		mov	r3, r2
 1437 0024 5B00     		lsls	r3, r3, #1
 1438 0026 1344     		add	r3, r3, r2
 1439 0028 DB00     		lsls	r3, r3, #3
 1440 002a 0B44     		add	r3, r3, r1
 1441 002c 1033     		adds	r3, r3, #16
 1442 002e 1B68     		ldr	r3, [r3]
 1443 0030 002B     		cmp	r3, #0
 1444 0032 46D0     		beq	.L75
 1445              		.loc 2 380 0 is_stmt 0 discriminator 1
 1446 0034 7968     		ldr	r1, [r7, #4]
 1447 0036 7B69     		ldr	r3, [r7, #20]
 1448 0038 5A1C     		adds	r2, r3, #1
 1449 003a 1346     		mov	r3, r2
 1450 003c 5B00     		lsls	r3, r3, #1
 1451 003e 1344     		add	r3, r3, r2
 1452 0040 DB00     		lsls	r3, r3, #3
 1453 0042 0B44     		add	r3, r3, r1
 1454 0044 1968     		ldr	r1, [r3]
 1455 0046 7868     		ldr	r0, [r7, #4]
 1456 0048 7B69     		ldr	r3, [r7, #20]
 1457 004a 5A1C     		adds	r2, r3, #1
 1458 004c 1346     		mov	r3, r2
 1459 004e 5B00     		lsls	r3, r3, #1
 1460 0050 1344     		add	r3, r3, r2
 1461 0052 DB00     		lsls	r3, r3, #3
 1462 0054 0344     		add	r3, r3, r0
 1463 0056 0433     		adds	r3, r3, #4
 1464 0058 1B68     		ldr	r3, [r3]
 1465 005a CA18     		adds	r2, r1, r3
 1466 005c 7B68     		ldr	r3, [r7, #4]
 1467 005e 1B68     		ldr	r3, [r3]
 1468 0060 D31A     		subs	r3, r2, r3
 1469 0062 002B     		cmp	r3, #0
 1470 0064 2DDC     		bgt	.L75
 381:STM32F10x_Speex_Lib/libspeex/jitter.c ****          {
 382:STM32F10x_Speex_Lib/libspeex/jitter.c ****             /*fprintf (stderr, "cleaned (not played)\n");*/
 383:STM32F10x_Speex_Lib/libspeex/jitter.c ****             if (jitter->destroy)
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 36


 1471              		.loc 2 383 0 is_stmt 1
 1472 0066 7B68     		ldr	r3, [r7, #4]
 1473 0068 03F5AF53 		add	r3, r3, #5600
 1474 006c 1033     		adds	r3, r3, #16
 1475 006e 1B68     		ldr	r3, [r3]
 1476 0070 002B     		cmp	r3, #0
 1477 0072 10D0     		beq	.L76
 384:STM32F10x_Speex_Lib/libspeex/jitter.c ****                jitter->destroy(jitter->packets[i].data);
 1478              		.loc 2 384 0
 1479 0074 7B68     		ldr	r3, [r7, #4]
 1480 0076 03F5AF53 		add	r3, r3, #5600
 1481 007a 1033     		adds	r3, r3, #16
 1482 007c 1968     		ldr	r1, [r3]
 1483 007e 7868     		ldr	r0, [r7, #4]
 1484 0080 7A69     		ldr	r2, [r7, #20]
 1485 0082 1346     		mov	r3, r2
 1486 0084 5B00     		lsls	r3, r3, #1
 1487 0086 1344     		add	r3, r3, r2
 1488 0088 DB00     		lsls	r3, r3, #3
 1489 008a 0344     		add	r3, r3, r0
 1490 008c 1033     		adds	r3, r3, #16
 1491 008e 1B68     		ldr	r3, [r3]
 1492 0090 1846     		mov	r0, r3
 1493 0092 8847     		blx	r1
 1494 0094 0BE0     		b	.L77
 1495              	.L76:
 385:STM32F10x_Speex_Lib/libspeex/jitter.c ****             else
 386:STM32F10x_Speex_Lib/libspeex/jitter.c ****                speex_free(jitter->packets[i].data);
 1496              		.loc 2 386 0
 1497 0096 7968     		ldr	r1, [r7, #4]
 1498 0098 7A69     		ldr	r2, [r7, #20]
 1499 009a 1346     		mov	r3, r2
 1500 009c 5B00     		lsls	r3, r3, #1
 1501 009e 1344     		add	r3, r3, r2
 1502 00a0 DB00     		lsls	r3, r3, #3
 1503 00a2 0B44     		add	r3, r3, r1
 1504 00a4 1033     		adds	r3, r3, #16
 1505 00a6 1B68     		ldr	r3, [r3]
 1506 00a8 1846     		mov	r0, r3
 1507 00aa FFF7FEFF 		bl	speex_free
 1508              	.L77:
 387:STM32F10x_Speex_Lib/libspeex/jitter.c ****             jitter->packets[i].data = NULL;
 1509              		.loc 2 387 0
 1510 00ae 7968     		ldr	r1, [r7, #4]
 1511 00b0 7A69     		ldr	r2, [r7, #20]
 1512 00b2 1346     		mov	r3, r2
 1513 00b4 5B00     		lsls	r3, r3, #1
 1514 00b6 1344     		add	r3, r3, r2
 1515 00b8 DB00     		lsls	r3, r3, #3
 1516 00ba 0B44     		add	r3, r3, r1
 1517 00bc 1033     		adds	r3, r3, #16
 1518 00be 0022     		movs	r2, #0
 1519 00c0 1A60     		str	r2, [r3]
 1520              	.L75:
 377:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
 1521              		.loc 2 377 0 discriminator 2
 1522 00c2 7B69     		ldr	r3, [r7, #20]
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 37


 1523 00c4 0133     		adds	r3, r3, #1
 1524 00c6 7B61     		str	r3, [r7, #20]
 1525              	.L74:
 377:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
 1526              		.loc 2 377 0 is_stmt 0 discriminator 1
 1527 00c8 7B69     		ldr	r3, [r7, #20]
 1528 00ca C72B     		cmp	r3, #199
 1529 00cc A7DD     		ble	.L78
 1530              	.L73:
 388:STM32F10x_Speex_Lib/libspeex/jitter.c ****          }
 389:STM32F10x_Speex_Lib/libspeex/jitter.c ****       }
 390:STM32F10x_Speex_Lib/libspeex/jitter.c ****    }
 391:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 392:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /*fprintf(stderr, "arrival: %d %d %d\n", packet->timestamp, jitter->next_stop, jitter->pointer_t
 393:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /* Check if packet is late (could still be useful though) */
 394:STM32F10x_Speex_Lib/libspeex/jitter.c ****    if (!jitter->reset_state && LT32(packet->timestamp, jitter->next_stop))
 1531              		.loc 2 394 0 is_stmt 1
 1532 00ce 7B68     		ldr	r3, [r7, #4]
 1533 00d0 03F5AF53 		add	r3, r3, #5600
 1534 00d4 1C33     		adds	r3, r3, #28
 1535 00d6 1B68     		ldr	r3, [r3]
 1536 00d8 002B     		cmp	r3, #0
 1537 00da 18D1     		bne	.L79
 1538              		.loc 2 394 0 is_stmt 0 discriminator 1
 1539 00dc 3B68     		ldr	r3, [r7]
 1540 00de 9A68     		ldr	r2, [r3, #8]
 1541 00e0 7B68     		ldr	r3, [r7, #4]
 1542 00e2 9B68     		ldr	r3, [r3, #8]
 1543 00e4 D31A     		subs	r3, r2, r3
 1544 00e6 002B     		cmp	r3, #0
 1545 00e8 11DA     		bge	.L79
 395:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 396:STM32F10x_Speex_Lib/libspeex/jitter.c ****       update_timings(jitter, ((spx_int32_t)packet->timestamp) - ((spx_int32_t)jitter->next_stop) - 
 1546              		.loc 2 396 0 is_stmt 1
 1547 00ea 3B68     		ldr	r3, [r7]
 1548 00ec 9B68     		ldr	r3, [r3, #8]
 1549 00ee 1A46     		mov	r2, r3
 1550 00f0 7B68     		ldr	r3, [r7, #4]
 1551 00f2 9B68     		ldr	r3, [r3, #8]
 1552 00f4 D21A     		subs	r2, r2, r3
 1553 00f6 7B68     		ldr	r3, [r7, #4]
 1554 00f8 03F5B053 		add	r3, r3, #5632
 1555 00fc 1B68     		ldr	r3, [r3]
 1556 00fe D31A     		subs	r3, r2, r3
 1557 0100 1946     		mov	r1, r3
 1558 0102 7868     		ldr	r0, [r7, #4]
 1559 0104 FFF7FEFF 		bl	update_timings
 397:STM32F10x_Speex_Lib/libspeex/jitter.c ****       late = 1;
 1560              		.loc 2 397 0
 1561 0108 0123     		movs	r3, #1
 1562 010a FB60     		str	r3, [r7, #12]
 1563 010c 01E0     		b	.L80
 1564              	.L79:
 398:STM32F10x_Speex_Lib/libspeex/jitter.c ****    } else {
 399:STM32F10x_Speex_Lib/libspeex/jitter.c ****       late = 0;
 1565              		.loc 2 399 0
 1566 010e 0023     		movs	r3, #0
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 38


 1567 0110 FB60     		str	r3, [r7, #12]
 1568              	.L80:
 400:STM32F10x_Speex_Lib/libspeex/jitter.c ****    }
 401:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 402:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /* For some reason, the consumer has failed the last 20 fetches. Make sure this packet is
 403:STM32F10x_Speex_Lib/libspeex/jitter.c ****     * used to resync. */
 404:STM32F10x_Speex_Lib/libspeex/jitter.c ****    if (jitter->lost_count>20)
 1569              		.loc 2 404 0
 1570 0112 7B68     		ldr	r3, [r7, #4]
 1571 0114 03F5C853 		add	r3, r3, #6400
 1572 0118 1833     		adds	r3, r3, #24
 1573 011a 1B68     		ldr	r3, [r3]
 1574 011c 142B     		cmp	r3, #20
 1575 011e 02DD     		ble	.L81
 405:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 406:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter_buffer_reset(jitter);
 1576              		.loc 2 406 0
 1577 0120 7868     		ldr	r0, [r7, #4]
 1578 0122 FFF7FEFF 		bl	jitter_buffer_reset
 1579              	.L81:
 407:STM32F10x_Speex_Lib/libspeex/jitter.c ****    }
 408:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 409:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /* Only insert the packet if it's not hopelessly late (i.e. totally useless) */
 410:STM32F10x_Speex_Lib/libspeex/jitter.c ****    if (jitter->reset_state || GE32(packet->timestamp+packet->span+jitter->delay_step, jitter->point
 1580              		.loc 2 410 0
 1581 0126 7B68     		ldr	r3, [r7, #4]
 1582 0128 03F5AF53 		add	r3, r3, #5600
 1583 012c 1C33     		adds	r3, r3, #28
 1584 012e 1B68     		ldr	r3, [r3]
 1585 0130 002B     		cmp	r3, #0
 1586 0132 10D1     		bne	.L82
 1587              		.loc 2 410 0 is_stmt 0 discriminator 1
 1588 0134 3B68     		ldr	r3, [r7]
 1589 0136 9A68     		ldr	r2, [r3, #8]
 1590 0138 3B68     		ldr	r3, [r7]
 1591 013a DB68     		ldr	r3, [r3, #12]
 1592 013c 1A44     		add	r2, r2, r3
 1593 013e 7B68     		ldr	r3, [r7, #4]
 1594 0140 03F5AF53 		add	r3, r3, #5600
 1595 0144 1433     		adds	r3, r3, #20
 1596 0146 1B68     		ldr	r3, [r3]
 1597 0148 1A44     		add	r2, r2, r3
 1598 014a 7B68     		ldr	r3, [r7, #4]
 1599 014c 1B68     		ldr	r3, [r3]
 1600 014e D31A     		subs	r3, r2, r3
 1601 0150 002B     		cmp	r3, #0
 1602 0152 C0F20981 		blt	.L101
 1603              	.L82:
 411:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 412:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 413:STM32F10x_Speex_Lib/libspeex/jitter.c ****       /*Find an empty slot in the buffer*/
 414:STM32F10x_Speex_Lib/libspeex/jitter.c ****       for (i=0;i<SPEEX_JITTER_MAX_BUFFER_SIZE;i++)
 1604              		.loc 2 414 0 is_stmt 1
 1605 0156 0023     		movs	r3, #0
 1606 0158 7B61     		str	r3, [r7, #20]
 1607 015a 0DE0     		b	.L84
 1608              	.L87:
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 39


 415:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
 416:STM32F10x_Speex_Lib/libspeex/jitter.c ****          if (jitter->packets[i].data==NULL)
 1609              		.loc 2 416 0
 1610 015c 7968     		ldr	r1, [r7, #4]
 1611 015e 7A69     		ldr	r2, [r7, #20]
 1612 0160 1346     		mov	r3, r2
 1613 0162 5B00     		lsls	r3, r3, #1
 1614 0164 1344     		add	r3, r3, r2
 1615 0166 DB00     		lsls	r3, r3, #3
 1616 0168 0B44     		add	r3, r3, r1
 1617 016a 1033     		adds	r3, r3, #16
 1618 016c 1B68     		ldr	r3, [r3]
 1619 016e 002B     		cmp	r3, #0
 1620 0170 06D0     		beq	.L102
 414:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
 1621              		.loc 2 414 0 discriminator 2
 1622 0172 7B69     		ldr	r3, [r7, #20]
 1623 0174 0133     		adds	r3, r3, #1
 1624 0176 7B61     		str	r3, [r7, #20]
 1625              	.L84:
 414:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
 1626              		.loc 2 414 0 is_stmt 0 discriminator 1
 1627 0178 7B69     		ldr	r3, [r7, #20]
 1628 017a C72B     		cmp	r3, #199
 1629 017c EEDD     		ble	.L87
 1630 017e 00E0     		b	.L86
 1631              	.L102:
 417:STM32F10x_Speex_Lib/libspeex/jitter.c ****             break;
 1632              		.loc 2 417 0 is_stmt 1
 1633 0180 00BF     		nop
 1634              	.L86:
 418:STM32F10x_Speex_Lib/libspeex/jitter.c ****       }
 419:STM32F10x_Speex_Lib/libspeex/jitter.c ****       
 420:STM32F10x_Speex_Lib/libspeex/jitter.c ****       /*No place left in the buffer, need to make room for it by discarding the oldest packet */
 421:STM32F10x_Speex_Lib/libspeex/jitter.c ****       if (i==SPEEX_JITTER_MAX_BUFFER_SIZE)
 1635              		.loc 2 421 0
 1636 0182 7B69     		ldr	r3, [r7, #20]
 1637 0184 C82B     		cmp	r3, #200
 1638 0186 5FD1     		bne	.L88
 1639              	.LBB8:
 422:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
 423:STM32F10x_Speex_Lib/libspeex/jitter.c ****          int earliest=jitter->packets[0].timestamp;
 1640              		.loc 2 423 0
 1641 0188 7B68     		ldr	r3, [r7, #4]
 1642 018a 9B69     		ldr	r3, [r3, #24]
 1643 018c BB60     		str	r3, [r7, #8]
 424:STM32F10x_Speex_Lib/libspeex/jitter.c ****          i=0;
 1644              		.loc 2 424 0
 1645 018e 0023     		movs	r3, #0
 1646 0190 7B61     		str	r3, [r7, #20]
 425:STM32F10x_Speex_Lib/libspeex/jitter.c ****          for (j=1;j<SPEEX_JITTER_MAX_BUFFER_SIZE;j++)
 1647              		.loc 2 425 0
 1648 0192 0123     		movs	r3, #1
 1649 0194 3B61     		str	r3, [r7, #16]
 1650 0196 26E0     		b	.L89
 1651              	.L92:
 426:STM32F10x_Speex_Lib/libspeex/jitter.c ****          {
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 40


 427:STM32F10x_Speex_Lib/libspeex/jitter.c ****             if (!jitter->packets[i].data || LT32(jitter->packets[j].timestamp,earliest))
 1652              		.loc 2 427 0
 1653 0198 7968     		ldr	r1, [r7, #4]
 1654 019a 7A69     		ldr	r2, [r7, #20]
 1655 019c 1346     		mov	r3, r2
 1656 019e 5B00     		lsls	r3, r3, #1
 1657 01a0 1344     		add	r3, r3, r2
 1658 01a2 DB00     		lsls	r3, r3, #3
 1659 01a4 0B44     		add	r3, r3, r1
 1660 01a6 1033     		adds	r3, r3, #16
 1661 01a8 1B68     		ldr	r3, [r3]
 1662 01aa 002B     		cmp	r3, #0
 1663 01ac 0CD0     		beq	.L90
 1664              		.loc 2 427 0 is_stmt 0 discriminator 1
 1665 01ae 7968     		ldr	r1, [r7, #4]
 1666 01b0 3B69     		ldr	r3, [r7, #16]
 1667 01b2 5A1C     		adds	r2, r3, #1
 1668 01b4 1346     		mov	r3, r2
 1669 01b6 5B00     		lsls	r3, r3, #1
 1670 01b8 1344     		add	r3, r3, r2
 1671 01ba DB00     		lsls	r3, r3, #3
 1672 01bc 0B44     		add	r3, r3, r1
 1673 01be 1A68     		ldr	r2, [r3]
 1674 01c0 BB68     		ldr	r3, [r7, #8]
 1675 01c2 D31A     		subs	r3, r2, r3
 1676 01c4 002B     		cmp	r3, #0
 1677 01c6 0BDA     		bge	.L91
 1678              	.L90:
 428:STM32F10x_Speex_Lib/libspeex/jitter.c ****             {
 429:STM32F10x_Speex_Lib/libspeex/jitter.c ****                earliest = jitter->packets[j].timestamp;
 1679              		.loc 2 429 0 is_stmt 1
 1680 01c8 7968     		ldr	r1, [r7, #4]
 1681 01ca 3B69     		ldr	r3, [r7, #16]
 1682 01cc 5A1C     		adds	r2, r3, #1
 1683 01ce 1346     		mov	r3, r2
 1684 01d0 5B00     		lsls	r3, r3, #1
 1685 01d2 1344     		add	r3, r3, r2
 1686 01d4 DB00     		lsls	r3, r3, #3
 1687 01d6 0B44     		add	r3, r3, r1
 1688 01d8 1B68     		ldr	r3, [r3]
 1689 01da BB60     		str	r3, [r7, #8]
 430:STM32F10x_Speex_Lib/libspeex/jitter.c ****                i=j;
 1690              		.loc 2 430 0
 1691 01dc 3B69     		ldr	r3, [r7, #16]
 1692 01de 7B61     		str	r3, [r7, #20]
 1693              	.L91:
 425:STM32F10x_Speex_Lib/libspeex/jitter.c ****          {
 1694              		.loc 2 425 0 discriminator 2
 1695 01e0 3B69     		ldr	r3, [r7, #16]
 1696 01e2 0133     		adds	r3, r3, #1
 1697 01e4 3B61     		str	r3, [r7, #16]
 1698              	.L89:
 425:STM32F10x_Speex_Lib/libspeex/jitter.c ****          {
 1699              		.loc 2 425 0 is_stmt 0 discriminator 1
 1700 01e6 3B69     		ldr	r3, [r7, #16]
 1701 01e8 C72B     		cmp	r3, #199
 1702 01ea D5DD     		ble	.L92
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 41


 431:STM32F10x_Speex_Lib/libspeex/jitter.c ****             }
 432:STM32F10x_Speex_Lib/libspeex/jitter.c ****          }
 433:STM32F10x_Speex_Lib/libspeex/jitter.c ****          if (jitter->destroy)
 1703              		.loc 2 433 0 is_stmt 1
 1704 01ec 7B68     		ldr	r3, [r7, #4]
 1705 01ee 03F5AF53 		add	r3, r3, #5600
 1706 01f2 1033     		adds	r3, r3, #16
 1707 01f4 1B68     		ldr	r3, [r3]
 1708 01f6 002B     		cmp	r3, #0
 1709 01f8 10D0     		beq	.L93
 434:STM32F10x_Speex_Lib/libspeex/jitter.c ****             jitter->destroy(jitter->packets[i].data);
 1710              		.loc 2 434 0
 1711 01fa 7B68     		ldr	r3, [r7, #4]
 1712 01fc 03F5AF53 		add	r3, r3, #5600
 1713 0200 1033     		adds	r3, r3, #16
 1714 0202 1968     		ldr	r1, [r3]
 1715 0204 7868     		ldr	r0, [r7, #4]
 1716 0206 7A69     		ldr	r2, [r7, #20]
 1717 0208 1346     		mov	r3, r2
 1718 020a 5B00     		lsls	r3, r3, #1
 1719 020c 1344     		add	r3, r3, r2
 1720 020e DB00     		lsls	r3, r3, #3
 1721 0210 0344     		add	r3, r3, r0
 1722 0212 1033     		adds	r3, r3, #16
 1723 0214 1B68     		ldr	r3, [r3]
 1724 0216 1846     		mov	r0, r3
 1725 0218 8847     		blx	r1
 1726 021a 0BE0     		b	.L94
 1727              	.L93:
 435:STM32F10x_Speex_Lib/libspeex/jitter.c ****          else
 436:STM32F10x_Speex_Lib/libspeex/jitter.c ****             speex_free(jitter->packets[i].data);
 1728              		.loc 2 436 0
 1729 021c 7968     		ldr	r1, [r7, #4]
 1730 021e 7A69     		ldr	r2, [r7, #20]
 1731 0220 1346     		mov	r3, r2
 1732 0222 5B00     		lsls	r3, r3, #1
 1733 0224 1344     		add	r3, r3, r2
 1734 0226 DB00     		lsls	r3, r3, #3
 1735 0228 0B44     		add	r3, r3, r1
 1736 022a 1033     		adds	r3, r3, #16
 1737 022c 1B68     		ldr	r3, [r3]
 1738 022e 1846     		mov	r0, r3
 1739 0230 FFF7FEFF 		bl	speex_free
 1740              	.L94:
 437:STM32F10x_Speex_Lib/libspeex/jitter.c ****          jitter->packets[i].data=NULL;
 1741              		.loc 2 437 0
 1742 0234 7968     		ldr	r1, [r7, #4]
 1743 0236 7A69     		ldr	r2, [r7, #20]
 1744 0238 1346     		mov	r3, r2
 1745 023a 5B00     		lsls	r3, r3, #1
 1746 023c 1344     		add	r3, r3, r2
 1747 023e DB00     		lsls	r3, r3, #3
 1748 0240 0B44     		add	r3, r3, r1
 1749 0242 1033     		adds	r3, r3, #16
 1750 0244 0022     		movs	r2, #0
 1751 0246 1A60     		str	r2, [r3]
 1752              	.L88:
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 42


 1753              	.LBE8:
 438:STM32F10x_Speex_Lib/libspeex/jitter.c ****          /*fprintf (stderr, "Buffer is full, discarding earliest frame %d (currently at %d)\n", tim
 439:STM32F10x_Speex_Lib/libspeex/jitter.c ****       }
 440:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 441:STM32F10x_Speex_Lib/libspeex/jitter.c ****       /* Copy packet in buffer */
 442:STM32F10x_Speex_Lib/libspeex/jitter.c ****       if (jitter->destroy)
 1754              		.loc 2 442 0
 1755 0248 7B68     		ldr	r3, [r7, #4]
 1756 024a 03F5AF53 		add	r3, r3, #5600
 1757 024e 1033     		adds	r3, r3, #16
 1758 0250 1B68     		ldr	r3, [r3]
 1759 0252 002B     		cmp	r3, #0
 1760 0254 0BD0     		beq	.L95
 443:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
 444:STM32F10x_Speex_Lib/libspeex/jitter.c ****          jitter->packets[i].data = packet->data;
 1761              		.loc 2 444 0
 1762 0256 3B68     		ldr	r3, [r7]
 1763 0258 1968     		ldr	r1, [r3]
 1764 025a 7868     		ldr	r0, [r7, #4]
 1765 025c 7A69     		ldr	r2, [r7, #20]
 1766 025e 1346     		mov	r3, r2
 1767 0260 5B00     		lsls	r3, r3, #1
 1768 0262 1344     		add	r3, r3, r2
 1769 0264 DB00     		lsls	r3, r3, #3
 1770 0266 0344     		add	r3, r3, r0
 1771 0268 1033     		adds	r3, r3, #16
 1772 026a 1960     		str	r1, [r3]
 1773 026c 29E0     		b	.L96
 1774              	.L95:
 445:STM32F10x_Speex_Lib/libspeex/jitter.c ****       } else {
 446:STM32F10x_Speex_Lib/libspeex/jitter.c ****          jitter->packets[i].data=(char*)speex_alloc(packet->len);
 1775              		.loc 2 446 0
 1776 026e 3B68     		ldr	r3, [r7]
 1777 0270 5B68     		ldr	r3, [r3, #4]
 1778 0272 1846     		mov	r0, r3
 1779 0274 FFF7FEFF 		bl	speex_alloc
 1780 0278 7968     		ldr	r1, [r7, #4]
 1781 027a 7A69     		ldr	r2, [r7, #20]
 1782 027c 1346     		mov	r3, r2
 1783 027e 5B00     		lsls	r3, r3, #1
 1784 0280 1344     		add	r3, r3, r2
 1785 0282 DB00     		lsls	r3, r3, #3
 1786 0284 0B44     		add	r3, r3, r1
 1787 0286 1033     		adds	r3, r3, #16
 1788 0288 1860     		str	r0, [r3]
 447:STM32F10x_Speex_Lib/libspeex/jitter.c ****          for (j=0;j<packet->len;j++)
 1789              		.loc 2 447 0
 1790 028a 0023     		movs	r3, #0
 1791 028c 3B61     		str	r3, [r7, #16]
 1792 028e 13E0     		b	.L97
 1793              	.L98:
 448:STM32F10x_Speex_Lib/libspeex/jitter.c ****             jitter->packets[i].data[j]=packet->data[j];
 1794              		.loc 2 448 0 discriminator 3
 1795 0290 7968     		ldr	r1, [r7, #4]
 1796 0292 7A69     		ldr	r2, [r7, #20]
 1797 0294 1346     		mov	r3, r2
 1798 0296 5B00     		lsls	r3, r3, #1
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 43


 1799 0298 1344     		add	r3, r3, r2
 1800 029a DB00     		lsls	r3, r3, #3
 1801 029c 0B44     		add	r3, r3, r1
 1802 029e 1033     		adds	r3, r3, #16
 1803 02a0 1A68     		ldr	r2, [r3]
 1804 02a2 3B69     		ldr	r3, [r7, #16]
 1805 02a4 1344     		add	r3, r3, r2
 1806 02a6 3A68     		ldr	r2, [r7]
 1807 02a8 1168     		ldr	r1, [r2]
 1808 02aa 3A69     		ldr	r2, [r7, #16]
 1809 02ac 0A44     		add	r2, r2, r1
 1810 02ae 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1811 02b0 1A70     		strb	r2, [r3]
 447:STM32F10x_Speex_Lib/libspeex/jitter.c ****          for (j=0;j<packet->len;j++)
 1812              		.loc 2 447 0 discriminator 3
 1813 02b2 3B69     		ldr	r3, [r7, #16]
 1814 02b4 0133     		adds	r3, r3, #1
 1815 02b6 3B61     		str	r3, [r7, #16]
 1816              	.L97:
 447:STM32F10x_Speex_Lib/libspeex/jitter.c ****          for (j=0;j<packet->len;j++)
 1817              		.loc 2 447 0 is_stmt 0 discriminator 1
 1818 02b8 3B68     		ldr	r3, [r7]
 1819 02ba 5A68     		ldr	r2, [r3, #4]
 1820 02bc 3B69     		ldr	r3, [r7, #16]
 1821 02be 9A42     		cmp	r2, r3
 1822 02c0 E6D8     		bhi	.L98
 1823              	.L96:
 449:STM32F10x_Speex_Lib/libspeex/jitter.c ****       }
 450:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->packets[i].timestamp=packet->timestamp;
 1824              		.loc 2 450 0 is_stmt 1
 1825 02c2 3B68     		ldr	r3, [r7]
 1826 02c4 9968     		ldr	r1, [r3, #8]
 1827 02c6 7868     		ldr	r0, [r7, #4]
 1828 02c8 7B69     		ldr	r3, [r7, #20]
 1829 02ca 5A1C     		adds	r2, r3, #1
 1830 02cc 1346     		mov	r3, r2
 1831 02ce 5B00     		lsls	r3, r3, #1
 1832 02d0 1344     		add	r3, r3, r2
 1833 02d2 DB00     		lsls	r3, r3, #3
 1834 02d4 0344     		add	r3, r3, r0
 1835 02d6 1960     		str	r1, [r3]
 451:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->packets[i].span=packet->span;
 1836              		.loc 2 451 0
 1837 02d8 3B68     		ldr	r3, [r7]
 1838 02da D968     		ldr	r1, [r3, #12]
 1839 02dc 7868     		ldr	r0, [r7, #4]
 1840 02de 7B69     		ldr	r3, [r7, #20]
 1841 02e0 5A1C     		adds	r2, r3, #1
 1842 02e2 1346     		mov	r3, r2
 1843 02e4 5B00     		lsls	r3, r3, #1
 1844 02e6 1344     		add	r3, r3, r2
 1845 02e8 DB00     		lsls	r3, r3, #3
 1846 02ea 0344     		add	r3, r3, r0
 1847 02ec 0433     		adds	r3, r3, #4
 1848 02ee 1960     		str	r1, [r3]
 452:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->packets[i].len=packet->len;
 1849              		.loc 2 452 0
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 44


 1850 02f0 3B68     		ldr	r3, [r7]
 1851 02f2 5968     		ldr	r1, [r3, #4]
 1852 02f4 7868     		ldr	r0, [r7, #4]
 1853 02f6 7A69     		ldr	r2, [r7, #20]
 1854 02f8 1346     		mov	r3, r2
 1855 02fa 5B00     		lsls	r3, r3, #1
 1856 02fc 1344     		add	r3, r3, r2
 1857 02fe DB00     		lsls	r3, r3, #3
 1858 0300 0344     		add	r3, r3, r0
 1859 0302 1433     		adds	r3, r3, #20
 1860 0304 1960     		str	r1, [r3]
 453:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->packets[i].sequence=packet->sequence;
 1861              		.loc 2 453 0
 1862 0306 3B68     		ldr	r3, [r7]
 1863 0308 188A     		ldrh	r0, [r3, #16]
 1864 030a 7968     		ldr	r1, [r7, #4]
 1865 030c 7A69     		ldr	r2, [r7, #20]
 1866 030e 1346     		mov	r3, r2
 1867 0310 5B00     		lsls	r3, r3, #1
 1868 0312 1344     		add	r3, r3, r2
 1869 0314 DB00     		lsls	r3, r3, #3
 1870 0316 0B44     		add	r3, r3, r1
 1871 0318 2033     		adds	r3, r3, #32
 1872 031a 0246     		mov	r2, r0	@ movhi
 1873 031c 1A80     		strh	r2, [r3]	@ movhi
 454:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->packets[i].user_data=packet->user_data;
 1874              		.loc 2 454 0
 1875 031e 3B68     		ldr	r3, [r7]
 1876 0320 5969     		ldr	r1, [r3, #20]
 1877 0322 7868     		ldr	r0, [r7, #4]
 1878 0324 7A69     		ldr	r2, [r7, #20]
 1879 0326 1346     		mov	r3, r2
 1880 0328 5B00     		lsls	r3, r3, #1
 1881 032a 1344     		add	r3, r3, r2
 1882 032c DB00     		lsls	r3, r3, #3
 1883 032e 0344     		add	r3, r3, r0
 1884 0330 2433     		adds	r3, r3, #36
 1885 0332 1960     		str	r1, [r3]
 455:STM32F10x_Speex_Lib/libspeex/jitter.c ****       if (jitter->reset_state || late)
 1886              		.loc 2 455 0
 1887 0334 7B68     		ldr	r3, [r7, #4]
 1888 0336 03F5AF53 		add	r3, r3, #5600
 1889 033a 1C33     		adds	r3, r3, #28
 1890 033c 1B68     		ldr	r3, [r3]
 1891 033e 002B     		cmp	r3, #0
 1892 0340 02D1     		bne	.L99
 1893              		.loc 2 455 0 is_stmt 0 discriminator 1
 1894 0342 FB68     		ldr	r3, [r7, #12]
 1895 0344 002B     		cmp	r3, #0
 1896 0346 07D0     		beq	.L100
 1897              	.L99:
 456:STM32F10x_Speex_Lib/libspeex/jitter.c ****          jitter->arrival[i] = 0;
 1898              		.loc 2 456 0 is_stmt 1
 1899 0348 7B68     		ldr	r3, [r7, #4]
 1900 034a 7A69     		ldr	r2, [r7, #20]
 1901 034c 02F2B442 		addw	r2, r2, #1204
 1902 0350 0021     		movs	r1, #0
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 45


 1903 0352 43F82210 		str	r1, [r3, r2, lsl #2]
 457:STM32F10x_Speex_Lib/libspeex/jitter.c ****       else
 458:STM32F10x_Speex_Lib/libspeex/jitter.c ****          jitter->arrival[i] = jitter->next_stop;
 459:STM32F10x_Speex_Lib/libspeex/jitter.c ****    }
 460:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 461:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 462:STM32F10x_Speex_Lib/libspeex/jitter.c **** }
 1904              		.loc 2 462 0
 1905 0356 07E0     		b	.L101
 1906              	.L100:
 458:STM32F10x_Speex_Lib/libspeex/jitter.c ****    }
 1907              		.loc 2 458 0
 1908 0358 7B68     		ldr	r3, [r7, #4]
 1909 035a 9968     		ldr	r1, [r3, #8]
 1910 035c 7B68     		ldr	r3, [r7, #4]
 1911 035e 7A69     		ldr	r2, [r7, #20]
 1912 0360 02F2B442 		addw	r2, r2, #1204
 1913 0364 43F82210 		str	r1, [r3, r2, lsl #2]
 1914              	.L101:
 1915              		.loc 2 462 0
 1916 0368 00BF     		nop
 1917 036a 1837     		adds	r7, r7, #24
 1918              	.LCFI61:
 1919              		.cfi_def_cfa_offset 8
 1920 036c BD46     		mov	sp, r7
 1921              	.LCFI62:
 1922              		.cfi_def_cfa_register 13
 1923              		@ sp needed
 1924 036e 80BD     		pop	{r7, pc}
 1925              		.cfi_endproc
 1926              	.LFE17:
 1928              		.section	.rodata
 1929 0061 000000   		.align	2
 1930              	.LC2:
 1931 0064 6A697474 		.ascii	"jitter_buffer_get(): packet too large to fit. Size "
 1931      65725F62 
 1931      75666665 
 1931      725F6765 
 1931      7428293A 
 1932 0097 697300   		.ascii	"is\000"
 1933 009a 0000     		.align	2
 1934              	.LC3:
 1935 009c 6A697474 		.ascii	"jitter_buffer_get() discarding non-zero start_offse"
 1935      65725F62 
 1935      75666665 
 1935      725F6765 
 1935      74282920 
 1936 00cf 7400     		.ascii	"t\000"
 1937              		.section	.text.jitter_buffer_get,"ax",%progbits
 1938              		.align	2
 1939              		.global	jitter_buffer_get
 1940              		.thumb
 1941              		.thumb_func
 1943              	jitter_buffer_get:
 1944              	.LFB18:
 463:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 464:STM32F10x_Speex_Lib/libspeex/jitter.c **** /** Get one packet from the jitter buffer */
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 46


 465:STM32F10x_Speex_Lib/libspeex/jitter.c **** EXPORT int jitter_buffer_get(JitterBuffer *jitter, JitterBufferPacket *packet, spx_int32_t desired_
 466:STM32F10x_Speex_Lib/libspeex/jitter.c **** {
 1945              		.loc 2 466 0
 1946              		.cfi_startproc
 1947              		@ args = 0, pretend = 0, frame = 64
 1948              		@ frame_needed = 1, uses_anonymous_args = 0
 1949 0000 80B5     		push	{r7, lr}
 1950              	.LCFI63:
 1951              		.cfi_def_cfa_offset 8
 1952              		.cfi_offset 7, -8
 1953              		.cfi_offset 14, -4
 1954 0002 90B0     		sub	sp, sp, #64
 1955              	.LCFI64:
 1956              		.cfi_def_cfa_offset 72
 1957 0004 00AF     		add	r7, sp, #0
 1958              	.LCFI65:
 1959              		.cfi_def_cfa_register 7
 1960 0006 F860     		str	r0, [r7, #12]
 1961 0008 B960     		str	r1, [r7, #8]
 1962 000a 7A60     		str	r2, [r7, #4]
 1963 000c 3B60     		str	r3, [r7]
 467:STM32F10x_Speex_Lib/libspeex/jitter.c ****    int i;
 468:STM32F10x_Speex_Lib/libspeex/jitter.c ****    unsigned int j;
 469:STM32F10x_Speex_Lib/libspeex/jitter.c ****    int incomplete = 0;
 1964              		.loc 2 469 0
 1965 000e 0023     		movs	r3, #0
 1966 0010 FB61     		str	r3, [r7, #28]
 470:STM32F10x_Speex_Lib/libspeex/jitter.c ****    spx_int16_t opt;
 471:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 472:STM32F10x_Speex_Lib/libspeex/jitter.c ****    if (start_offset != NULL)
 1967              		.loc 2 472 0
 1968 0012 3B68     		ldr	r3, [r7]
 1969 0014 002B     		cmp	r3, #0
 1970 0016 02D0     		beq	.L104
 473:STM32F10x_Speex_Lib/libspeex/jitter.c ****       *start_offset = 0;
 1971              		.loc 2 473 0
 1972 0018 3B68     		ldr	r3, [r7]
 1973 001a 0022     		movs	r2, #0
 1974 001c 1A60     		str	r2, [r3]
 1975              	.L104:
 474:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 475:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /* Syncing on the first call */
 476:STM32F10x_Speex_Lib/libspeex/jitter.c ****    if (jitter->reset_state)
 1976              		.loc 2 476 0
 1977 001e FB68     		ldr	r3, [r7, #12]
 1978 0020 03F5AF53 		add	r3, r3, #5600
 1979 0024 1C33     		adds	r3, r3, #28
 1980 0026 1B68     		ldr	r3, [r3]
 1981 0028 002B     		cmp	r3, #0
 1982 002a 50D0     		beq	.L105
 1983              	.LBB9:
 477:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 478:STM32F10x_Speex_Lib/libspeex/jitter.c ****       int found = 0;
 1984              		.loc 2 478 0
 1985 002c 0023     		movs	r3, #0
 1986 002e 7B63     		str	r3, [r7, #52]
 479:STM32F10x_Speex_Lib/libspeex/jitter.c ****       /* Find the oldest packet */
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 47


 480:STM32F10x_Speex_Lib/libspeex/jitter.c ****       spx_uint32_t oldest=0;
 1987              		.loc 2 480 0
 1988 0030 0023     		movs	r3, #0
 1989 0032 3B63     		str	r3, [r7, #48]
 481:STM32F10x_Speex_Lib/libspeex/jitter.c ****       for (i=0;i<SPEEX_JITTER_MAX_BUFFER_SIZE;i++)
 1990              		.loc 2 481 0
 1991 0034 0023     		movs	r3, #0
 1992 0036 FB63     		str	r3, [r7, #60]
 1993 0038 29E0     		b	.L106
 1994              	.L109:
 482:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
 483:STM32F10x_Speex_Lib/libspeex/jitter.c ****          if (jitter->packets[i].data && (!found || LT32(jitter->packets[i].timestamp,oldest)))
 1995              		.loc 2 483 0
 1996 003a F968     		ldr	r1, [r7, #12]
 1997 003c FA6B     		ldr	r2, [r7, #60]
 1998 003e 1346     		mov	r3, r2
 1999 0040 5B00     		lsls	r3, r3, #1
 2000 0042 1344     		add	r3, r3, r2
 2001 0044 DB00     		lsls	r3, r3, #3
 2002 0046 0B44     		add	r3, r3, r1
 2003 0048 1033     		adds	r3, r3, #16
 2004 004a 1B68     		ldr	r3, [r3]
 2005 004c 002B     		cmp	r3, #0
 2006 004e 1BD0     		beq	.L107
 2007              		.loc 2 483 0 is_stmt 0 discriminator 1
 2008 0050 7B6B     		ldr	r3, [r7, #52]
 2009 0052 002B     		cmp	r3, #0
 2010 0054 0CD0     		beq	.L108
 2011              		.loc 2 483 0 discriminator 2
 2012 0056 F968     		ldr	r1, [r7, #12]
 2013 0058 FB6B     		ldr	r3, [r7, #60]
 2014 005a 5A1C     		adds	r2, r3, #1
 2015 005c 1346     		mov	r3, r2
 2016 005e 5B00     		lsls	r3, r3, #1
 2017 0060 1344     		add	r3, r3, r2
 2018 0062 DB00     		lsls	r3, r3, #3
 2019 0064 0B44     		add	r3, r3, r1
 2020 0066 1A68     		ldr	r2, [r3]
 2021 0068 3B6B     		ldr	r3, [r7, #48]
 2022 006a D31A     		subs	r3, r2, r3
 2023 006c 002B     		cmp	r3, #0
 2024 006e 0BDA     		bge	.L107
 2025              	.L108:
 484:STM32F10x_Speex_Lib/libspeex/jitter.c ****          {
 485:STM32F10x_Speex_Lib/libspeex/jitter.c ****             oldest = jitter->packets[i].timestamp;
 2026              		.loc 2 485 0 is_stmt 1
 2027 0070 F968     		ldr	r1, [r7, #12]
 2028 0072 FB6B     		ldr	r3, [r7, #60]
 2029 0074 5A1C     		adds	r2, r3, #1
 2030 0076 1346     		mov	r3, r2
 2031 0078 5B00     		lsls	r3, r3, #1
 2032 007a 1344     		add	r3, r3, r2
 2033 007c DB00     		lsls	r3, r3, #3
 2034 007e 0B44     		add	r3, r3, r1
 2035 0080 1B68     		ldr	r3, [r3]
 2036 0082 3B63     		str	r3, [r7, #48]
 486:STM32F10x_Speex_Lib/libspeex/jitter.c ****             found = 1;
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 48


 2037              		.loc 2 486 0
 2038 0084 0123     		movs	r3, #1
 2039 0086 7B63     		str	r3, [r7, #52]
 2040              	.L107:
 481:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
 2041              		.loc 2 481 0 discriminator 2
 2042 0088 FB6B     		ldr	r3, [r7, #60]
 2043 008a 0133     		adds	r3, r3, #1
 2044 008c FB63     		str	r3, [r7, #60]
 2045              	.L106:
 481:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
 2046              		.loc 2 481 0 is_stmt 0 discriminator 1
 2047 008e FB6B     		ldr	r3, [r7, #60]
 2048 0090 C72B     		cmp	r3, #199
 2049 0092 D2DD     		ble	.L109
 487:STM32F10x_Speex_Lib/libspeex/jitter.c ****          }
 488:STM32F10x_Speex_Lib/libspeex/jitter.c ****       }
 489:STM32F10x_Speex_Lib/libspeex/jitter.c ****       if (found)
 2050              		.loc 2 489 0 is_stmt 1
 2051 0094 7B6B     		ldr	r3, [r7, #52]
 2052 0096 002B     		cmp	r3, #0
 2053 0098 0CD0     		beq	.L110
 490:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
 491:STM32F10x_Speex_Lib/libspeex/jitter.c ****          jitter->reset_state=0;         
 2054              		.loc 2 491 0
 2055 009a FB68     		ldr	r3, [r7, #12]
 2056 009c 03F5AF53 		add	r3, r3, #5600
 2057 00a0 1C33     		adds	r3, r3, #28
 2058 00a2 0022     		movs	r2, #0
 2059 00a4 1A60     		str	r2, [r3]
 492:STM32F10x_Speex_Lib/libspeex/jitter.c ****          jitter->pointer_timestamp = oldest;
 2060              		.loc 2 492 0
 2061 00a6 FB68     		ldr	r3, [r7, #12]
 2062 00a8 3A6B     		ldr	r2, [r7, #48]
 2063 00aa 1A60     		str	r2, [r3]
 493:STM32F10x_Speex_Lib/libspeex/jitter.c ****          jitter->next_stop = oldest;
 2064              		.loc 2 493 0
 2065 00ac FB68     		ldr	r3, [r7, #12]
 2066 00ae 3A6B     		ldr	r2, [r7, #48]
 2067 00b0 9A60     		str	r2, [r3, #8]
 2068 00b2 0CE0     		b	.L105
 2069              	.L110:
 494:STM32F10x_Speex_Lib/libspeex/jitter.c ****       } else {
 495:STM32F10x_Speex_Lib/libspeex/jitter.c ****          packet->timestamp = 0;
 2070              		.loc 2 495 0
 2071 00b4 BB68     		ldr	r3, [r7, #8]
 2072 00b6 0022     		movs	r2, #0
 2073 00b8 9A60     		str	r2, [r3, #8]
 496:STM32F10x_Speex_Lib/libspeex/jitter.c ****          packet->span = jitter->interp_requested;
 2074              		.loc 2 496 0
 2075 00ba FB68     		ldr	r3, [r7, #12]
 2076 00bc 03F5B053 		add	r3, r3, #5632
 2077 00c0 0833     		adds	r3, r3, #8
 2078 00c2 1B68     		ldr	r3, [r3]
 2079 00c4 1A46     		mov	r2, r3
 2080 00c6 BB68     		ldr	r3, [r7, #8]
 2081 00c8 DA60     		str	r2, [r3, #12]
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 49


 497:STM32F10x_Speex_Lib/libspeex/jitter.c ****          return JITTER_BUFFER_MISSING;
 2082              		.loc 2 497 0
 2083 00ca 0123     		movs	r3, #1
 2084 00cc 06E3     		b	.L111
 2085              	.L105:
 2086              	.LBE9:
 498:STM32F10x_Speex_Lib/libspeex/jitter.c ****       }
 499:STM32F10x_Speex_Lib/libspeex/jitter.c ****    }
 500:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 501:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 502:STM32F10x_Speex_Lib/libspeex/jitter.c ****    jitter->last_returned_timestamp = jitter->pointer_timestamp;
 2087              		.loc 2 502 0
 2088 00ce FB68     		ldr	r3, [r7, #12]
 2089 00d0 1A68     		ldr	r2, [r3]
 2090 00d2 FB68     		ldr	r3, [r7, #12]
 2091 00d4 5A60     		str	r2, [r3, #4]
 503:STM32F10x_Speex_Lib/libspeex/jitter.c ****          
 504:STM32F10x_Speex_Lib/libspeex/jitter.c ****    if (jitter->interp_requested != 0)
 2092              		.loc 2 504 0
 2093 00d6 FB68     		ldr	r3, [r7, #12]
 2094 00d8 03F5B053 		add	r3, r3, #5632
 2095 00dc 0833     		adds	r3, r3, #8
 2096 00de 1B68     		ldr	r3, [r3]
 2097 00e0 002B     		cmp	r3, #0
 2098 00e2 27D0     		beq	.L112
 505:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 506:STM32F10x_Speex_Lib/libspeex/jitter.c ****       packet->timestamp = jitter->pointer_timestamp;
 2099              		.loc 2 506 0
 2100 00e4 FB68     		ldr	r3, [r7, #12]
 2101 00e6 1A68     		ldr	r2, [r3]
 2102 00e8 BB68     		ldr	r3, [r7, #8]
 2103 00ea 9A60     		str	r2, [r3, #8]
 507:STM32F10x_Speex_Lib/libspeex/jitter.c ****       packet->span = jitter->interp_requested;
 2104              		.loc 2 507 0
 2105 00ec FB68     		ldr	r3, [r7, #12]
 2106 00ee 03F5B053 		add	r3, r3, #5632
 2107 00f2 0833     		adds	r3, r3, #8
 2108 00f4 1B68     		ldr	r3, [r3]
 2109 00f6 1A46     		mov	r2, r3
 2110 00f8 BB68     		ldr	r3, [r7, #8]
 2111 00fa DA60     		str	r2, [r3, #12]
 508:STM32F10x_Speex_Lib/libspeex/jitter.c ****       
 509:STM32F10x_Speex_Lib/libspeex/jitter.c ****       /* Increment the pointer because it got decremented in the delay update */
 510:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->pointer_timestamp += jitter->interp_requested;
 2112              		.loc 2 510 0
 2113 00fc FB68     		ldr	r3, [r7, #12]
 2114 00fe 1A68     		ldr	r2, [r3]
 2115 0100 FB68     		ldr	r3, [r7, #12]
 2116 0102 03F5B053 		add	r3, r3, #5632
 2117 0106 0833     		adds	r3, r3, #8
 2118 0108 1B68     		ldr	r3, [r3]
 2119 010a 1A44     		add	r2, r2, r3
 2120 010c FB68     		ldr	r3, [r7, #12]
 2121 010e 1A60     		str	r2, [r3]
 511:STM32F10x_Speex_Lib/libspeex/jitter.c ****       packet->len = 0;
 2122              		.loc 2 511 0
 2123 0110 BB68     		ldr	r3, [r7, #8]
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 50


 2124 0112 0022     		movs	r2, #0
 2125 0114 5A60     		str	r2, [r3, #4]
 512:STM32F10x_Speex_Lib/libspeex/jitter.c ****       /*fprintf (stderr, "Deferred interpolate\n");*/
 513:STM32F10x_Speex_Lib/libspeex/jitter.c ****       
 514:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->interp_requested = 0;
 2126              		.loc 2 514 0
 2127 0116 FB68     		ldr	r3, [r7, #12]
 2128 0118 03F5B053 		add	r3, r3, #5632
 2129 011c 0833     		adds	r3, r3, #8
 2130 011e 0022     		movs	r2, #0
 2131 0120 1A60     		str	r2, [r3]
 515:STM32F10x_Speex_Lib/libspeex/jitter.c ****       
 516:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->buffered = packet->span - desired_span;
 2132              		.loc 2 516 0
 2133 0122 BB68     		ldr	r3, [r7, #8]
 2134 0124 DA68     		ldr	r2, [r3, #12]
 2135 0126 7B68     		ldr	r3, [r7, #4]
 2136 0128 D31A     		subs	r3, r2, r3
 2137 012a 1A46     		mov	r2, r3
 2138 012c FB68     		ldr	r3, [r7, #12]
 2139 012e DA60     		str	r2, [r3, #12]
 517:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 518:STM32F10x_Speex_Lib/libspeex/jitter.c ****       return JITTER_BUFFER_INSERTION;
 2140              		.loc 2 518 0
 2141 0130 0223     		movs	r3, #2
 2142 0132 D3E2     		b	.L111
 2143              	.L112:
 519:STM32F10x_Speex_Lib/libspeex/jitter.c ****    }
 520:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 521:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /* Searching for the packet that fits best */
 522:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 523:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /* Search the buffer for a packet with the right timestamp and spanning the whole current chunk 
 524:STM32F10x_Speex_Lib/libspeex/jitter.c ****    for (i=0;i<SPEEX_JITTER_MAX_BUFFER_SIZE;i++)
 2144              		.loc 2 524 0
 2145 0134 0023     		movs	r3, #0
 2146 0136 FB63     		str	r3, [r7, #60]
 2147 0138 35E0     		b	.L113
 2148              	.L116:
 525:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 526:STM32F10x_Speex_Lib/libspeex/jitter.c ****       if (jitter->packets[i].data && jitter->packets[i].timestamp==jitter->pointer_timestamp && GE3
 2149              		.loc 2 526 0
 2150 013a F968     		ldr	r1, [r7, #12]
 2151 013c FA6B     		ldr	r2, [r7, #60]
 2152 013e 1346     		mov	r3, r2
 2153 0140 5B00     		lsls	r3, r3, #1
 2154 0142 1344     		add	r3, r3, r2
 2155 0144 DB00     		lsls	r3, r3, #3
 2156 0146 0B44     		add	r3, r3, r1
 2157 0148 1033     		adds	r3, r3, #16
 2158 014a 1B68     		ldr	r3, [r3]
 2159 014c 002B     		cmp	r3, #0
 2160 014e 27D0     		beq	.L114
 2161              		.loc 2 526 0 is_stmt 0 discriminator 1
 2162 0150 F968     		ldr	r1, [r7, #12]
 2163 0152 FB6B     		ldr	r3, [r7, #60]
 2164 0154 5A1C     		adds	r2, r3, #1
 2165 0156 1346     		mov	r3, r2
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 51


 2166 0158 5B00     		lsls	r3, r3, #1
 2167 015a 1344     		add	r3, r3, r2
 2168 015c DB00     		lsls	r3, r3, #3
 2169 015e 0B44     		add	r3, r3, r1
 2170 0160 1A68     		ldr	r2, [r3]
 2171 0162 FB68     		ldr	r3, [r7, #12]
 2172 0164 1B68     		ldr	r3, [r3]
 2173 0166 9A42     		cmp	r2, r3
 2174 0168 1AD1     		bne	.L114
 2175              		.loc 2 526 0 discriminator 2
 2176 016a F968     		ldr	r1, [r7, #12]
 2177 016c FB6B     		ldr	r3, [r7, #60]
 2178 016e 5A1C     		adds	r2, r3, #1
 2179 0170 1346     		mov	r3, r2
 2180 0172 5B00     		lsls	r3, r3, #1
 2181 0174 1344     		add	r3, r3, r2
 2182 0176 DB00     		lsls	r3, r3, #3
 2183 0178 0B44     		add	r3, r3, r1
 2184 017a 1968     		ldr	r1, [r3]
 2185 017c F868     		ldr	r0, [r7, #12]
 2186 017e FB6B     		ldr	r3, [r7, #60]
 2187 0180 5A1C     		adds	r2, r3, #1
 2188 0182 1346     		mov	r3, r2
 2189 0184 5B00     		lsls	r3, r3, #1
 2190 0186 1344     		add	r3, r3, r2
 2191 0188 DB00     		lsls	r3, r3, #3
 2192 018a 0344     		add	r3, r3, r0
 2193 018c 0433     		adds	r3, r3, #4
 2194 018e 1B68     		ldr	r3, [r3]
 2195 0190 CA18     		adds	r2, r1, r3
 2196 0192 FB68     		ldr	r3, [r7, #12]
 2197 0194 1968     		ldr	r1, [r3]
 2198 0196 7B68     		ldr	r3, [r7, #4]
 2199 0198 0B44     		add	r3, r3, r1
 2200 019a D31A     		subs	r3, r2, r3
 2201 019c 002B     		cmp	r3, #0
 2202 019e 06DA     		bge	.L144
 2203              	.L114:
 524:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 2204              		.loc 2 524 0 is_stmt 1 discriminator 2
 2205 01a0 FB6B     		ldr	r3, [r7, #60]
 2206 01a2 0133     		adds	r3, r3, #1
 2207 01a4 FB63     		str	r3, [r7, #60]
 2208              	.L113:
 524:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 2209              		.loc 2 524 0 is_stmt 0 discriminator 1
 2210 01a6 FB6B     		ldr	r3, [r7, #60]
 2211 01a8 C72B     		cmp	r3, #199
 2212 01aa C6DD     		ble	.L116
 2213 01ac 00E0     		b	.L115
 2214              	.L144:
 527:STM32F10x_Speex_Lib/libspeex/jitter.c ****          break;
 2215              		.loc 2 527 0 is_stmt 1
 2216 01ae 00BF     		nop
 2217              	.L115:
 528:STM32F10x_Speex_Lib/libspeex/jitter.c ****    }
 529:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 52


 530:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /* If no match, try for an "older" packet that still spans (fully) the current chunk */
 531:STM32F10x_Speex_Lib/libspeex/jitter.c ****    if (i==SPEEX_JITTER_MAX_BUFFER_SIZE)
 2218              		.loc 2 531 0
 2219 01b0 FB6B     		ldr	r3, [r7, #60]
 2220 01b2 C82B     		cmp	r3, #200
 2221 01b4 3ED1     		bne	.L117
 532:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 533:STM32F10x_Speex_Lib/libspeex/jitter.c ****       for (i=0;i<SPEEX_JITTER_MAX_BUFFER_SIZE;i++)
 2222              		.loc 2 533 0
 2223 01b6 0023     		movs	r3, #0
 2224 01b8 FB63     		str	r3, [r7, #60]
 2225 01ba 36E0     		b	.L118
 2226              	.L120:
 534:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
 535:STM32F10x_Speex_Lib/libspeex/jitter.c ****          if (jitter->packets[i].data && LE32(jitter->packets[i].timestamp, jitter->pointer_timestam
 2227              		.loc 2 535 0
 2228 01bc F968     		ldr	r1, [r7, #12]
 2229 01be FA6B     		ldr	r2, [r7, #60]
 2230 01c0 1346     		mov	r3, r2
 2231 01c2 5B00     		lsls	r3, r3, #1
 2232 01c4 1344     		add	r3, r3, r2
 2233 01c6 DB00     		lsls	r3, r3, #3
 2234 01c8 0B44     		add	r3, r3, r1
 2235 01ca 1033     		adds	r3, r3, #16
 2236 01cc 1B68     		ldr	r3, [r3]
 2237 01ce 002B     		cmp	r3, #0
 2238 01d0 28D0     		beq	.L119
 2239              		.loc 2 535 0 is_stmt 0 discriminator 1
 2240 01d2 F968     		ldr	r1, [r7, #12]
 2241 01d4 FB6B     		ldr	r3, [r7, #60]
 2242 01d6 5A1C     		adds	r2, r3, #1
 2243 01d8 1346     		mov	r3, r2
 2244 01da 5B00     		lsls	r3, r3, #1
 2245 01dc 1344     		add	r3, r3, r2
 2246 01de DB00     		lsls	r3, r3, #3
 2247 01e0 0B44     		add	r3, r3, r1
 2248 01e2 1A68     		ldr	r2, [r3]
 2249 01e4 FB68     		ldr	r3, [r7, #12]
 2250 01e6 1B68     		ldr	r3, [r3]
 2251 01e8 D31A     		subs	r3, r2, r3
 2252 01ea 002B     		cmp	r3, #0
 2253 01ec 1ADC     		bgt	.L119
 2254              		.loc 2 535 0 discriminator 2
 2255 01ee F968     		ldr	r1, [r7, #12]
 2256 01f0 FB6B     		ldr	r3, [r7, #60]
 2257 01f2 5A1C     		adds	r2, r3, #1
 2258 01f4 1346     		mov	r3, r2
 2259 01f6 5B00     		lsls	r3, r3, #1
 2260 01f8 1344     		add	r3, r3, r2
 2261 01fa DB00     		lsls	r3, r3, #3
 2262 01fc 0B44     		add	r3, r3, r1
 2263 01fe 1968     		ldr	r1, [r3]
 2264 0200 F868     		ldr	r0, [r7, #12]
 2265 0202 FB6B     		ldr	r3, [r7, #60]
 2266 0204 5A1C     		adds	r2, r3, #1
 2267 0206 1346     		mov	r3, r2
 2268 0208 5B00     		lsls	r3, r3, #1
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 53


 2269 020a 1344     		add	r3, r3, r2
 2270 020c DB00     		lsls	r3, r3, #3
 2271 020e 0344     		add	r3, r3, r0
 2272 0210 0433     		adds	r3, r3, #4
 2273 0212 1B68     		ldr	r3, [r3]
 2274 0214 CA18     		adds	r2, r1, r3
 2275 0216 FB68     		ldr	r3, [r7, #12]
 2276 0218 1968     		ldr	r1, [r3]
 2277 021a 7B68     		ldr	r3, [r7, #4]
 2278 021c 0B44     		add	r3, r3, r1
 2279 021e D31A     		subs	r3, r2, r3
 2280 0220 002B     		cmp	r3, #0
 2281 0222 06DA     		bge	.L145
 2282              	.L119:
 533:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
 2283              		.loc 2 533 0 is_stmt 1 discriminator 2
 2284 0224 FB6B     		ldr	r3, [r7, #60]
 2285 0226 0133     		adds	r3, r3, #1
 2286 0228 FB63     		str	r3, [r7, #60]
 2287              	.L118:
 533:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
 2288              		.loc 2 533 0 is_stmt 0 discriminator 1
 2289 022a FB6B     		ldr	r3, [r7, #60]
 2290 022c C72B     		cmp	r3, #199
 2291 022e C5DD     		ble	.L120
 2292 0230 00E0     		b	.L117
 2293              	.L145:
 536:STM32F10x_Speex_Lib/libspeex/jitter.c ****             break;
 2294              		.loc 2 536 0 is_stmt 1
 2295 0232 00BF     		nop
 2296              	.L117:
 537:STM32F10x_Speex_Lib/libspeex/jitter.c ****       }
 538:STM32F10x_Speex_Lib/libspeex/jitter.c ****    }
 539:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 540:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /* If still no match, try for an "older" packet that spans part of the current chunk */
 541:STM32F10x_Speex_Lib/libspeex/jitter.c ****    if (i==SPEEX_JITTER_MAX_BUFFER_SIZE)
 2297              		.loc 2 541 0
 2298 0234 FB6B     		ldr	r3, [r7, #60]
 2299 0236 C82B     		cmp	r3, #200
 2300 0238 3CD1     		bne	.L121
 542:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 543:STM32F10x_Speex_Lib/libspeex/jitter.c ****       for (i=0;i<SPEEX_JITTER_MAX_BUFFER_SIZE;i++)
 2301              		.loc 2 543 0
 2302 023a 0023     		movs	r3, #0
 2303 023c FB63     		str	r3, [r7, #60]
 2304 023e 34E0     		b	.L122
 2305              	.L124:
 544:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
 545:STM32F10x_Speex_Lib/libspeex/jitter.c ****          if (jitter->packets[i].data && LE32(jitter->packets[i].timestamp, jitter->pointer_timestam
 2306              		.loc 2 545 0
 2307 0240 F968     		ldr	r1, [r7, #12]
 2308 0242 FA6B     		ldr	r2, [r7, #60]
 2309 0244 1346     		mov	r3, r2
 2310 0246 5B00     		lsls	r3, r3, #1
 2311 0248 1344     		add	r3, r3, r2
 2312 024a DB00     		lsls	r3, r3, #3
 2313 024c 0B44     		add	r3, r3, r1
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 54


 2314 024e 1033     		adds	r3, r3, #16
 2315 0250 1B68     		ldr	r3, [r3]
 2316 0252 002B     		cmp	r3, #0
 2317 0254 26D0     		beq	.L123
 2318              		.loc 2 545 0 is_stmt 0 discriminator 1
 2319 0256 F968     		ldr	r1, [r7, #12]
 2320 0258 FB6B     		ldr	r3, [r7, #60]
 2321 025a 5A1C     		adds	r2, r3, #1
 2322 025c 1346     		mov	r3, r2
 2323 025e 5B00     		lsls	r3, r3, #1
 2324 0260 1344     		add	r3, r3, r2
 2325 0262 DB00     		lsls	r3, r3, #3
 2326 0264 0B44     		add	r3, r3, r1
 2327 0266 1A68     		ldr	r2, [r3]
 2328 0268 FB68     		ldr	r3, [r7, #12]
 2329 026a 1B68     		ldr	r3, [r3]
 2330 026c D31A     		subs	r3, r2, r3
 2331 026e 002B     		cmp	r3, #0
 2332 0270 18DC     		bgt	.L123
 2333              		.loc 2 545 0 discriminator 2
 2334 0272 F968     		ldr	r1, [r7, #12]
 2335 0274 FB6B     		ldr	r3, [r7, #60]
 2336 0276 5A1C     		adds	r2, r3, #1
 2337 0278 1346     		mov	r3, r2
 2338 027a 5B00     		lsls	r3, r3, #1
 2339 027c 1344     		add	r3, r3, r2
 2340 027e DB00     		lsls	r3, r3, #3
 2341 0280 0B44     		add	r3, r3, r1
 2342 0282 1968     		ldr	r1, [r3]
 2343 0284 F868     		ldr	r0, [r7, #12]
 2344 0286 FB6B     		ldr	r3, [r7, #60]
 2345 0288 5A1C     		adds	r2, r3, #1
 2346 028a 1346     		mov	r3, r2
 2347 028c 5B00     		lsls	r3, r3, #1
 2348 028e 1344     		add	r3, r3, r2
 2349 0290 DB00     		lsls	r3, r3, #3
 2350 0292 0344     		add	r3, r3, r0
 2351 0294 0433     		adds	r3, r3, #4
 2352 0296 1B68     		ldr	r3, [r3]
 2353 0298 CA18     		adds	r2, r1, r3
 2354 029a FB68     		ldr	r3, [r7, #12]
 2355 029c 1B68     		ldr	r3, [r3]
 2356 029e D31A     		subs	r3, r2, r3
 2357 02a0 002B     		cmp	r3, #0
 2358 02a2 06DC     		bgt	.L146
 2359              	.L123:
 543:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
 2360              		.loc 2 543 0 is_stmt 1 discriminator 2
 2361 02a4 FB6B     		ldr	r3, [r7, #60]
 2362 02a6 0133     		adds	r3, r3, #1
 2363 02a8 FB63     		str	r3, [r7, #60]
 2364              	.L122:
 543:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
 2365              		.loc 2 543 0 is_stmt 0 discriminator 1
 2366 02aa FB6B     		ldr	r3, [r7, #60]
 2367 02ac C72B     		cmp	r3, #199
 2368 02ae C7DD     		ble	.L124
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 55


 2369 02b0 00E0     		b	.L121
 2370              	.L146:
 546:STM32F10x_Speex_Lib/libspeex/jitter.c ****             break;
 2371              		.loc 2 546 0 is_stmt 1
 2372 02b2 00BF     		nop
 2373              	.L121:
 547:STM32F10x_Speex_Lib/libspeex/jitter.c ****       }
 548:STM32F10x_Speex_Lib/libspeex/jitter.c ****    }
 549:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 550:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /* If still no match, try for earliest packet possible */
 551:STM32F10x_Speex_Lib/libspeex/jitter.c ****    if (i==SPEEX_JITTER_MAX_BUFFER_SIZE)
 2374              		.loc 2 551 0
 2375 02b4 FB6B     		ldr	r3, [r7, #60]
 2376 02b6 C82B     		cmp	r3, #200
 2377 02b8 40F08480 		bne	.L125
 2378              	.LBB10:
 552:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 553:STM32F10x_Speex_Lib/libspeex/jitter.c ****       int found = 0;
 2379              		.loc 2 553 0
 2380 02bc 0023     		movs	r3, #0
 2381 02be FB62     		str	r3, [r7, #44]
 554:STM32F10x_Speex_Lib/libspeex/jitter.c ****       spx_uint32_t best_time=0;
 2382              		.loc 2 554 0
 2383 02c0 0023     		movs	r3, #0
 2384 02c2 BB62     		str	r3, [r7, #40]
 555:STM32F10x_Speex_Lib/libspeex/jitter.c ****       int best_span=0;
 2385              		.loc 2 555 0
 2386 02c4 0023     		movs	r3, #0
 2387 02c6 7B62     		str	r3, [r7, #36]
 556:STM32F10x_Speex_Lib/libspeex/jitter.c ****       int besti=0;
 2388              		.loc 2 556 0
 2389 02c8 0023     		movs	r3, #0
 2390 02ca 3B62     		str	r3, [r7, #32]
 557:STM32F10x_Speex_Lib/libspeex/jitter.c ****       for (i=0;i<SPEEX_JITTER_MAX_BUFFER_SIZE;i++)
 2391              		.loc 2 557 0
 2392 02cc 0023     		movs	r3, #0
 2393 02ce FB63     		str	r3, [r7, #60]
 2394 02d0 6EE0     		b	.L126
 2395              	.L129:
 558:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
 559:STM32F10x_Speex_Lib/libspeex/jitter.c ****          /* check if packet starts within current chunk */
 560:STM32F10x_Speex_Lib/libspeex/jitter.c ****          if (jitter->packets[i].data && LT32(jitter->packets[i].timestamp,jitter->pointer_timestamp
 2396              		.loc 2 560 0
 2397 02d2 F968     		ldr	r1, [r7, #12]
 2398 02d4 FA6B     		ldr	r2, [r7, #60]
 2399 02d6 1346     		mov	r3, r2
 2400 02d8 5B00     		lsls	r3, r3, #1
 2401 02da 1344     		add	r3, r3, r2
 2402 02dc DB00     		lsls	r3, r3, #3
 2403 02de 0B44     		add	r3, r3, r1
 2404 02e0 1033     		adds	r3, r3, #16
 2405 02e2 1B68     		ldr	r3, [r3]
 2406 02e4 002B     		cmp	r3, #0
 2407 02e6 60D0     		beq	.L127
 2408              		.loc 2 560 0 is_stmt 0 discriminator 1
 2409 02e8 F968     		ldr	r1, [r7, #12]
 2410 02ea FB6B     		ldr	r3, [r7, #60]
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 56


 2411 02ec 5A1C     		adds	r2, r3, #1
 2412 02ee 1346     		mov	r3, r2
 2413 02f0 5B00     		lsls	r3, r3, #1
 2414 02f2 1344     		add	r3, r3, r2
 2415 02f4 DB00     		lsls	r3, r3, #3
 2416 02f6 0B44     		add	r3, r3, r1
 2417 02f8 1A68     		ldr	r2, [r3]
 2418 02fa FB68     		ldr	r3, [r7, #12]
 2419 02fc 1968     		ldr	r1, [r3]
 2420 02fe 7B68     		ldr	r3, [r7, #4]
 2421 0300 0B44     		add	r3, r3, r1
 2422 0302 D31A     		subs	r3, r2, r3
 2423 0304 002B     		cmp	r3, #0
 2424 0306 50DA     		bge	.L127
 2425              		.loc 2 560 0 discriminator 2
 2426 0308 F968     		ldr	r1, [r7, #12]
 2427 030a FB6B     		ldr	r3, [r7, #60]
 2428 030c 5A1C     		adds	r2, r3, #1
 2429 030e 1346     		mov	r3, r2
 2430 0310 5B00     		lsls	r3, r3, #1
 2431 0312 1344     		add	r3, r3, r2
 2432 0314 DB00     		lsls	r3, r3, #3
 2433 0316 0B44     		add	r3, r3, r1
 2434 0318 1A68     		ldr	r2, [r3]
 2435 031a FB68     		ldr	r3, [r7, #12]
 2436 031c 1B68     		ldr	r3, [r3]
 2437 031e D31A     		subs	r3, r2, r3
 2438 0320 002B     		cmp	r3, #0
 2439 0322 42DB     		blt	.L127
 561:STM32F10x_Speex_Lib/libspeex/jitter.c ****          {
 562:STM32F10x_Speex_Lib/libspeex/jitter.c ****             if (!found || LT32(jitter->packets[i].timestamp,best_time) || (jitter->packets[i].times
 2440              		.loc 2 562 0 is_stmt 1
 2441 0324 FB6A     		ldr	r3, [r7, #44]
 2442 0326 002B     		cmp	r3, #0
 2443 0328 26D0     		beq	.L128
 2444              		.loc 2 562 0 is_stmt 0 discriminator 1
 2445 032a F968     		ldr	r1, [r7, #12]
 2446 032c FB6B     		ldr	r3, [r7, #60]
 2447 032e 5A1C     		adds	r2, r3, #1
 2448 0330 1346     		mov	r3, r2
 2449 0332 5B00     		lsls	r3, r3, #1
 2450 0334 1344     		add	r3, r3, r2
 2451 0336 DB00     		lsls	r3, r3, #3
 2452 0338 0B44     		add	r3, r3, r1
 2453 033a 1A68     		ldr	r2, [r3]
 2454 033c BB6A     		ldr	r3, [r7, #40]
 2455 033e D31A     		subs	r3, r2, r3
 2456 0340 002B     		cmp	r3, #0
 2457 0342 19DB     		blt	.L128
 2458              		.loc 2 562 0 discriminator 2
 2459 0344 F968     		ldr	r1, [r7, #12]
 2460 0346 FB6B     		ldr	r3, [r7, #60]
 2461 0348 5A1C     		adds	r2, r3, #1
 2462 034a 1346     		mov	r3, r2
 2463 034c 5B00     		lsls	r3, r3, #1
 2464 034e 1344     		add	r3, r3, r2
 2465 0350 DB00     		lsls	r3, r3, #3
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 57


 2466 0352 0B44     		add	r3, r3, r1
 2467 0354 1A68     		ldr	r2, [r3]
 2468 0356 BB6A     		ldr	r3, [r7, #40]
 2469 0358 9A42     		cmp	r2, r3
 2470 035a 26D1     		bne	.L127
 2471              		.loc 2 562 0 discriminator 3
 2472 035c F968     		ldr	r1, [r7, #12]
 2473 035e FB6B     		ldr	r3, [r7, #60]
 2474 0360 5A1C     		adds	r2, r3, #1
 2475 0362 1346     		mov	r3, r2
 2476 0364 5B00     		lsls	r3, r3, #1
 2477 0366 1344     		add	r3, r3, r2
 2478 0368 DB00     		lsls	r3, r3, #3
 2479 036a 0B44     		add	r3, r3, r1
 2480 036c 0433     		adds	r3, r3, #4
 2481 036e 1A68     		ldr	r2, [r3]
 2482 0370 7B6A     		ldr	r3, [r7, #36]
 2483 0372 D31A     		subs	r3, r2, r3
 2484 0374 002B     		cmp	r3, #0
 2485 0376 18DD     		ble	.L127
 2486              	.L128:
 563:STM32F10x_Speex_Lib/libspeex/jitter.c ****             {
 564:STM32F10x_Speex_Lib/libspeex/jitter.c ****                best_time = jitter->packets[i].timestamp;
 2487              		.loc 2 564 0 is_stmt 1
 2488 0378 F968     		ldr	r1, [r7, #12]
 2489 037a FB6B     		ldr	r3, [r7, #60]
 2490 037c 5A1C     		adds	r2, r3, #1
 2491 037e 1346     		mov	r3, r2
 2492 0380 5B00     		lsls	r3, r3, #1
 2493 0382 1344     		add	r3, r3, r2
 2494 0384 DB00     		lsls	r3, r3, #3
 2495 0386 0B44     		add	r3, r3, r1
 2496 0388 1B68     		ldr	r3, [r3]
 2497 038a BB62     		str	r3, [r7, #40]
 565:STM32F10x_Speex_Lib/libspeex/jitter.c ****                best_span = jitter->packets[i].span;
 2498              		.loc 2 565 0
 2499 038c F968     		ldr	r1, [r7, #12]
 2500 038e FB6B     		ldr	r3, [r7, #60]
 2501 0390 5A1C     		adds	r2, r3, #1
 2502 0392 1346     		mov	r3, r2
 2503 0394 5B00     		lsls	r3, r3, #1
 2504 0396 1344     		add	r3, r3, r2
 2505 0398 DB00     		lsls	r3, r3, #3
 2506 039a 0B44     		add	r3, r3, r1
 2507 039c 0433     		adds	r3, r3, #4
 2508 039e 1B68     		ldr	r3, [r3]
 2509 03a0 7B62     		str	r3, [r7, #36]
 566:STM32F10x_Speex_Lib/libspeex/jitter.c ****                besti = i;
 2510              		.loc 2 566 0
 2511 03a2 FB6B     		ldr	r3, [r7, #60]
 2512 03a4 3B62     		str	r3, [r7, #32]
 567:STM32F10x_Speex_Lib/libspeex/jitter.c ****                found = 1;
 2513              		.loc 2 567 0
 2514 03a6 0123     		movs	r3, #1
 2515 03a8 FB62     		str	r3, [r7, #44]
 2516              	.L127:
 557:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 58


 2517              		.loc 2 557 0 discriminator 2
 2518 03aa FB6B     		ldr	r3, [r7, #60]
 2519 03ac 0133     		adds	r3, r3, #1
 2520 03ae FB63     		str	r3, [r7, #60]
 2521              	.L126:
 557:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
 2522              		.loc 2 557 0 is_stmt 0 discriminator 1
 2523 03b0 FB6B     		ldr	r3, [r7, #60]
 2524 03b2 C72B     		cmp	r3, #199
 2525 03b4 8DDD     		ble	.L129
 568:STM32F10x_Speex_Lib/libspeex/jitter.c ****             }
 569:STM32F10x_Speex_Lib/libspeex/jitter.c ****          }
 570:STM32F10x_Speex_Lib/libspeex/jitter.c ****       }
 571:STM32F10x_Speex_Lib/libspeex/jitter.c ****       if (found)
 2526              		.loc 2 571 0 is_stmt 1
 2527 03b6 FB6A     		ldr	r3, [r7, #44]
 2528 03b8 002B     		cmp	r3, #0
 2529 03ba 03D0     		beq	.L125
 572:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
 573:STM32F10x_Speex_Lib/libspeex/jitter.c ****          i=besti;
 2530              		.loc 2 573 0
 2531 03bc 3B6A     		ldr	r3, [r7, #32]
 2532 03be FB63     		str	r3, [r7, #60]
 574:STM32F10x_Speex_Lib/libspeex/jitter.c ****          incomplete = 1;
 2533              		.loc 2 574 0
 2534 03c0 0123     		movs	r3, #1
 2535 03c2 FB61     		str	r3, [r7, #28]
 2536              	.L125:
 2537              	.LBE10:
 575:STM32F10x_Speex_Lib/libspeex/jitter.c ****          /*fprintf (stderr, "incomplete: %d %d %d %d\n", jitter->packets[i].timestamp, jitter->poin
 576:STM32F10x_Speex_Lib/libspeex/jitter.c ****       }
 577:STM32F10x_Speex_Lib/libspeex/jitter.c ****    }
 578:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 579:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /* If we find something */
 580:STM32F10x_Speex_Lib/libspeex/jitter.c ****    if (i!=SPEEX_JITTER_MAX_BUFFER_SIZE)
 2538              		.loc 2 580 0
 2539 03c4 FB6B     		ldr	r3, [r7, #60]
 2540 03c6 C82B     		cmp	r3, #200
 2541 03c8 00F01481 		beq	.L130
 2542              	.LBB11:
 581:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 582:STM32F10x_Speex_Lib/libspeex/jitter.c ****       spx_int32_t offset;
 583:STM32F10x_Speex_Lib/libspeex/jitter.c ****       
 584:STM32F10x_Speex_Lib/libspeex/jitter.c ****       /* We (obviously) haven't lost this packet */
 585:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->lost_count = 0;
 2543              		.loc 2 585 0
 2544 03cc FB68     		ldr	r3, [r7, #12]
 2545 03ce 03F5C853 		add	r3, r3, #6400
 2546 03d2 1833     		adds	r3, r3, #24
 2547 03d4 0022     		movs	r2, #0
 2548 03d6 1A60     		str	r2, [r3]
 586:STM32F10x_Speex_Lib/libspeex/jitter.c ****       
 587:STM32F10x_Speex_Lib/libspeex/jitter.c ****       /* In this case, 0 isn't as a valid timestamp */
 588:STM32F10x_Speex_Lib/libspeex/jitter.c ****       if (jitter->arrival[i] != 0)
 2549              		.loc 2 588 0
 2550 03d8 FB68     		ldr	r3, [r7, #12]
 2551 03da FA6B     		ldr	r2, [r7, #60]
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 59


 2552 03dc 02F2B442 		addw	r2, r2, #1204
 2553 03e0 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2554 03e4 002B     		cmp	r3, #0
 2555 03e6 19D0     		beq	.L131
 589:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
 590:STM32F10x_Speex_Lib/libspeex/jitter.c ****          update_timings(jitter, ((spx_int32_t)jitter->packets[i].timestamp) - ((spx_int32_t)jitter-
 2556              		.loc 2 590 0
 2557 03e8 F968     		ldr	r1, [r7, #12]
 2558 03ea FB6B     		ldr	r3, [r7, #60]
 2559 03ec 5A1C     		adds	r2, r3, #1
 2560 03ee 1346     		mov	r3, r2
 2561 03f0 5B00     		lsls	r3, r3, #1
 2562 03f2 1344     		add	r3, r3, r2
 2563 03f4 DB00     		lsls	r3, r3, #3
 2564 03f6 0B44     		add	r3, r3, r1
 2565 03f8 1B68     		ldr	r3, [r3]
 2566 03fa 1946     		mov	r1, r3
 2567 03fc FB68     		ldr	r3, [r7, #12]
 2568 03fe FA6B     		ldr	r2, [r7, #60]
 2569 0400 02F2B442 		addw	r2, r2, #1204
 2570 0404 53F82230 		ldr	r3, [r3, r2, lsl #2]
 2571 0408 CA1A     		subs	r2, r1, r3
 2572 040a FB68     		ldr	r3, [r7, #12]
 2573 040c 03F5B053 		add	r3, r3, #5632
 2574 0410 1B68     		ldr	r3, [r3]
 2575 0412 D31A     		subs	r3, r2, r3
 2576 0414 1946     		mov	r1, r3
 2577 0416 F868     		ldr	r0, [r7, #12]
 2578 0418 FFF7FEFF 		bl	update_timings
 2579              	.L131:
 591:STM32F10x_Speex_Lib/libspeex/jitter.c ****       }
 592:STM32F10x_Speex_Lib/libspeex/jitter.c ****       
 593:STM32F10x_Speex_Lib/libspeex/jitter.c ****       
 594:STM32F10x_Speex_Lib/libspeex/jitter.c ****       /* Copy packet */
 595:STM32F10x_Speex_Lib/libspeex/jitter.c ****       if (jitter->destroy)
 2580              		.loc 2 595 0
 2581 041c FB68     		ldr	r3, [r7, #12]
 2582 041e 03F5AF53 		add	r3, r3, #5600
 2583 0422 1033     		adds	r3, r3, #16
 2584 0424 1B68     		ldr	r3, [r3]
 2585 0426 002B     		cmp	r3, #0
 2586 0428 16D0     		beq	.L132
 596:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
 597:STM32F10x_Speex_Lib/libspeex/jitter.c ****          packet->data = jitter->packets[i].data;
 2587              		.loc 2 597 0
 2588 042a F968     		ldr	r1, [r7, #12]
 2589 042c FA6B     		ldr	r2, [r7, #60]
 2590 042e 1346     		mov	r3, r2
 2591 0430 5B00     		lsls	r3, r3, #1
 2592 0432 1344     		add	r3, r3, r2
 2593 0434 DB00     		lsls	r3, r3, #3
 2594 0436 0B44     		add	r3, r3, r1
 2595 0438 1033     		adds	r3, r3, #16
 2596 043a 1A68     		ldr	r2, [r3]
 2597 043c BB68     		ldr	r3, [r7, #8]
 2598 043e 1A60     		str	r2, [r3]
 598:STM32F10x_Speex_Lib/libspeex/jitter.c ****          packet->len = jitter->packets[i].len;
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 60


 2599              		.loc 2 598 0
 2600 0440 F968     		ldr	r1, [r7, #12]
 2601 0442 FA6B     		ldr	r2, [r7, #60]
 2602 0444 1346     		mov	r3, r2
 2603 0446 5B00     		lsls	r3, r3, #1
 2604 0448 1344     		add	r3, r3, r2
 2605 044a DB00     		lsls	r3, r3, #3
 2606 044c 0B44     		add	r3, r3, r1
 2607 044e 1433     		adds	r3, r3, #20
 2608 0450 1A68     		ldr	r2, [r3]
 2609 0452 BB68     		ldr	r3, [r7, #8]
 2610 0454 5A60     		str	r2, [r3, #4]
 2611 0456 4DE0     		b	.L133
 2612              	.L132:
 599:STM32F10x_Speex_Lib/libspeex/jitter.c ****       } else {
 600:STM32F10x_Speex_Lib/libspeex/jitter.c ****          if (jitter->packets[i].len > packet->len)
 2613              		.loc 2 600 0
 2614 0458 F968     		ldr	r1, [r7, #12]
 2615 045a FA6B     		ldr	r2, [r7, #60]
 2616 045c 1346     		mov	r3, r2
 2617 045e 5B00     		lsls	r3, r3, #1
 2618 0460 1344     		add	r3, r3, r2
 2619 0462 DB00     		lsls	r3, r3, #3
 2620 0464 0B44     		add	r3, r3, r1
 2621 0466 1433     		adds	r3, r3, #20
 2622 0468 1A68     		ldr	r2, [r3]
 2623 046a BB68     		ldr	r3, [r7, #8]
 2624 046c 5B68     		ldr	r3, [r3, #4]
 2625 046e 9A42     		cmp	r2, r3
 2626 0470 0DD9     		bls	.L134
 601:STM32F10x_Speex_Lib/libspeex/jitter.c ****          {
 602:STM32F10x_Speex_Lib/libspeex/jitter.c ****             speex_warning_int("jitter_buffer_get(): packet too large to fit. Size is", jitter->pack
 2627              		.loc 2 602 0
 2628 0472 F968     		ldr	r1, [r7, #12]
 2629 0474 FA6B     		ldr	r2, [r7, #60]
 2630 0476 1346     		mov	r3, r2
 2631 0478 5B00     		lsls	r3, r3, #1
 2632 047a 1344     		add	r3, r3, r2
 2633 047c DB00     		lsls	r3, r3, #3
 2634 047e 0B44     		add	r3, r3, r1
 2635 0480 1433     		adds	r3, r3, #20
 2636 0482 1B68     		ldr	r3, [r3]
 2637 0484 1946     		mov	r1, r3
 2638 0486 9748     		ldr	r0, .L147
 2639 0488 FFF7FEFF 		bl	speex_warning_int
 2640 048c 0AE0     		b	.L135
 2641              	.L134:
 603:STM32F10x_Speex_Lib/libspeex/jitter.c ****          } else {
 604:STM32F10x_Speex_Lib/libspeex/jitter.c ****             packet->len = jitter->packets[i].len;
 2642              		.loc 2 604 0
 2643 048e F968     		ldr	r1, [r7, #12]
 2644 0490 FA6B     		ldr	r2, [r7, #60]
 2645 0492 1346     		mov	r3, r2
 2646 0494 5B00     		lsls	r3, r3, #1
 2647 0496 1344     		add	r3, r3, r2
 2648 0498 DB00     		lsls	r3, r3, #3
 2649 049a 0B44     		add	r3, r3, r1
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 61


 2650 049c 1433     		adds	r3, r3, #20
 2651 049e 1A68     		ldr	r2, [r3]
 2652 04a0 BB68     		ldr	r3, [r7, #8]
 2653 04a2 5A60     		str	r2, [r3, #4]
 2654              	.L135:
 605:STM32F10x_Speex_Lib/libspeex/jitter.c ****          }
 606:STM32F10x_Speex_Lib/libspeex/jitter.c ****          for (j=0;j<packet->len;j++)
 2655              		.loc 2 606 0
 2656 04a4 0023     		movs	r3, #0
 2657 04a6 BB63     		str	r3, [r7, #56]
 2658 04a8 13E0     		b	.L136
 2659              	.L137:
 607:STM32F10x_Speex_Lib/libspeex/jitter.c ****             packet->data[j] = jitter->packets[i].data[j];
 2660              		.loc 2 607 0 discriminator 3
 2661 04aa BB68     		ldr	r3, [r7, #8]
 2662 04ac 1A68     		ldr	r2, [r3]
 2663 04ae BB6B     		ldr	r3, [r7, #56]
 2664 04b0 D118     		adds	r1, r2, r3
 2665 04b2 F868     		ldr	r0, [r7, #12]
 2666 04b4 FA6B     		ldr	r2, [r7, #60]
 2667 04b6 1346     		mov	r3, r2
 2668 04b8 5B00     		lsls	r3, r3, #1
 2669 04ba 1344     		add	r3, r3, r2
 2670 04bc DB00     		lsls	r3, r3, #3
 2671 04be 0344     		add	r3, r3, r0
 2672 04c0 1033     		adds	r3, r3, #16
 2673 04c2 1A68     		ldr	r2, [r3]
 2674 04c4 BB6B     		ldr	r3, [r7, #56]
 2675 04c6 1344     		add	r3, r3, r2
 2676 04c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2677 04ca 0B70     		strb	r3, [r1]
 606:STM32F10x_Speex_Lib/libspeex/jitter.c ****             packet->data[j] = jitter->packets[i].data[j];
 2678              		.loc 2 606 0 discriminator 3
 2679 04cc BB6B     		ldr	r3, [r7, #56]
 2680 04ce 0133     		adds	r3, r3, #1
 2681 04d0 BB63     		str	r3, [r7, #56]
 2682              	.L136:
 606:STM32F10x_Speex_Lib/libspeex/jitter.c ****             packet->data[j] = jitter->packets[i].data[j];
 2683              		.loc 2 606 0 is_stmt 0 discriminator 1
 2684 04d2 BB68     		ldr	r3, [r7, #8]
 2685 04d4 5A68     		ldr	r2, [r3, #4]
 2686 04d6 BB6B     		ldr	r3, [r7, #56]
 2687 04d8 9A42     		cmp	r2, r3
 2688 04da E6D8     		bhi	.L137
 608:STM32F10x_Speex_Lib/libspeex/jitter.c ****          /* Remove packet */
 609:STM32F10x_Speex_Lib/libspeex/jitter.c ****          speex_free(jitter->packets[i].data);
 2689              		.loc 2 609 0 is_stmt 1
 2690 04dc F968     		ldr	r1, [r7, #12]
 2691 04de FA6B     		ldr	r2, [r7, #60]
 2692 04e0 1346     		mov	r3, r2
 2693 04e2 5B00     		lsls	r3, r3, #1
 2694 04e4 1344     		add	r3, r3, r2
 2695 04e6 DB00     		lsls	r3, r3, #3
 2696 04e8 0B44     		add	r3, r3, r1
 2697 04ea 1033     		adds	r3, r3, #16
 2698 04ec 1B68     		ldr	r3, [r3]
 2699 04ee 1846     		mov	r0, r3
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 62


 2700 04f0 FFF7FEFF 		bl	speex_free
 2701              	.L133:
 610:STM32F10x_Speex_Lib/libspeex/jitter.c ****       }
 611:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->packets[i].data = NULL;
 2702              		.loc 2 611 0
 2703 04f4 F968     		ldr	r1, [r7, #12]
 2704 04f6 FA6B     		ldr	r2, [r7, #60]
 2705 04f8 1346     		mov	r3, r2
 2706 04fa 5B00     		lsls	r3, r3, #1
 2707 04fc 1344     		add	r3, r3, r2
 2708 04fe DB00     		lsls	r3, r3, #3
 2709 0500 0B44     		add	r3, r3, r1
 2710 0502 1033     		adds	r3, r3, #16
 2711 0504 0022     		movs	r2, #0
 2712 0506 1A60     		str	r2, [r3]
 612:STM32F10x_Speex_Lib/libspeex/jitter.c ****       /* Set timestamp and span (if requested) */
 613:STM32F10x_Speex_Lib/libspeex/jitter.c ****       offset = (spx_int32_t)jitter->packets[i].timestamp-(spx_int32_t)jitter->pointer_timestamp;
 2713              		.loc 2 613 0
 2714 0508 F968     		ldr	r1, [r7, #12]
 2715 050a FB6B     		ldr	r3, [r7, #60]
 2716 050c 5A1C     		adds	r2, r3, #1
 2717 050e 1346     		mov	r3, r2
 2718 0510 5B00     		lsls	r3, r3, #1
 2719 0512 1344     		add	r3, r3, r2
 2720 0514 DB00     		lsls	r3, r3, #3
 2721 0516 0B44     		add	r3, r3, r1
 2722 0518 1B68     		ldr	r3, [r3]
 2723 051a 1A46     		mov	r2, r3
 2724 051c FB68     		ldr	r3, [r7, #12]
 2725 051e 1B68     		ldr	r3, [r3]
 2726 0520 D31A     		subs	r3, r2, r3
 2727 0522 BB61     		str	r3, [r7, #24]
 614:STM32F10x_Speex_Lib/libspeex/jitter.c ****       if (start_offset != NULL)
 2728              		.loc 2 614 0
 2729 0524 3B68     		ldr	r3, [r7]
 2730 0526 002B     		cmp	r3, #0
 2731 0528 03D0     		beq	.L138
 615:STM32F10x_Speex_Lib/libspeex/jitter.c ****          *start_offset = offset;
 2732              		.loc 2 615 0
 2733 052a 3B68     		ldr	r3, [r7]
 2734 052c BA69     		ldr	r2, [r7, #24]
 2735 052e 1A60     		str	r2, [r3]
 2736 0530 06E0     		b	.L139
 2737              	.L138:
 616:STM32F10x_Speex_Lib/libspeex/jitter.c ****       else if (offset != 0)
 2738              		.loc 2 616 0
 2739 0532 BB69     		ldr	r3, [r7, #24]
 2740 0534 002B     		cmp	r3, #0
 2741 0536 03D0     		beq	.L139
 617:STM32F10x_Speex_Lib/libspeex/jitter.c ****          speex_warning_int("jitter_buffer_get() discarding non-zero start_offset", offset);
 2742              		.loc 2 617 0
 2743 0538 B969     		ldr	r1, [r7, #24]
 2744 053a 6B48     		ldr	r0, .L147+4
 2745 053c FFF7FEFF 		bl	speex_warning_int
 2746              	.L139:
 618:STM32F10x_Speex_Lib/libspeex/jitter.c ****       
 619:STM32F10x_Speex_Lib/libspeex/jitter.c ****       packet->timestamp = jitter->packets[i].timestamp;
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 63


 2747              		.loc 2 619 0
 2748 0540 F968     		ldr	r1, [r7, #12]
 2749 0542 FB6B     		ldr	r3, [r7, #60]
 2750 0544 5A1C     		adds	r2, r3, #1
 2751 0546 1346     		mov	r3, r2
 2752 0548 5B00     		lsls	r3, r3, #1
 2753 054a 1344     		add	r3, r3, r2
 2754 054c DB00     		lsls	r3, r3, #3
 2755 054e 0B44     		add	r3, r3, r1
 2756 0550 1A68     		ldr	r2, [r3]
 2757 0552 BB68     		ldr	r3, [r7, #8]
 2758 0554 9A60     		str	r2, [r3, #8]
 620:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->last_returned_timestamp = packet->timestamp;
 2759              		.loc 2 620 0
 2760 0556 BB68     		ldr	r3, [r7, #8]
 2761 0558 9A68     		ldr	r2, [r3, #8]
 2762 055a FB68     		ldr	r3, [r7, #12]
 2763 055c 5A60     		str	r2, [r3, #4]
 621:STM32F10x_Speex_Lib/libspeex/jitter.c ****       
 622:STM32F10x_Speex_Lib/libspeex/jitter.c ****       packet->span = jitter->packets[i].span;
 2764              		.loc 2 622 0
 2765 055e F968     		ldr	r1, [r7, #12]
 2766 0560 FB6B     		ldr	r3, [r7, #60]
 2767 0562 5A1C     		adds	r2, r3, #1
 2768 0564 1346     		mov	r3, r2
 2769 0566 5B00     		lsls	r3, r3, #1
 2770 0568 1344     		add	r3, r3, r2
 2771 056a DB00     		lsls	r3, r3, #3
 2772 056c 0B44     		add	r3, r3, r1
 2773 056e 0433     		adds	r3, r3, #4
 2774 0570 1A68     		ldr	r2, [r3]
 2775 0572 BB68     		ldr	r3, [r7, #8]
 2776 0574 DA60     		str	r2, [r3, #12]
 623:STM32F10x_Speex_Lib/libspeex/jitter.c ****       packet->sequence = jitter->packets[i].sequence;
 2777              		.loc 2 623 0
 2778 0576 F968     		ldr	r1, [r7, #12]
 2779 0578 FA6B     		ldr	r2, [r7, #60]
 2780 057a 1346     		mov	r3, r2
 2781 057c 5B00     		lsls	r3, r3, #1
 2782 057e 1344     		add	r3, r3, r2
 2783 0580 DB00     		lsls	r3, r3, #3
 2784 0582 0B44     		add	r3, r3, r1
 2785 0584 2033     		adds	r3, r3, #32
 2786 0586 1A88     		ldrh	r2, [r3]
 2787 0588 BB68     		ldr	r3, [r7, #8]
 2788 058a 1A82     		strh	r2, [r3, #16]	@ movhi
 624:STM32F10x_Speex_Lib/libspeex/jitter.c ****       packet->user_data = jitter->packets[i].user_data;
 2789              		.loc 2 624 0
 2790 058c F968     		ldr	r1, [r7, #12]
 2791 058e FA6B     		ldr	r2, [r7, #60]
 2792 0590 1346     		mov	r3, r2
 2793 0592 5B00     		lsls	r3, r3, #1
 2794 0594 1344     		add	r3, r3, r2
 2795 0596 DB00     		lsls	r3, r3, #3
 2796 0598 0B44     		add	r3, r3, r1
 2797 059a 2433     		adds	r3, r3, #36
 2798 059c 1A68     		ldr	r2, [r3]
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 64


 2799 059e BB68     		ldr	r3, [r7, #8]
 2800 05a0 5A61     		str	r2, [r3, #20]
 625:STM32F10x_Speex_Lib/libspeex/jitter.c ****       /* Point to the end of the current packet */
 626:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->pointer_timestamp = jitter->packets[i].timestamp+jitter->packets[i].span;
 2801              		.loc 2 626 0
 2802 05a2 F968     		ldr	r1, [r7, #12]
 2803 05a4 FB6B     		ldr	r3, [r7, #60]
 2804 05a6 5A1C     		adds	r2, r3, #1
 2805 05a8 1346     		mov	r3, r2
 2806 05aa 5B00     		lsls	r3, r3, #1
 2807 05ac 1344     		add	r3, r3, r2
 2808 05ae DB00     		lsls	r3, r3, #3
 2809 05b0 0B44     		add	r3, r3, r1
 2810 05b2 1968     		ldr	r1, [r3]
 2811 05b4 F868     		ldr	r0, [r7, #12]
 2812 05b6 FB6B     		ldr	r3, [r7, #60]
 2813 05b8 5A1C     		adds	r2, r3, #1
 2814 05ba 1346     		mov	r3, r2
 2815 05bc 5B00     		lsls	r3, r3, #1
 2816 05be 1344     		add	r3, r3, r2
 2817 05c0 DB00     		lsls	r3, r3, #3
 2818 05c2 0344     		add	r3, r3, r0
 2819 05c4 0433     		adds	r3, r3, #4
 2820 05c6 1B68     		ldr	r3, [r3]
 2821 05c8 CA18     		adds	r2, r1, r3
 2822 05ca FB68     		ldr	r3, [r7, #12]
 2823 05cc 1A60     		str	r2, [r3]
 627:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 628:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->buffered = packet->span - desired_span;
 2824              		.loc 2 628 0
 2825 05ce BB68     		ldr	r3, [r7, #8]
 2826 05d0 DA68     		ldr	r2, [r3, #12]
 2827 05d2 7B68     		ldr	r3, [r7, #4]
 2828 05d4 D31A     		subs	r3, r2, r3
 2829 05d6 1A46     		mov	r2, r3
 2830 05d8 FB68     		ldr	r3, [r7, #12]
 2831 05da DA60     		str	r2, [r3, #12]
 629:STM32F10x_Speex_Lib/libspeex/jitter.c ****       
 630:STM32F10x_Speex_Lib/libspeex/jitter.c ****       if (start_offset != NULL)
 2832              		.loc 2 630 0
 2833 05dc 3B68     		ldr	r3, [r7]
 2834 05de 002B     		cmp	r3, #0
 2835 05e0 06D0     		beq	.L140
 631:STM32F10x_Speex_Lib/libspeex/jitter.c ****          jitter->buffered += *start_offset;
 2836              		.loc 2 631 0
 2837 05e2 FB68     		ldr	r3, [r7, #12]
 2838 05e4 DA68     		ldr	r2, [r3, #12]
 2839 05e6 3B68     		ldr	r3, [r7]
 2840 05e8 1B68     		ldr	r3, [r3]
 2841 05ea 1A44     		add	r2, r2, r3
 2842 05ec FB68     		ldr	r3, [r7, #12]
 2843 05ee DA60     		str	r2, [r3, #12]
 2844              	.L140:
 632:STM32F10x_Speex_Lib/libspeex/jitter.c ****       
 633:STM32F10x_Speex_Lib/libspeex/jitter.c ****       return JITTER_BUFFER_OK;
 2845              		.loc 2 633 0
 2846 05f0 0023     		movs	r3, #0
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 65


 2847 05f2 73E0     		b	.L111
 2848              	.L130:
 2849              	.LBE11:
 634:STM32F10x_Speex_Lib/libspeex/jitter.c ****    }
 635:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 636:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 637:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /* If we haven't found anything worth returning */
 638:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 639:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /*fprintf (stderr, "not found\n");*/
 640:STM32F10x_Speex_Lib/libspeex/jitter.c ****    jitter->lost_count++;
 2850              		.loc 2 640 0
 2851 05f4 FB68     		ldr	r3, [r7, #12]
 2852 05f6 03F5C853 		add	r3, r3, #6400
 2853 05fa 1833     		adds	r3, r3, #24
 2854 05fc 1B68     		ldr	r3, [r3]
 2855 05fe 5A1C     		adds	r2, r3, #1
 2856 0600 FB68     		ldr	r3, [r7, #12]
 2857 0602 03F5C853 		add	r3, r3, #6400
 2858 0606 1833     		adds	r3, r3, #24
 2859 0608 1A60     		str	r2, [r3]
 641:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /*fprintf (stderr, "m");*/
 642:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /*fprintf (stderr, "lost_count = %d\n", jitter->lost_count);*/
 643:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 644:STM32F10x_Speex_Lib/libspeex/jitter.c ****    opt = compute_opt_delay(jitter);
 2860              		.loc 2 644 0
 2861 060a F868     		ldr	r0, [r7, #12]
 2862 060c FFF7FEFF 		bl	compute_opt_delay
 2863 0610 0346     		mov	r3, r0
 2864 0612 FB82     		strh	r3, [r7, #22]	@ movhi
 645:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 646:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /* Should we force an increase in the buffer or just do normal interpolation? */   
 647:STM32F10x_Speex_Lib/libspeex/jitter.c ****    if (opt < 0)
 2865              		.loc 2 647 0
 2866 0614 B7F91630 		ldrsh	r3, [r7, #22]
 2867 0618 002B     		cmp	r3, #0
 2868 061a 1DDA     		bge	.L141
 648:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 649:STM32F10x_Speex_Lib/libspeex/jitter.c ****       /* Need to increase buffering */
 650:STM32F10x_Speex_Lib/libspeex/jitter.c ****       
 651:STM32F10x_Speex_Lib/libspeex/jitter.c ****       /* Shift histogram to compensate */
 652:STM32F10x_Speex_Lib/libspeex/jitter.c ****       shift_timings(jitter, -opt);
 2869              		.loc 2 652 0
 2870 061c FB8A     		ldrh	r3, [r7, #22]
 2871 061e 5B42     		negs	r3, r3
 2872 0620 9BB2     		uxth	r3, r3
 2873 0622 1BB2     		sxth	r3, r3
 2874 0624 1946     		mov	r1, r3
 2875 0626 F868     		ldr	r0, [r7, #12]
 2876 0628 FFF7FEFF 		bl	shift_timings
 653:STM32F10x_Speex_Lib/libspeex/jitter.c ****       
 654:STM32F10x_Speex_Lib/libspeex/jitter.c ****       packet->timestamp = jitter->pointer_timestamp;
 2877              		.loc 2 654 0
 2878 062c FB68     		ldr	r3, [r7, #12]
 2879 062e 1A68     		ldr	r2, [r3]
 2880 0630 BB68     		ldr	r3, [r7, #8]
 2881 0632 9A60     		str	r2, [r3, #8]
 655:STM32F10x_Speex_Lib/libspeex/jitter.c ****       packet->span = -opt;
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 66


 2882              		.loc 2 655 0
 2883 0634 B7F91630 		ldrsh	r3, [r7, #22]
 2884 0638 5B42     		negs	r3, r3
 2885 063a 1A46     		mov	r2, r3
 2886 063c BB68     		ldr	r3, [r7, #8]
 2887 063e DA60     		str	r2, [r3, #12]
 656:STM32F10x_Speex_Lib/libspeex/jitter.c ****       /* Don't move the pointer_timestamp forward */
 657:STM32F10x_Speex_Lib/libspeex/jitter.c ****       packet->len = 0;
 2888              		.loc 2 657 0
 2889 0640 BB68     		ldr	r3, [r7, #8]
 2890 0642 0022     		movs	r2, #0
 2891 0644 5A60     		str	r2, [r3, #4]
 658:STM32F10x_Speex_Lib/libspeex/jitter.c ****       
 659:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->buffered = packet->span - desired_span;
 2892              		.loc 2 659 0
 2893 0646 BB68     		ldr	r3, [r7, #8]
 2894 0648 DA68     		ldr	r2, [r3, #12]
 2895 064a 7B68     		ldr	r3, [r7, #4]
 2896 064c D31A     		subs	r3, r2, r3
 2897 064e 1A46     		mov	r2, r3
 2898 0650 FB68     		ldr	r3, [r7, #12]
 2899 0652 DA60     		str	r2, [r3, #12]
 660:STM32F10x_Speex_Lib/libspeex/jitter.c ****       return JITTER_BUFFER_INSERTION;
 2900              		.loc 2 660 0
 2901 0654 0223     		movs	r3, #2
 2902 0656 41E0     		b	.L111
 2903              	.L141:
 661:STM32F10x_Speex_Lib/libspeex/jitter.c ****       /*jitter->pointer_timestamp -= jitter->delay_step;*/
 662:STM32F10x_Speex_Lib/libspeex/jitter.c ****       /*fprintf (stderr, "Forced to interpolate\n");*/
 663:STM32F10x_Speex_Lib/libspeex/jitter.c ****    } else {
 664:STM32F10x_Speex_Lib/libspeex/jitter.c ****       /* Normal packet loss */
 665:STM32F10x_Speex_Lib/libspeex/jitter.c ****       packet->timestamp = jitter->pointer_timestamp;
 2904              		.loc 2 665 0
 2905 0658 FB68     		ldr	r3, [r7, #12]
 2906 065a 1A68     		ldr	r2, [r3]
 2907 065c BB68     		ldr	r3, [r7, #8]
 2908 065e 9A60     		str	r2, [r3, #8]
 666:STM32F10x_Speex_Lib/libspeex/jitter.c ****       
 667:STM32F10x_Speex_Lib/libspeex/jitter.c ****       desired_span = ROUND_DOWN(desired_span, jitter->concealment_size);
 2909              		.loc 2 667 0
 2910 0660 7B68     		ldr	r3, [r7, #4]
 2911 0662 002B     		cmp	r3, #0
 2912 0664 16DA     		bge	.L142
 2913              		.loc 2 667 0 is_stmt 0 discriminator 1
 2914 0666 FB68     		ldr	r3, [r7, #12]
 2915 0668 03F5AF53 		add	r3, r3, #5600
 2916 066c 1833     		adds	r3, r3, #24
 2917 066e 1B68     		ldr	r3, [r3]
 2918 0670 7A68     		ldr	r2, [r7, #4]
 2919 0672 D31A     		subs	r3, r2, r3
 2920 0674 5A1C     		adds	r2, r3, #1
 2921 0676 FB68     		ldr	r3, [r7, #12]
 2922 0678 03F5AF53 		add	r3, r3, #5600
 2923 067c 1833     		adds	r3, r3, #24
 2924 067e 1B68     		ldr	r3, [r3]
 2925 0680 92FBF3F2 		sdiv	r2, r2, r3
 2926 0684 FB68     		ldr	r3, [r7, #12]
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 67


 2927 0686 03F5AF53 		add	r3, r3, #5600
 2928 068a 1833     		adds	r3, r3, #24
 2929 068c 1B68     		ldr	r3, [r3]
 2930 068e 03FB02F3 		mul	r3, r3, r2
 2931 0692 0EE0     		b	.L143
 2932              	.L142:
 2933              		.loc 2 667 0 discriminator 2
 2934 0694 FB68     		ldr	r3, [r7, #12]
 2935 0696 03F5AF53 		add	r3, r3, #5600
 2936 069a 1833     		adds	r3, r3, #24
 2937 069c 1B68     		ldr	r3, [r3]
 2938 069e 7A68     		ldr	r2, [r7, #4]
 2939 06a0 92FBF3F2 		sdiv	r2, r2, r3
 2940 06a4 FB68     		ldr	r3, [r7, #12]
 2941 06a6 03F5AF53 		add	r3, r3, #5600
 2942 06aa 1833     		adds	r3, r3, #24
 2943 06ac 1B68     		ldr	r3, [r3]
 2944 06ae 03FB02F3 		mul	r3, r3, r2
 2945              	.L143:
 2946              		.loc 2 667 0 discriminator 4
 2947 06b2 7B60     		str	r3, [r7, #4]
 668:STM32F10x_Speex_Lib/libspeex/jitter.c ****       packet->span = desired_span;
 2948              		.loc 2 668 0 is_stmt 1 discriminator 4
 2949 06b4 7A68     		ldr	r2, [r7, #4]
 2950 06b6 BB68     		ldr	r3, [r7, #8]
 2951 06b8 DA60     		str	r2, [r3, #12]
 669:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->pointer_timestamp += desired_span;
 2952              		.loc 2 669 0 discriminator 4
 2953 06ba FB68     		ldr	r3, [r7, #12]
 2954 06bc 1A68     		ldr	r2, [r3]
 2955 06be 7B68     		ldr	r3, [r7, #4]
 2956 06c0 1A44     		add	r2, r2, r3
 2957 06c2 FB68     		ldr	r3, [r7, #12]
 2958 06c4 1A60     		str	r2, [r3]
 670:STM32F10x_Speex_Lib/libspeex/jitter.c ****       packet->len = 0;
 2959              		.loc 2 670 0 discriminator 4
 2960 06c6 BB68     		ldr	r3, [r7, #8]
 2961 06c8 0022     		movs	r2, #0
 2962 06ca 5A60     		str	r2, [r3, #4]
 671:STM32F10x_Speex_Lib/libspeex/jitter.c ****       
 672:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->buffered = packet->span - desired_span;
 2963              		.loc 2 672 0 discriminator 4
 2964 06cc BB68     		ldr	r3, [r7, #8]
 2965 06ce DA68     		ldr	r2, [r3, #12]
 2966 06d0 7B68     		ldr	r3, [r7, #4]
 2967 06d2 D31A     		subs	r3, r2, r3
 2968 06d4 1A46     		mov	r2, r3
 2969 06d6 FB68     		ldr	r3, [r7, #12]
 2970 06d8 DA60     		str	r2, [r3, #12]
 673:STM32F10x_Speex_Lib/libspeex/jitter.c ****       return JITTER_BUFFER_MISSING;
 2971              		.loc 2 673 0 discriminator 4
 2972 06da 0123     		movs	r3, #1
 2973              	.L111:
 674:STM32F10x_Speex_Lib/libspeex/jitter.c ****       /*fprintf (stderr, "Normal loss\n");*/
 675:STM32F10x_Speex_Lib/libspeex/jitter.c ****    }
 676:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 677:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 68


 678:STM32F10x_Speex_Lib/libspeex/jitter.c **** }
 2974              		.loc 2 678 0
 2975 06dc 1846     		mov	r0, r3
 2976 06de 4037     		adds	r7, r7, #64
 2977              	.LCFI66:
 2978              		.cfi_def_cfa_offset 8
 2979 06e0 BD46     		mov	sp, r7
 2980              	.LCFI67:
 2981              		.cfi_def_cfa_register 13
 2982              		@ sp needed
 2983 06e2 80BD     		pop	{r7, pc}
 2984              	.L148:
 2985              		.align	2
 2986              	.L147:
 2987 06e4 64000000 		.word	.LC2
 2988 06e8 9C000000 		.word	.LC3
 2989              		.cfi_endproc
 2990              	.LFE18:
 2992              		.section	.text.jitter_buffer_get_another,"ax",%progbits
 2993              		.align	2
 2994              		.global	jitter_buffer_get_another
 2995              		.thumb
 2996              		.thumb_func
 2998              	jitter_buffer_get_another:
 2999              	.LFB19:
 679:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 680:STM32F10x_Speex_Lib/libspeex/jitter.c **** EXPORT int jitter_buffer_get_another(JitterBuffer *jitter, JitterBufferPacket *packet)
 681:STM32F10x_Speex_Lib/libspeex/jitter.c **** {
 3000              		.loc 2 681 0
 3001              		.cfi_startproc
 3002              		@ args = 0, pretend = 0, frame = 16
 3003              		@ frame_needed = 1, uses_anonymous_args = 0
 3004 0000 80B5     		push	{r7, lr}
 3005              	.LCFI68:
 3006              		.cfi_def_cfa_offset 8
 3007              		.cfi_offset 7, -8
 3008              		.cfi_offset 14, -4
 3009 0002 84B0     		sub	sp, sp, #16
 3010              	.LCFI69:
 3011              		.cfi_def_cfa_offset 24
 3012 0004 00AF     		add	r7, sp, #0
 3013              	.LCFI70:
 3014              		.cfi_def_cfa_register 7
 3015 0006 7860     		str	r0, [r7, #4]
 3016 0008 3960     		str	r1, [r7]
 682:STM32F10x_Speex_Lib/libspeex/jitter.c ****    int i, j;
 683:STM32F10x_Speex_Lib/libspeex/jitter.c ****    for (i=0;i<SPEEX_JITTER_MAX_BUFFER_SIZE;i++)
 3017              		.loc 2 683 0
 3018 000a 0023     		movs	r3, #0
 3019 000c FB60     		str	r3, [r7, #12]
 3020 000e 1AE0     		b	.L150
 3021              	.L153:
 684:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 685:STM32F10x_Speex_Lib/libspeex/jitter.c ****       if (jitter->packets[i].data && jitter->packets[i].timestamp==jitter->last_returned_timestamp)
 3022              		.loc 2 685 0
 3023 0010 7968     		ldr	r1, [r7, #4]
 3024 0012 FA68     		ldr	r2, [r7, #12]
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 69


 3025 0014 1346     		mov	r3, r2
 3026 0016 5B00     		lsls	r3, r3, #1
 3027 0018 1344     		add	r3, r3, r2
 3028 001a DB00     		lsls	r3, r3, #3
 3029 001c 0B44     		add	r3, r3, r1
 3030 001e 1033     		adds	r3, r3, #16
 3031 0020 1B68     		ldr	r3, [r3]
 3032 0022 002B     		cmp	r3, #0
 3033 0024 0CD0     		beq	.L151
 3034              		.loc 2 685 0 is_stmt 0 discriminator 1
 3035 0026 7968     		ldr	r1, [r7, #4]
 3036 0028 FB68     		ldr	r3, [r7, #12]
 3037 002a 5A1C     		adds	r2, r3, #1
 3038 002c 1346     		mov	r3, r2
 3039 002e 5B00     		lsls	r3, r3, #1
 3040 0030 1344     		add	r3, r3, r2
 3041 0032 DB00     		lsls	r3, r3, #3
 3042 0034 0B44     		add	r3, r3, r1
 3043 0036 1A68     		ldr	r2, [r3]
 3044 0038 7B68     		ldr	r3, [r7, #4]
 3045 003a 5B68     		ldr	r3, [r3, #4]
 3046 003c 9A42     		cmp	r2, r3
 3047 003e 06D0     		beq	.L160
 3048              	.L151:
 683:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 3049              		.loc 2 683 0 is_stmt 1 discriminator 2
 3050 0040 FB68     		ldr	r3, [r7, #12]
 3051 0042 0133     		adds	r3, r3, #1
 3052 0044 FB60     		str	r3, [r7, #12]
 3053              	.L150:
 683:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 3054              		.loc 2 683 0 is_stmt 0 discriminator 1
 3055 0046 FB68     		ldr	r3, [r7, #12]
 3056 0048 C72B     		cmp	r3, #199
 3057 004a E1DD     		ble	.L153
 3058 004c 00E0     		b	.L152
 3059              	.L160:
 686:STM32F10x_Speex_Lib/libspeex/jitter.c ****          break;
 3060              		.loc 2 686 0 is_stmt 1
 3061 004e 00BF     		nop
 3062              	.L152:
 687:STM32F10x_Speex_Lib/libspeex/jitter.c ****    }
 688:STM32F10x_Speex_Lib/libspeex/jitter.c ****    if (i!=SPEEX_JITTER_MAX_BUFFER_SIZE)
 3063              		.loc 2 688 0
 3064 0050 FB68     		ldr	r3, [r7, #12]
 3065 0052 C82B     		cmp	r3, #200
 3066 0054 7ED0     		beq	.L154
 689:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 690:STM32F10x_Speex_Lib/libspeex/jitter.c ****       /* Copy packet */
 691:STM32F10x_Speex_Lib/libspeex/jitter.c ****       packet->len = jitter->packets[i].len;
 3067              		.loc 2 691 0
 3068 0056 7968     		ldr	r1, [r7, #4]
 3069 0058 FA68     		ldr	r2, [r7, #12]
 3070 005a 1346     		mov	r3, r2
 3071 005c 5B00     		lsls	r3, r3, #1
 3072 005e 1344     		add	r3, r3, r2
 3073 0060 DB00     		lsls	r3, r3, #3
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 70


 3074 0062 0B44     		add	r3, r3, r1
 3075 0064 1433     		adds	r3, r3, #20
 3076 0066 1A68     		ldr	r2, [r3]
 3077 0068 3B68     		ldr	r3, [r7]
 3078 006a 5A60     		str	r2, [r3, #4]
 692:STM32F10x_Speex_Lib/libspeex/jitter.c ****       if (jitter->destroy)
 3079              		.loc 2 692 0
 3080 006c 7B68     		ldr	r3, [r7, #4]
 3081 006e 03F5AF53 		add	r3, r3, #5600
 3082 0072 1033     		adds	r3, r3, #16
 3083 0074 1B68     		ldr	r3, [r3]
 3084 0076 002B     		cmp	r3, #0
 3085 0078 0BD0     		beq	.L155
 693:STM32F10x_Speex_Lib/libspeex/jitter.c ****       {
 694:STM32F10x_Speex_Lib/libspeex/jitter.c ****          packet->data = jitter->packets[i].data;
 3086              		.loc 2 694 0
 3087 007a 7968     		ldr	r1, [r7, #4]
 3088 007c FA68     		ldr	r2, [r7, #12]
 3089 007e 1346     		mov	r3, r2
 3090 0080 5B00     		lsls	r3, r3, #1
 3091 0082 1344     		add	r3, r3, r2
 3092 0084 DB00     		lsls	r3, r3, #3
 3093 0086 0B44     		add	r3, r3, r1
 3094 0088 1033     		adds	r3, r3, #16
 3095 008a 1A68     		ldr	r2, [r3]
 3096 008c 3B68     		ldr	r3, [r7]
 3097 008e 1A60     		str	r2, [r3]
 3098 0090 27E0     		b	.L156
 3099              	.L155:
 695:STM32F10x_Speex_Lib/libspeex/jitter.c ****       } else {
 696:STM32F10x_Speex_Lib/libspeex/jitter.c ****          for (j=0;j<packet->len;j++)
 3100              		.loc 2 696 0
 3101 0092 0023     		movs	r3, #0
 3102 0094 BB60     		str	r3, [r7, #8]
 3103 0096 13E0     		b	.L157
 3104              	.L158:
 697:STM32F10x_Speex_Lib/libspeex/jitter.c ****             packet->data[j] = jitter->packets[i].data[j];
 3105              		.loc 2 697 0 discriminator 3
 3106 0098 3B68     		ldr	r3, [r7]
 3107 009a 1A68     		ldr	r2, [r3]
 3108 009c BB68     		ldr	r3, [r7, #8]
 3109 009e D118     		adds	r1, r2, r3
 3110 00a0 7868     		ldr	r0, [r7, #4]
 3111 00a2 FA68     		ldr	r2, [r7, #12]
 3112 00a4 1346     		mov	r3, r2
 3113 00a6 5B00     		lsls	r3, r3, #1
 3114 00a8 1344     		add	r3, r3, r2
 3115 00aa DB00     		lsls	r3, r3, #3
 3116 00ac 0344     		add	r3, r3, r0
 3117 00ae 1033     		adds	r3, r3, #16
 3118 00b0 1A68     		ldr	r2, [r3]
 3119 00b2 BB68     		ldr	r3, [r7, #8]
 3120 00b4 1344     		add	r3, r3, r2
 3121 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3122 00b8 0B70     		strb	r3, [r1]
 696:STM32F10x_Speex_Lib/libspeex/jitter.c ****             packet->data[j] = jitter->packets[i].data[j];
 3123              		.loc 2 696 0 discriminator 3
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 71


 3124 00ba BB68     		ldr	r3, [r7, #8]
 3125 00bc 0133     		adds	r3, r3, #1
 3126 00be BB60     		str	r3, [r7, #8]
 3127              	.L157:
 696:STM32F10x_Speex_Lib/libspeex/jitter.c ****             packet->data[j] = jitter->packets[i].data[j];
 3128              		.loc 2 696 0 is_stmt 0 discriminator 1
 3129 00c0 3B68     		ldr	r3, [r7]
 3130 00c2 5A68     		ldr	r2, [r3, #4]
 3131 00c4 BB68     		ldr	r3, [r7, #8]
 3132 00c6 9A42     		cmp	r2, r3
 3133 00c8 E6D8     		bhi	.L158
 698:STM32F10x_Speex_Lib/libspeex/jitter.c ****          /* Remove packet */
 699:STM32F10x_Speex_Lib/libspeex/jitter.c ****          speex_free(jitter->packets[i].data);
 3134              		.loc 2 699 0 is_stmt 1
 3135 00ca 7968     		ldr	r1, [r7, #4]
 3136 00cc FA68     		ldr	r2, [r7, #12]
 3137 00ce 1346     		mov	r3, r2
 3138 00d0 5B00     		lsls	r3, r3, #1
 3139 00d2 1344     		add	r3, r3, r2
 3140 00d4 DB00     		lsls	r3, r3, #3
 3141 00d6 0B44     		add	r3, r3, r1
 3142 00d8 1033     		adds	r3, r3, #16
 3143 00da 1B68     		ldr	r3, [r3]
 3144 00dc 1846     		mov	r0, r3
 3145 00de FFF7FEFF 		bl	speex_free
 3146              	.L156:
 700:STM32F10x_Speex_Lib/libspeex/jitter.c ****       }
 701:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->packets[i].data = NULL;
 3147              		.loc 2 701 0
 3148 00e2 7968     		ldr	r1, [r7, #4]
 3149 00e4 FA68     		ldr	r2, [r7, #12]
 3150 00e6 1346     		mov	r3, r2
 3151 00e8 5B00     		lsls	r3, r3, #1
 3152 00ea 1344     		add	r3, r3, r2
 3153 00ec DB00     		lsls	r3, r3, #3
 3154 00ee 0B44     		add	r3, r3, r1
 3155 00f0 1033     		adds	r3, r3, #16
 3156 00f2 0022     		movs	r2, #0
 3157 00f4 1A60     		str	r2, [r3]
 702:STM32F10x_Speex_Lib/libspeex/jitter.c ****       packet->timestamp = jitter->packets[i].timestamp;
 3158              		.loc 2 702 0
 3159 00f6 7968     		ldr	r1, [r7, #4]
 3160 00f8 FB68     		ldr	r3, [r7, #12]
 3161 00fa 5A1C     		adds	r2, r3, #1
 3162 00fc 1346     		mov	r3, r2
 3163 00fe 5B00     		lsls	r3, r3, #1
 3164 0100 1344     		add	r3, r3, r2
 3165 0102 DB00     		lsls	r3, r3, #3
 3166 0104 0B44     		add	r3, r3, r1
 3167 0106 1A68     		ldr	r2, [r3]
 3168 0108 3B68     		ldr	r3, [r7]
 3169 010a 9A60     		str	r2, [r3, #8]
 703:STM32F10x_Speex_Lib/libspeex/jitter.c ****       packet->span = jitter->packets[i].span;
 3170              		.loc 2 703 0
 3171 010c 7968     		ldr	r1, [r7, #4]
 3172 010e FB68     		ldr	r3, [r7, #12]
 3173 0110 5A1C     		adds	r2, r3, #1
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 72


 3174 0112 1346     		mov	r3, r2
 3175 0114 5B00     		lsls	r3, r3, #1
 3176 0116 1344     		add	r3, r3, r2
 3177 0118 DB00     		lsls	r3, r3, #3
 3178 011a 0B44     		add	r3, r3, r1
 3179 011c 0433     		adds	r3, r3, #4
 3180 011e 1A68     		ldr	r2, [r3]
 3181 0120 3B68     		ldr	r3, [r7]
 3182 0122 DA60     		str	r2, [r3, #12]
 704:STM32F10x_Speex_Lib/libspeex/jitter.c ****       packet->sequence = jitter->packets[i].sequence;
 3183              		.loc 2 704 0
 3184 0124 7968     		ldr	r1, [r7, #4]
 3185 0126 FA68     		ldr	r2, [r7, #12]
 3186 0128 1346     		mov	r3, r2
 3187 012a 5B00     		lsls	r3, r3, #1
 3188 012c 1344     		add	r3, r3, r2
 3189 012e DB00     		lsls	r3, r3, #3
 3190 0130 0B44     		add	r3, r3, r1
 3191 0132 2033     		adds	r3, r3, #32
 3192 0134 1A88     		ldrh	r2, [r3]
 3193 0136 3B68     		ldr	r3, [r7]
 3194 0138 1A82     		strh	r2, [r3, #16]	@ movhi
 705:STM32F10x_Speex_Lib/libspeex/jitter.c ****       packet->user_data = jitter->packets[i].user_data;
 3195              		.loc 2 705 0
 3196 013a 7968     		ldr	r1, [r7, #4]
 3197 013c FA68     		ldr	r2, [r7, #12]
 3198 013e 1346     		mov	r3, r2
 3199 0140 5B00     		lsls	r3, r3, #1
 3200 0142 1344     		add	r3, r3, r2
 3201 0144 DB00     		lsls	r3, r3, #3
 3202 0146 0B44     		add	r3, r3, r1
 3203 0148 2433     		adds	r3, r3, #36
 3204 014a 1A68     		ldr	r2, [r3]
 3205 014c 3B68     		ldr	r3, [r7]
 3206 014e 5A61     		str	r2, [r3, #20]
 706:STM32F10x_Speex_Lib/libspeex/jitter.c ****       return JITTER_BUFFER_OK;
 3207              		.loc 2 706 0
 3208 0150 0023     		movs	r3, #0
 3209 0152 09E0     		b	.L159
 3210              	.L154:
 707:STM32F10x_Speex_Lib/libspeex/jitter.c ****    } else {
 708:STM32F10x_Speex_Lib/libspeex/jitter.c ****       packet->data = NULL;
 3211              		.loc 2 708 0
 3212 0154 3B68     		ldr	r3, [r7]
 3213 0156 0022     		movs	r2, #0
 3214 0158 1A60     		str	r2, [r3]
 709:STM32F10x_Speex_Lib/libspeex/jitter.c ****       packet->len = 0;
 3215              		.loc 2 709 0
 3216 015a 3B68     		ldr	r3, [r7]
 3217 015c 0022     		movs	r2, #0
 3218 015e 5A60     		str	r2, [r3, #4]
 710:STM32F10x_Speex_Lib/libspeex/jitter.c ****       packet->span = 0;
 3219              		.loc 2 710 0
 3220 0160 3B68     		ldr	r3, [r7]
 3221 0162 0022     		movs	r2, #0
 3222 0164 DA60     		str	r2, [r3, #12]
 711:STM32F10x_Speex_Lib/libspeex/jitter.c ****       return JITTER_BUFFER_MISSING;
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 73


 3223              		.loc 2 711 0
 3224 0166 0123     		movs	r3, #1
 3225              	.L159:
 712:STM32F10x_Speex_Lib/libspeex/jitter.c ****    }
 713:STM32F10x_Speex_Lib/libspeex/jitter.c **** }
 3226              		.loc 2 713 0
 3227 0168 1846     		mov	r0, r3
 3228 016a 1037     		adds	r7, r7, #16
 3229              	.LCFI71:
 3230              		.cfi_def_cfa_offset 8
 3231 016c BD46     		mov	sp, r7
 3232              	.LCFI72:
 3233              		.cfi_def_cfa_register 13
 3234              		@ sp needed
 3235 016e 80BD     		pop	{r7, pc}
 3236              		.cfi_endproc
 3237              	.LFE19:
 3239              		.section	.text._jitter_buffer_update_delay,"ax",%progbits
 3240              		.align	2
 3241              		.thumb
 3242              		.thumb_func
 3244              	_jitter_buffer_update_delay:
 3245              	.LFB20:
 714:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 715:STM32F10x_Speex_Lib/libspeex/jitter.c **** /* Let the jitter buffer know it's the right time to adjust the buffering delay to the network cond
 716:STM32F10x_Speex_Lib/libspeex/jitter.c **** static int _jitter_buffer_update_delay(JitterBuffer *jitter, JitterBufferPacket *packet, spx_int32_
 717:STM32F10x_Speex_Lib/libspeex/jitter.c **** {
 3246              		.loc 2 717 0
 3247              		.cfi_startproc
 3248              		@ args = 0, pretend = 0, frame = 24
 3249              		@ frame_needed = 1, uses_anonymous_args = 0
 3250 0000 80B5     		push	{r7, lr}
 3251              	.LCFI73:
 3252              		.cfi_def_cfa_offset 8
 3253              		.cfi_offset 7, -8
 3254              		.cfi_offset 14, -4
 3255 0002 86B0     		sub	sp, sp, #24
 3256              	.LCFI74:
 3257              		.cfi_def_cfa_offset 32
 3258 0004 00AF     		add	r7, sp, #0
 3259              	.LCFI75:
 3260              		.cfi_def_cfa_register 7
 3261 0006 F860     		str	r0, [r7, #12]
 3262 0008 B960     		str	r1, [r7, #8]
 3263 000a 7A60     		str	r2, [r7, #4]
 718:STM32F10x_Speex_Lib/libspeex/jitter.c ****    spx_int16_t opt = compute_opt_delay(jitter);
 3264              		.loc 2 718 0
 3265 000c F868     		ldr	r0, [r7, #12]
 3266 000e FFF7FEFF 		bl	compute_opt_delay
 3267 0012 0346     		mov	r3, r0
 3268 0014 FB82     		strh	r3, [r7, #22]	@ movhi
 719:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /*fprintf(stderr, "opt adjustment is %d ", opt);*/
 720:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 721:STM32F10x_Speex_Lib/libspeex/jitter.c ****    if (opt < 0)
 3269              		.loc 2 721 0
 3270 0016 B7F91630 		ldrsh	r3, [r7, #22]
 3271 001a 002B     		cmp	r3, #0
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 74


 3272 001c 17DA     		bge	.L162
 722:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 723:STM32F10x_Speex_Lib/libspeex/jitter.c ****       shift_timings(jitter, -opt);
 3273              		.loc 2 723 0
 3274 001e FB8A     		ldrh	r3, [r7, #22]
 3275 0020 5B42     		negs	r3, r3
 3276 0022 9BB2     		uxth	r3, r3
 3277 0024 1BB2     		sxth	r3, r3
 3278 0026 1946     		mov	r1, r3
 3279 0028 F868     		ldr	r0, [r7, #12]
 3280 002a FFF7FEFF 		bl	shift_timings
 724:STM32F10x_Speex_Lib/libspeex/jitter.c ****       
 725:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->pointer_timestamp += opt;
 3281              		.loc 2 725 0
 3282 002e FB68     		ldr	r3, [r7, #12]
 3283 0030 1A68     		ldr	r2, [r3]
 3284 0032 B7F91630 		ldrsh	r3, [r7, #22]
 3285 0036 1A44     		add	r2, r2, r3
 3286 0038 FB68     		ldr	r3, [r7, #12]
 3287 003a 1A60     		str	r2, [r3]
 726:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->interp_requested = -opt;
 3288              		.loc 2 726 0
 3289 003c B7F91630 		ldrsh	r3, [r7, #22]
 3290 0040 5A42     		negs	r2, r3
 3291 0042 FB68     		ldr	r3, [r7, #12]
 3292 0044 03F5B053 		add	r3, r3, #5632
 3293 0048 0833     		adds	r3, r3, #8
 3294 004a 1A60     		str	r2, [r3]
 3295 004c 12E0     		b	.L163
 3296              	.L162:
 727:STM32F10x_Speex_Lib/libspeex/jitter.c ****       /*fprintf (stderr, "Decision to interpolate %d samples\n", -opt);*/
 728:STM32F10x_Speex_Lib/libspeex/jitter.c ****    } else if (opt > 0)
 3297              		.loc 2 728 0
 3298 004e B7F91630 		ldrsh	r3, [r7, #22]
 3299 0052 002B     		cmp	r3, #0
 3300 0054 0EDD     		ble	.L163
 729:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 730:STM32F10x_Speex_Lib/libspeex/jitter.c ****       shift_timings(jitter, -opt);
 3301              		.loc 2 730 0
 3302 0056 FB8A     		ldrh	r3, [r7, #22]
 3303 0058 5B42     		negs	r3, r3
 3304 005a 9BB2     		uxth	r3, r3
 3305 005c 1BB2     		sxth	r3, r3
 3306 005e 1946     		mov	r1, r3
 3307 0060 F868     		ldr	r0, [r7, #12]
 3308 0062 FFF7FEFF 		bl	shift_timings
 731:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->pointer_timestamp += opt;
 3309              		.loc 2 731 0
 3310 0066 FB68     		ldr	r3, [r7, #12]
 3311 0068 1A68     		ldr	r2, [r3]
 3312 006a B7F91630 		ldrsh	r3, [r7, #22]
 3313 006e 1A44     		add	r2, r2, r3
 3314 0070 FB68     		ldr	r3, [r7, #12]
 3315 0072 1A60     		str	r2, [r3]
 3316              	.L163:
 732:STM32F10x_Speex_Lib/libspeex/jitter.c ****       /*fprintf (stderr, "Decision to drop %d samples\n", opt);*/
 733:STM32F10x_Speex_Lib/libspeex/jitter.c ****    }
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 75


 734:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 735:STM32F10x_Speex_Lib/libspeex/jitter.c ****    return opt;
 3317              		.loc 2 735 0
 3318 0074 B7F91630 		ldrsh	r3, [r7, #22]
 736:STM32F10x_Speex_Lib/libspeex/jitter.c **** }
 3319              		.loc 2 736 0
 3320 0078 1846     		mov	r0, r3
 3321 007a 1837     		adds	r7, r7, #24
 3322              	.LCFI76:
 3323              		.cfi_def_cfa_offset 8
 3324 007c BD46     		mov	sp, r7
 3325              	.LCFI77:
 3326              		.cfi_def_cfa_register 13
 3327              		@ sp needed
 3328 007e 80BD     		pop	{r7, pc}
 3329              		.cfi_endproc
 3330              	.LFE20:
 3332              		.section	.text.jitter_buffer_update_delay,"ax",%progbits
 3333              		.align	2
 3334              		.global	jitter_buffer_update_delay
 3335              		.thumb
 3336              		.thumb_func
 3338              	jitter_buffer_update_delay:
 3339              	.LFB21:
 737:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 738:STM32F10x_Speex_Lib/libspeex/jitter.c **** /* Let the jitter buffer know it's the right time to adjust the buffering delay to the network cond
 739:STM32F10x_Speex_Lib/libspeex/jitter.c **** EXPORT int jitter_buffer_update_delay(JitterBuffer *jitter, JitterBufferPacket *packet, spx_int32_t
 740:STM32F10x_Speex_Lib/libspeex/jitter.c **** {
 3340              		.loc 2 740 0
 3341              		.cfi_startproc
 3342              		@ args = 0, pretend = 0, frame = 16
 3343              		@ frame_needed = 1, uses_anonymous_args = 0
 3344 0000 80B5     		push	{r7, lr}
 3345              	.LCFI78:
 3346              		.cfi_def_cfa_offset 8
 3347              		.cfi_offset 7, -8
 3348              		.cfi_offset 14, -4
 3349 0002 84B0     		sub	sp, sp, #16
 3350              	.LCFI79:
 3351              		.cfi_def_cfa_offset 24
 3352 0004 00AF     		add	r7, sp, #0
 3353              	.LCFI80:
 3354              		.cfi_def_cfa_register 7
 3355 0006 F860     		str	r0, [r7, #12]
 3356 0008 B960     		str	r1, [r7, #8]
 3357 000a 7A60     		str	r2, [r7, #4]
 741:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /* If the programmer calls jitter_buffer_update_delay() directly, 
 742:STM32F10x_Speex_Lib/libspeex/jitter.c ****       automatically disable auto-adjustment */
 743:STM32F10x_Speex_Lib/libspeex/jitter.c ****    jitter->auto_adjust = 0;
 3358              		.loc 2 743 0
 3359 000c FB68     		ldr	r3, [r7, #12]
 3360 000e 03F5B053 		add	r3, r3, #5632
 3361 0012 0C33     		adds	r3, r3, #12
 3362 0014 0022     		movs	r2, #0
 3363 0016 1A60     		str	r2, [r3]
 744:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 745:STM32F10x_Speex_Lib/libspeex/jitter.c ****    return _jitter_buffer_update_delay(jitter, packet, start_offset);
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 76


 3364              		.loc 2 745 0
 3365 0018 7A68     		ldr	r2, [r7, #4]
 3366 001a B968     		ldr	r1, [r7, #8]
 3367 001c F868     		ldr	r0, [r7, #12]
 3368 001e FFF7FEFF 		bl	_jitter_buffer_update_delay
 3369 0022 0346     		mov	r3, r0
 746:STM32F10x_Speex_Lib/libspeex/jitter.c **** }
 3370              		.loc 2 746 0
 3371 0024 1846     		mov	r0, r3
 3372 0026 1037     		adds	r7, r7, #16
 3373              	.LCFI81:
 3374              		.cfi_def_cfa_offset 8
 3375 0028 BD46     		mov	sp, r7
 3376              	.LCFI82:
 3377              		.cfi_def_cfa_register 13
 3378              		@ sp needed
 3379 002a 80BD     		pop	{r7, pc}
 3380              		.cfi_endproc
 3381              	.LFE21:
 3383              		.section	.text.jitter_buffer_get_pointer_timestamp,"ax",%progbits
 3384              		.align	2
 3385              		.global	jitter_buffer_get_pointer_timestamp
 3386              		.thumb
 3387              		.thumb_func
 3389              	jitter_buffer_get_pointer_timestamp:
 3390              	.LFB22:
 747:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 748:STM32F10x_Speex_Lib/libspeex/jitter.c **** /** Get pointer timestamp of jitter buffer */
 749:STM32F10x_Speex_Lib/libspeex/jitter.c **** EXPORT int jitter_buffer_get_pointer_timestamp(JitterBuffer *jitter)
 750:STM32F10x_Speex_Lib/libspeex/jitter.c **** {
 3391              		.loc 2 750 0
 3392              		.cfi_startproc
 3393              		@ args = 0, pretend = 0, frame = 8
 3394              		@ frame_needed = 1, uses_anonymous_args = 0
 3395              		@ link register save eliminated.
 3396 0000 80B4     		push	{r7}
 3397              	.LCFI83:
 3398              		.cfi_def_cfa_offset 4
 3399              		.cfi_offset 7, -4
 3400 0002 83B0     		sub	sp, sp, #12
 3401              	.LCFI84:
 3402              		.cfi_def_cfa_offset 16
 3403 0004 00AF     		add	r7, sp, #0
 3404              	.LCFI85:
 3405              		.cfi_def_cfa_register 7
 3406 0006 7860     		str	r0, [r7, #4]
 751:STM32F10x_Speex_Lib/libspeex/jitter.c ****    return jitter->pointer_timestamp;
 3407              		.loc 2 751 0
 3408 0008 7B68     		ldr	r3, [r7, #4]
 3409 000a 1B68     		ldr	r3, [r3]
 752:STM32F10x_Speex_Lib/libspeex/jitter.c **** }
 3410              		.loc 2 752 0
 3411 000c 1846     		mov	r0, r3
 3412 000e 0C37     		adds	r7, r7, #12
 3413              	.LCFI86:
 3414              		.cfi_def_cfa_offset 4
 3415 0010 BD46     		mov	sp, r7
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 77


 3416              	.LCFI87:
 3417              		.cfi_def_cfa_register 13
 3418              		@ sp needed
 3419 0012 80BC     		pop	{r7}
 3420              	.LCFI88:
 3421              		.cfi_restore 7
 3422              		.cfi_def_cfa_offset 0
 3423 0014 7047     		bx	lr
 3424              		.cfi_endproc
 3425              	.LFE22:
 3427 0016 00BF     		.section	.rodata
 3428 00d1 000000   		.align	2
 3429              	.LC4:
 3430 00d4 6A697474 		.ascii	"jitter buffer sees negative buffering, your code mi"
 3430      65722062 
 3430      75666665 
 3430      72207365 
 3430      6573206E 
 3431 0107 67687420 		.ascii	"ght be broken. Value is \000"
 3431      62652062 
 3431      726F6B65 
 3431      6E2E2056 
 3431      616C7565 
 3432              		.section	.text.jitter_buffer_tick,"ax",%progbits
 3433              		.align	2
 3434              		.global	jitter_buffer_tick
 3435              		.thumb
 3436              		.thumb_func
 3438              	jitter_buffer_tick:
 3439              	.LFB23:
 753:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 754:STM32F10x_Speex_Lib/libspeex/jitter.c **** EXPORT void jitter_buffer_tick(JitterBuffer *jitter)
 755:STM32F10x_Speex_Lib/libspeex/jitter.c **** {
 3440              		.loc 2 755 0
 3441              		.cfi_startproc
 3442              		@ args = 0, pretend = 0, frame = 8
 3443              		@ frame_needed = 1, uses_anonymous_args = 0
 3444 0000 80B5     		push	{r7, lr}
 3445              	.LCFI89:
 3446              		.cfi_def_cfa_offset 8
 3447              		.cfi_offset 7, -8
 3448              		.cfi_offset 14, -4
 3449 0002 82B0     		sub	sp, sp, #8
 3450              	.LCFI90:
 3451              		.cfi_def_cfa_offset 16
 3452 0004 00AF     		add	r7, sp, #0
 3453              	.LCFI91:
 3454              		.cfi_def_cfa_register 7
 3455 0006 7860     		str	r0, [r7, #4]
 756:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /* Automatically-adjust the buffering delay if requested */
 757:STM32F10x_Speex_Lib/libspeex/jitter.c ****    if (jitter->auto_adjust)
 3456              		.loc 2 757 0
 3457 0008 7B68     		ldr	r3, [r7, #4]
 3458 000a 03F5B053 		add	r3, r3, #5632
 3459 000e 0C33     		adds	r3, r3, #12
 3460 0010 1B68     		ldr	r3, [r3]
 3461 0012 002B     		cmp	r3, #0
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 78


 3462 0014 04D0     		beq	.L170
 758:STM32F10x_Speex_Lib/libspeex/jitter.c ****       _jitter_buffer_update_delay(jitter, NULL, NULL);
 3463              		.loc 2 758 0
 3464 0016 0022     		movs	r2, #0
 3465 0018 0021     		movs	r1, #0
 3466 001a 7868     		ldr	r0, [r7, #4]
 3467 001c FFF7FEFF 		bl	_jitter_buffer_update_delay
 3468              	.L170:
 759:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 760:STM32F10x_Speex_Lib/libspeex/jitter.c ****    if (jitter->buffered >= 0)
 3469              		.loc 2 760 0
 3470 0020 7B68     		ldr	r3, [r7, #4]
 3471 0022 DB68     		ldr	r3, [r3, #12]
 3472 0024 002B     		cmp	r3, #0
 3473 0026 07DB     		blt	.L171
 761:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 762:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->next_stop = jitter->pointer_timestamp - jitter->buffered;
 3474              		.loc 2 762 0
 3475 0028 7B68     		ldr	r3, [r7, #4]
 3476 002a 1B68     		ldr	r3, [r3]
 3477 002c 7A68     		ldr	r2, [r7, #4]
 3478 002e D268     		ldr	r2, [r2, #12]
 3479 0030 9A1A     		subs	r2, r3, r2
 3480 0032 7B68     		ldr	r3, [r7, #4]
 3481 0034 9A60     		str	r2, [r3, #8]
 3482 0036 09E0     		b	.L172
 3483              	.L171:
 763:STM32F10x_Speex_Lib/libspeex/jitter.c ****    } else {
 764:STM32F10x_Speex_Lib/libspeex/jitter.c ****       jitter->next_stop = jitter->pointer_timestamp;
 3484              		.loc 2 764 0
 3485 0038 7B68     		ldr	r3, [r7, #4]
 3486 003a 1A68     		ldr	r2, [r3]
 3487 003c 7B68     		ldr	r3, [r7, #4]
 3488 003e 9A60     		str	r2, [r3, #8]
 765:STM32F10x_Speex_Lib/libspeex/jitter.c ****       speex_warning_int("jitter buffer sees negative buffering, your code might be broken. Value is
 3489              		.loc 2 765 0
 3490 0040 7B68     		ldr	r3, [r7, #4]
 3491 0042 DB68     		ldr	r3, [r3, #12]
 3492 0044 1946     		mov	r1, r3
 3493 0046 0548     		ldr	r0, .L173
 3494 0048 FFF7FEFF 		bl	speex_warning_int
 3495              	.L172:
 766:STM32F10x_Speex_Lib/libspeex/jitter.c ****    }
 767:STM32F10x_Speex_Lib/libspeex/jitter.c ****    jitter->buffered = 0;
 3496              		.loc 2 767 0
 3497 004c 7B68     		ldr	r3, [r7, #4]
 3498 004e 0022     		movs	r2, #0
 3499 0050 DA60     		str	r2, [r3, #12]
 768:STM32F10x_Speex_Lib/libspeex/jitter.c **** }
 3500              		.loc 2 768 0
 3501 0052 00BF     		nop
 3502 0054 0837     		adds	r7, r7, #8
 3503              	.LCFI92:
 3504              		.cfi_def_cfa_offset 8
 3505 0056 BD46     		mov	sp, r7
 3506              	.LCFI93:
 3507              		.cfi_def_cfa_register 13
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 79


 3508              		@ sp needed
 3509 0058 80BD     		pop	{r7, pc}
 3510              	.L174:
 3511 005a 00BF     		.align	2
 3512              	.L173:
 3513 005c D4000000 		.word	.LC4
 3514              		.cfi_endproc
 3515              	.LFE23:
 3517              		.section	.text.jitter_buffer_remaining_span,"ax",%progbits
 3518              		.align	2
 3519              		.global	jitter_buffer_remaining_span
 3520              		.thumb
 3521              		.thumb_func
 3523              	jitter_buffer_remaining_span:
 3524              	.LFB24:
 769:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 770:STM32F10x_Speex_Lib/libspeex/jitter.c **** EXPORT void jitter_buffer_remaining_span(JitterBuffer *jitter, spx_uint32_t rem)
 771:STM32F10x_Speex_Lib/libspeex/jitter.c **** {
 3525              		.loc 2 771 0
 3526              		.cfi_startproc
 3527              		@ args = 0, pretend = 0, frame = 8
 3528              		@ frame_needed = 1, uses_anonymous_args = 0
 3529 0000 80B5     		push	{r7, lr}
 3530              	.LCFI94:
 3531              		.cfi_def_cfa_offset 8
 3532              		.cfi_offset 7, -8
 3533              		.cfi_offset 14, -4
 3534 0002 82B0     		sub	sp, sp, #8
 3535              	.LCFI95:
 3536              		.cfi_def_cfa_offset 16
 3537 0004 00AF     		add	r7, sp, #0
 3538              	.LCFI96:
 3539              		.cfi_def_cfa_register 7
 3540 0006 7860     		str	r0, [r7, #4]
 3541 0008 3960     		str	r1, [r7]
 772:STM32F10x_Speex_Lib/libspeex/jitter.c ****    /* Automatically-adjust the buffering delay if requested */
 773:STM32F10x_Speex_Lib/libspeex/jitter.c ****    if (jitter->auto_adjust)
 3542              		.loc 2 773 0
 3543 000a 7B68     		ldr	r3, [r7, #4]
 3544 000c 03F5B053 		add	r3, r3, #5632
 3545 0010 0C33     		adds	r3, r3, #12
 3546 0012 1B68     		ldr	r3, [r3]
 3547 0014 002B     		cmp	r3, #0
 3548 0016 04D0     		beq	.L176
 774:STM32F10x_Speex_Lib/libspeex/jitter.c ****       _jitter_buffer_update_delay(jitter, NULL, NULL);
 3549              		.loc 2 774 0
 3550 0018 0022     		movs	r2, #0
 3551 001a 0021     		movs	r1, #0
 3552 001c 7868     		ldr	r0, [r7, #4]
 3553 001e FFF7FEFF 		bl	_jitter_buffer_update_delay
 3554              	.L176:
 775:STM32F10x_Speex_Lib/libspeex/jitter.c ****    
 776:STM32F10x_Speex_Lib/libspeex/jitter.c ****    if (jitter->buffered < 0)
 3555              		.loc 2 776 0
 3556 0022 7B68     		ldr	r3, [r7, #4]
 3557 0024 DB68     		ldr	r3, [r3, #12]
 3558 0026 002B     		cmp	r3, #0
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 80


 3559 0028 05DA     		bge	.L177
 777:STM32F10x_Speex_Lib/libspeex/jitter.c ****       speex_warning_int("jitter buffer sees negative buffering, your code might be broken. Value is
 3560              		.loc 2 777 0
 3561 002a 7B68     		ldr	r3, [r7, #4]
 3562 002c DB68     		ldr	r3, [r3, #12]
 3563 002e 1946     		mov	r1, r3
 3564 0030 0648     		ldr	r0, .L178
 3565 0032 FFF7FEFF 		bl	speex_warning_int
 3566              	.L177:
 778:STM32F10x_Speex_Lib/libspeex/jitter.c ****    jitter->next_stop = jitter->pointer_timestamp - rem;
 3567              		.loc 2 778 0
 3568 0036 7B68     		ldr	r3, [r7, #4]
 3569 0038 1A68     		ldr	r2, [r3]
 3570 003a 3B68     		ldr	r3, [r7]
 3571 003c D21A     		subs	r2, r2, r3
 3572 003e 7B68     		ldr	r3, [r7, #4]
 3573 0040 9A60     		str	r2, [r3, #8]
 779:STM32F10x_Speex_Lib/libspeex/jitter.c **** }
 3574              		.loc 2 779 0
 3575 0042 00BF     		nop
 3576 0044 0837     		adds	r7, r7, #8
 3577              	.LCFI97:
 3578              		.cfi_def_cfa_offset 8
 3579 0046 BD46     		mov	sp, r7
 3580              	.LCFI98:
 3581              		.cfi_def_cfa_register 13
 3582              		@ sp needed
 3583 0048 80BD     		pop	{r7, pc}
 3584              	.L179:
 3585 004a 00BF     		.align	2
 3586              	.L178:
 3587 004c D4000000 		.word	.LC4
 3588              		.cfi_endproc
 3589              	.LFE24:
 3591              		.section	.rodata
 3592              		.align	2
 3593              	.LC5:
 3594 0120 556E6B6E 		.ascii	"Unknown jitter_buffer_ctl request: \000"
 3594      6F776E20 
 3594      6A697474 
 3594      65725F62 
 3594      75666665 
 3595              		.section	.text.jitter_buffer_ctl,"ax",%progbits
 3596              		.align	2
 3597              		.global	jitter_buffer_ctl
 3598              		.thumb
 3599              		.thumb_func
 3601              	jitter_buffer_ctl:
 3602              	.LFB25:
 780:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 781:STM32F10x_Speex_Lib/libspeex/jitter.c **** 
 782:STM32F10x_Speex_Lib/libspeex/jitter.c **** /* Used like the ioctl function to control the jitter buffer parameters */
 783:STM32F10x_Speex_Lib/libspeex/jitter.c **** EXPORT int jitter_buffer_ctl(JitterBuffer *jitter, int request, void *ptr)
 784:STM32F10x_Speex_Lib/libspeex/jitter.c **** {
 3603              		.loc 2 784 0
 3604              		.cfi_startproc
 3605              		@ args = 0, pretend = 0, frame = 24
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 81


 3606              		@ frame_needed = 1, uses_anonymous_args = 0
 3607 0000 80B5     		push	{r7, lr}
 3608              	.LCFI99:
 3609              		.cfi_def_cfa_offset 8
 3610              		.cfi_offset 7, -8
 3611              		.cfi_offset 14, -4
 3612 0002 86B0     		sub	sp, sp, #24
 3613              	.LCFI100:
 3614              		.cfi_def_cfa_offset 32
 3615 0004 00AF     		add	r7, sp, #0
 3616              	.LCFI101:
 3617              		.cfi_def_cfa_register 7
 3618 0006 F860     		str	r0, [r7, #12]
 3619 0008 B960     		str	r1, [r7, #8]
 3620 000a 7A60     		str	r2, [r7, #4]
 785:STM32F10x_Speex_Lib/libspeex/jitter.c ****    int count, i;
 786:STM32F10x_Speex_Lib/libspeex/jitter.c ****    switch(request)
 3621              		.loc 2 786 0
 3622 000c BB68     		ldr	r3, [r7, #8]
 3623 000e 0D2B     		cmp	r3, #13
 3624 0010 00F2C580 		bhi	.L181
 3625 0014 01A2     		adr	r2, .L183
 3626 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3627 001a 00BF     		.p2align 2
 3628              	.L183:
 3629 001c 55000000 		.word	.L182+1
 3630 0020 63000000 		.word	.L184+1
 3631 0024 9F010000 		.word	.L181+1
 3632 0028 71000000 		.word	.L185+1
 3633 002c C7000000 		.word	.L186+1
 3634 0030 D5000000 		.word	.L187+1
 3635 0034 E5000000 		.word	.L188+1
 3636 0038 F5000000 		.word	.L189+1
 3637 003c 05010000 		.word	.L190+1
 3638 0040 15010000 		.word	.L191+1
 3639 0044 25010000 		.word	.L192+1
 3640 0048 6F010000 		.word	.L193+1
 3641 004c 7F010000 		.word	.L194+1
 3642 0050 8F010000 		.word	.L195+1
 3643              		.p2align 1
 3644              	.L182:
 787:STM32F10x_Speex_Lib/libspeex/jitter.c ****    {
 788:STM32F10x_Speex_Lib/libspeex/jitter.c ****       case JITTER_BUFFER_SET_MARGIN:
 789:STM32F10x_Speex_Lib/libspeex/jitter.c ****          jitter->buffer_margin = *(spx_int32_t*)ptr;
 3645              		.loc 2 789 0
 3646 0054 7B68     		ldr	r3, [r7, #4]
 3647 0056 1A68     		ldr	r2, [r3]
 3648 0058 FB68     		ldr	r3, [r7, #12]
 3649 005a 03F5B053 		add	r3, r3, #5632
 3650 005e 1A60     		str	r2, [r3]
 790:STM32F10x_Speex_Lib/libspeex/jitter.c ****          break;
 3651              		.loc 2 790 0
 3652 0060 A4E0     		b	.L196
 3653              	.L184:
 791:STM32F10x_Speex_Lib/libspeex/jitter.c ****       case JITTER_BUFFER_GET_MARGIN:
 792:STM32F10x_Speex_Lib/libspeex/jitter.c ****          *(spx_int32_t*)ptr = jitter->buffer_margin;
 3654              		.loc 2 792 0
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 82


 3655 0062 FB68     		ldr	r3, [r7, #12]
 3656 0064 03F5B053 		add	r3, r3, #5632
 3657 0068 1A68     		ldr	r2, [r3]
 3658 006a 7B68     		ldr	r3, [r7, #4]
 3659 006c 1A60     		str	r2, [r3]
 793:STM32F10x_Speex_Lib/libspeex/jitter.c ****          break;
 3660              		.loc 2 793 0
 3661 006e 9DE0     		b	.L196
 3662              	.L185:
 794:STM32F10x_Speex_Lib/libspeex/jitter.c ****       case JITTER_BUFFER_GET_AVALIABLE_COUNT:
 795:STM32F10x_Speex_Lib/libspeex/jitter.c ****          count = 0;
 3663              		.loc 2 795 0
 3664 0070 0023     		movs	r3, #0
 3665 0072 7B61     		str	r3, [r7, #20]
 796:STM32F10x_Speex_Lib/libspeex/jitter.c ****          for (i=0;i<SPEEX_JITTER_MAX_BUFFER_SIZE;i++)
 3666              		.loc 2 796 0
 3667 0074 0023     		movs	r3, #0
 3668 0076 3B61     		str	r3, [r7, #16]
 3669 0078 1EE0     		b	.L197
 3670              	.L199:
 797:STM32F10x_Speex_Lib/libspeex/jitter.c ****          {
 798:STM32F10x_Speex_Lib/libspeex/jitter.c ****             if (jitter->packets[i].data && LE32(jitter->pointer_timestamp, jitter->packets[i].times
 3671              		.loc 2 798 0
 3672 007a F968     		ldr	r1, [r7, #12]
 3673 007c 3A69     		ldr	r2, [r7, #16]
 3674 007e 1346     		mov	r3, r2
 3675 0080 5B00     		lsls	r3, r3, #1
 3676 0082 1344     		add	r3, r3, r2
 3677 0084 DB00     		lsls	r3, r3, #3
 3678 0086 0B44     		add	r3, r3, r1
 3679 0088 1033     		adds	r3, r3, #16
 3680 008a 1B68     		ldr	r3, [r3]
 3681 008c 002B     		cmp	r3, #0
 3682 008e 10D0     		beq	.L198
 3683              		.loc 2 798 0 is_stmt 0 discriminator 1
 3684 0090 FB68     		ldr	r3, [r7, #12]
 3685 0092 1968     		ldr	r1, [r3]
 3686 0094 F868     		ldr	r0, [r7, #12]
 3687 0096 3B69     		ldr	r3, [r7, #16]
 3688 0098 5A1C     		adds	r2, r3, #1
 3689 009a 1346     		mov	r3, r2
 3690 009c 5B00     		lsls	r3, r3, #1
 3691 009e 1344     		add	r3, r3, r2
 3692 00a0 DB00     		lsls	r3, r3, #3
 3693 00a2 0344     		add	r3, r3, r0
 3694 00a4 1B68     		ldr	r3, [r3]
 3695 00a6 CB1A     		subs	r3, r1, r3
 3696 00a8 002B     		cmp	r3, #0
 3697 00aa 02DC     		bgt	.L198
 799:STM32F10x_Speex_Lib/libspeex/jitter.c ****             {
 800:STM32F10x_Speex_Lib/libspeex/jitter.c ****                count++;
 3698              		.loc 2 800 0 is_stmt 1
 3699 00ac 7B69     		ldr	r3, [r7, #20]
 3700 00ae 0133     		adds	r3, r3, #1
 3701 00b0 7B61     		str	r3, [r7, #20]
 3702              	.L198:
 796:STM32F10x_Speex_Lib/libspeex/jitter.c ****          {
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 83


 3703              		.loc 2 796 0 discriminator 2
 3704 00b2 3B69     		ldr	r3, [r7, #16]
 3705 00b4 0133     		adds	r3, r3, #1
 3706 00b6 3B61     		str	r3, [r7, #16]
 3707              	.L197:
 796:STM32F10x_Speex_Lib/libspeex/jitter.c ****          {
 3708              		.loc 2 796 0 is_stmt 0 discriminator 1
 3709 00b8 3B69     		ldr	r3, [r7, #16]
 3710 00ba C72B     		cmp	r3, #199
 3711 00bc DDDD     		ble	.L199
 801:STM32F10x_Speex_Lib/libspeex/jitter.c ****             }
 802:STM32F10x_Speex_Lib/libspeex/jitter.c ****          }
 803:STM32F10x_Speex_Lib/libspeex/jitter.c ****          *(spx_int32_t*)ptr = count;
 3712              		.loc 2 803 0 is_stmt 1
 3713 00be 7B68     		ldr	r3, [r7, #4]
 3714 00c0 7A69     		ldr	r2, [r7, #20]
 3715 00c2 1A60     		str	r2, [r3]
 804:STM32F10x_Speex_Lib/libspeex/jitter.c ****          break;
 3716              		.loc 2 804 0
 3717 00c4 72E0     		b	.L196
 3718              	.L186:
 805:STM32F10x_Speex_Lib/libspeex/jitter.c ****       case JITTER_BUFFER_SET_DESTROY_CALLBACK:
 806:STM32F10x_Speex_Lib/libspeex/jitter.c ****          jitter->destroy = (void (*) (void *))ptr;
 3719              		.loc 2 806 0
 3720 00c6 7A68     		ldr	r2, [r7, #4]
 3721 00c8 FB68     		ldr	r3, [r7, #12]
 3722 00ca 03F5AF53 		add	r3, r3, #5600
 3723 00ce 1033     		adds	r3, r3, #16
 3724 00d0 1A60     		str	r2, [r3]
 807:STM32F10x_Speex_Lib/libspeex/jitter.c ****          break;
 3725              		.loc 2 807 0
 3726 00d2 6BE0     		b	.L196
 3727              	.L187:
 808:STM32F10x_Speex_Lib/libspeex/jitter.c ****       case JITTER_BUFFER_GET_DESTROY_CALLBACK:
 809:STM32F10x_Speex_Lib/libspeex/jitter.c ****          *(void (**) (void *))ptr = jitter->destroy;
 3728              		.loc 2 809 0
 3729 00d4 FB68     		ldr	r3, [r7, #12]
 3730 00d6 03F5AF53 		add	r3, r3, #5600
 3731 00da 1033     		adds	r3, r3, #16
 3732 00dc 1A68     		ldr	r2, [r3]
 3733 00de 7B68     		ldr	r3, [r7, #4]
 3734 00e0 1A60     		str	r2, [r3]
 810:STM32F10x_Speex_Lib/libspeex/jitter.c ****          break;
 3735              		.loc 2 810 0
 3736 00e2 63E0     		b	.L196
 3737              	.L188:
 811:STM32F10x_Speex_Lib/libspeex/jitter.c ****       case JITTER_BUFFER_SET_DELAY_STEP:
 812:STM32F10x_Speex_Lib/libspeex/jitter.c ****          jitter->delay_step = *(spx_int32_t*)ptr;
 3738              		.loc 2 812 0
 3739 00e4 7B68     		ldr	r3, [r7, #4]
 3740 00e6 1A68     		ldr	r2, [r3]
 3741 00e8 FB68     		ldr	r3, [r7, #12]
 3742 00ea 03F5AF53 		add	r3, r3, #5600
 3743 00ee 1433     		adds	r3, r3, #20
 3744 00f0 1A60     		str	r2, [r3]
 813:STM32F10x_Speex_Lib/libspeex/jitter.c ****          break;
 3745              		.loc 2 813 0
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 84


 3746 00f2 5BE0     		b	.L196
 3747              	.L189:
 814:STM32F10x_Speex_Lib/libspeex/jitter.c ****       case JITTER_BUFFER_GET_DELAY_STEP:
 815:STM32F10x_Speex_Lib/libspeex/jitter.c ****          *(spx_int32_t*)ptr = jitter->delay_step;
 3748              		.loc 2 815 0
 3749 00f4 FB68     		ldr	r3, [r7, #12]
 3750 00f6 03F5AF53 		add	r3, r3, #5600
 3751 00fa 1433     		adds	r3, r3, #20
 3752 00fc 1A68     		ldr	r2, [r3]
 3753 00fe 7B68     		ldr	r3, [r7, #4]
 3754 0100 1A60     		str	r2, [r3]
 816:STM32F10x_Speex_Lib/libspeex/jitter.c ****          break;
 3755              		.loc 2 816 0
 3756 0102 53E0     		b	.L196
 3757              	.L190:
 817:STM32F10x_Speex_Lib/libspeex/jitter.c ****       case JITTER_BUFFER_SET_CONCEALMENT_SIZE:
 818:STM32F10x_Speex_Lib/libspeex/jitter.c ****          jitter->concealment_size = *(spx_int32_t*)ptr;
 3758              		.loc 2 818 0
 3759 0104 7B68     		ldr	r3, [r7, #4]
 3760 0106 1A68     		ldr	r2, [r3]
 3761 0108 FB68     		ldr	r3, [r7, #12]
 3762 010a 03F5AF53 		add	r3, r3, #5600
 3763 010e 1833     		adds	r3, r3, #24
 3764 0110 1A60     		str	r2, [r3]
 819:STM32F10x_Speex_Lib/libspeex/jitter.c ****          break;
 3765              		.loc 2 819 0
 3766 0112 4BE0     		b	.L196
 3767              	.L191:
 820:STM32F10x_Speex_Lib/libspeex/jitter.c ****       case JITTER_BUFFER_GET_CONCEALMENT_SIZE:
 821:STM32F10x_Speex_Lib/libspeex/jitter.c ****          *(spx_int32_t*)ptr = jitter->concealment_size;
 3768              		.loc 2 821 0
 3769 0114 FB68     		ldr	r3, [r7, #12]
 3770 0116 03F5AF53 		add	r3, r3, #5600
 3771 011a 1833     		adds	r3, r3, #24
 3772 011c 1A68     		ldr	r2, [r3]
 3773 011e 7B68     		ldr	r3, [r7, #4]
 3774 0120 1A60     		str	r2, [r3]
 822:STM32F10x_Speex_Lib/libspeex/jitter.c ****          break;
 3775              		.loc 2 822 0
 3776 0122 43E0     		b	.L196
 3777              	.L192:
 823:STM32F10x_Speex_Lib/libspeex/jitter.c ****       case JITTER_BUFFER_SET_MAX_LATE_RATE:
 824:STM32F10x_Speex_Lib/libspeex/jitter.c ****          jitter->max_late_rate = *(spx_int32_t*)ptr;
 3778              		.loc 2 824 0
 3779 0124 7B68     		ldr	r3, [r7, #4]
 3780 0126 1A68     		ldr	r2, [r3]
 3781 0128 FB68     		ldr	r3, [r7, #12]
 3782 012a 03F5C853 		add	r3, r3, #6400
 3783 012e 0C33     		adds	r3, r3, #12
 3784 0130 1A60     		str	r2, [r3]
 825:STM32F10x_Speex_Lib/libspeex/jitter.c ****          jitter->window_size = 100*TOP_DELAY/jitter->max_late_rate;
 3785              		.loc 2 825 0
 3786 0132 FB68     		ldr	r3, [r7, #12]
 3787 0134 03F5C853 		add	r3, r3, #6400
 3788 0138 0C33     		adds	r3, r3, #12
 3789 013a 1B68     		ldr	r3, [r3]
 3790 013c 4FF47A62 		mov	r2, #4000
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 85


 3791 0140 92FBF3F2 		sdiv	r2, r2, r3
 3792 0144 FB68     		ldr	r3, [r7, #12]
 3793 0146 03F5C853 		add	r3, r3, #6400
 3794 014a 0433     		adds	r3, r3, #4
 3795 014c 1A60     		str	r2, [r3]
 826:STM32F10x_Speex_Lib/libspeex/jitter.c ****          jitter->subwindow_size = jitter->window_size/MAX_BUFFERS;
 3796              		.loc 2 826 0
 3797 014e FB68     		ldr	r3, [r7, #12]
 3798 0150 03F5C853 		add	r3, r3, #6400
 3799 0154 0433     		adds	r3, r3, #4
 3800 0156 1B68     		ldr	r3, [r3]
 3801 0158 174A     		ldr	r2, .L201
 3802 015a 82FB0312 		smull	r1, r2, r2, r3
 3803 015e DB17     		asrs	r3, r3, #31
 3804 0160 D21A     		subs	r2, r2, r3
 3805 0162 FB68     		ldr	r3, [r7, #12]
 3806 0164 03F5C853 		add	r3, r3, #6400
 3807 0168 0833     		adds	r3, r3, #8
 3808 016a 1A60     		str	r2, [r3]
 827:STM32F10x_Speex_Lib/libspeex/jitter.c ****          break;
 3809              		.loc 2 827 0
 3810 016c 1EE0     		b	.L196
 3811              	.L193:
 828:STM32F10x_Speex_Lib/libspeex/jitter.c ****       case JITTER_BUFFER_GET_MAX_LATE_RATE:
 829:STM32F10x_Speex_Lib/libspeex/jitter.c ****          *(spx_int32_t*)ptr = jitter->max_late_rate;
 3812              		.loc 2 829 0
 3813 016e FB68     		ldr	r3, [r7, #12]
 3814 0170 03F5C853 		add	r3, r3, #6400
 3815 0174 0C33     		adds	r3, r3, #12
 3816 0176 1A68     		ldr	r2, [r3]
 3817 0178 7B68     		ldr	r3, [r7, #4]
 3818 017a 1A60     		str	r2, [r3]
 830:STM32F10x_Speex_Lib/libspeex/jitter.c ****          break;
 3819              		.loc 2 830 0
 3820 017c 16E0     		b	.L196
 3821              	.L194:
 831:STM32F10x_Speex_Lib/libspeex/jitter.c ****       case JITTER_BUFFER_SET_LATE_COST:
 832:STM32F10x_Speex_Lib/libspeex/jitter.c ****          jitter->latency_tradeoff = *(spx_int32_t*)ptr;
 3822              		.loc 2 832 0
 3823 017e 7B68     		ldr	r3, [r7, #4]
 3824 0180 1A68     		ldr	r2, [r3]
 3825 0182 FB68     		ldr	r3, [r7, #12]
 3826 0184 03F5C853 		add	r3, r3, #6400
 3827 0188 1033     		adds	r3, r3, #16
 3828 018a 1A60     		str	r2, [r3]
 833:STM32F10x_Speex_Lib/libspeex/jitter.c ****          break;
 3829              		.loc 2 833 0
 3830 018c 0EE0     		b	.L196
 3831              	.L195:
 834:STM32F10x_Speex_Lib/libspeex/jitter.c ****       case JITTER_BUFFER_GET_LATE_COST:
 835:STM32F10x_Speex_Lib/libspeex/jitter.c ****          *(spx_int32_t*)ptr = jitter->latency_tradeoff;
 3832              		.loc 2 835 0
 3833 018e FB68     		ldr	r3, [r7, #12]
 3834 0190 03F5C853 		add	r3, r3, #6400
 3835 0194 1033     		adds	r3, r3, #16
 3836 0196 1A68     		ldr	r2, [r3]
 3837 0198 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 86


 3838 019a 1A60     		str	r2, [r3]
 836:STM32F10x_Speex_Lib/libspeex/jitter.c ****          break;
 3839              		.loc 2 836 0
 3840 019c 06E0     		b	.L196
 3841              	.L181:
 837:STM32F10x_Speex_Lib/libspeex/jitter.c ****       default:
 838:STM32F10x_Speex_Lib/libspeex/jitter.c ****          speex_warning_int("Unknown jitter_buffer_ctl request: ", request);
 3842              		.loc 2 838 0
 3843 019e B968     		ldr	r1, [r7, #8]
 3844 01a0 0648     		ldr	r0, .L201+4
 3845 01a2 FFF7FEFF 		bl	speex_warning_int
 839:STM32F10x_Speex_Lib/libspeex/jitter.c ****          return -1;
 3846              		.loc 2 839 0
 3847 01a6 4FF0FF33 		mov	r3, #-1
 3848 01aa 00E0     		b	.L200
 3849              	.L196:
 840:STM32F10x_Speex_Lib/libspeex/jitter.c ****    }
 841:STM32F10x_Speex_Lib/libspeex/jitter.c ****    return 0;
 3850              		.loc 2 841 0
 3851 01ac 0023     		movs	r3, #0
 3852              	.L200:
 842:STM32F10x_Speex_Lib/libspeex/jitter.c **** }
 3853              		.loc 2 842 0
 3854 01ae 1846     		mov	r0, r3
 3855 01b0 1837     		adds	r7, r7, #24
 3856              	.LCFI102:
 3857              		.cfi_def_cfa_offset 8
 3858 01b2 BD46     		mov	sp, r7
 3859              	.LCFI103:
 3860              		.cfi_def_cfa_register 13
 3861              		@ sp needed
 3862 01b4 80BD     		pop	{r7, pc}
 3863              	.L202:
 3864 01b6 00BF     		.align	2
 3865              	.L201:
 3866 01b8 56555555 		.word	1431655766
 3867 01bc 20010000 		.word	.LC5
 3868              		.cfi_endproc
 3869              	.LFE25:
 3871              		.text
 3872              	.Letext0:
 3873              		.file 3 "Inc/speex/speex_config_types.h"
 3874              		.file 4 "Inc/speex/speex_jitter.h"
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 87


DEFINED SYMBOLS
                            *ABS*:0000000000000000 jitter.c
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:20     .text.speex_alloc:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:24     .text.speex_alloc:0000000000000000 speex_alloc
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:63     .text.speex_free:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:67     .text.speex_free:0000000000000000 speex_free
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:102    .text.speex_warning_int:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:106    .text.speex_warning_int:0000000000000000 speex_warning_int
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:143    .text.tb_init:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:147    .text.tb_init:0000000000000000 tb_init
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:192    .rodata:0000000000000000 $d
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:200    .text.tb_add:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:204    .text.tb_add:0000000000000000 tb_add
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:392    .text.tb_add:000000000000011c $d
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:403    .text.compute_opt_delay:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:407    .text.compute_opt_delay:0000000000000000 compute_opt_delay
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:821    .text.compute_opt_delay:00000000000002c8 $d
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:827    .text.jitter_buffer_init:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:832    .text.jitter_buffer_init:0000000000000000 jitter_buffer_init
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:3601   .text.jitter_buffer_ctl:0000000000000000 jitter_buffer_ctl
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:960    .text.jitter_buffer_reset:0000000000000000 jitter_buffer_reset
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:955    .text.jitter_buffer_reset:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:1138   .text.jitter_buffer_destroy:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:1143   .text.jitter_buffer_destroy:0000000000000000 jitter_buffer_destroy
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:1181   .text.update_timings:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:1185   .text.update_timings:0000000000000000 update_timings
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:1300   .text.update_timings:00000000000000b0 $d
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:1305   .text.shift_timings:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:1309   .text.shift_timings:0000000000000000 shift_timings
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:1397   .text.jitter_buffer_put:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:1402   .text.jitter_buffer_put:0000000000000000 jitter_buffer_put
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:1938   .text.jitter_buffer_get:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:1943   .text.jitter_buffer_get:0000000000000000 jitter_buffer_get
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:2987   .text.jitter_buffer_get:00000000000006e4 $d
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:2993   .text.jitter_buffer_get_another:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:2998   .text.jitter_buffer_get_another:0000000000000000 jitter_buffer_get_another
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:3240   .text._jitter_buffer_update_delay:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:3244   .text._jitter_buffer_update_delay:0000000000000000 _jitter_buffer_update_delay
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:3333   .text.jitter_buffer_update_delay:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:3338   .text.jitter_buffer_update_delay:0000000000000000 jitter_buffer_update_delay
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:3384   .text.jitter_buffer_get_pointer_timestamp:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:3389   .text.jitter_buffer_get_pointer_timestamp:0000000000000000 jitter_buffer_get_pointer_timestamp
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:3433   .text.jitter_buffer_tick:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:3438   .text.jitter_buffer_tick:0000000000000000 jitter_buffer_tick
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:3513   .text.jitter_buffer_tick:000000000000005c $d
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:3518   .text.jitter_buffer_remaining_span:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:3523   .text.jitter_buffer_remaining_span:0000000000000000 jitter_buffer_remaining_span
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:3587   .text.jitter_buffer_remaining_span:000000000000004c $d
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:3596   .text.jitter_buffer_ctl:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:3629   .text.jitter_buffer_ctl:000000000000001c $d
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:3643   .text.jitter_buffer_ctl:0000000000000054 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s:3866   .text.jitter_buffer_ctl:00000000000001b8 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
calloc
free
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccrjLYLF.s 			page 88


_speex_fatal
memmove
__aeabi_i2f
__aeabi_fmul
__aeabi_fdiv
__aeabi_fadd
__aeabi_f2iz
