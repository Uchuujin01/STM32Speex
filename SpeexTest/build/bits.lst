ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"bits.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.speex_alloc,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	speex_alloc:
  25              	.LFB1:
  26              		.file 1 "STM32F10x_Speex_Lib/libspeex/os_support.h"
   1:STM32F10x_Speex_Lib/libspeex/os_support.h **** /* Copyright (C) 2007 Jean-Marc Valin
   2:STM32F10x_Speex_Lib/libspeex/os_support.h ****       
   3:STM32F10x_Speex_Lib/libspeex/os_support.h ****    File: os_support.h
   4:STM32F10x_Speex_Lib/libspeex/os_support.h ****    This is the (tiny) OS abstraction layer. Aside from math.h, this is the
   5:STM32F10x_Speex_Lib/libspeex/os_support.h ****    only place where system headers are allowed.
   6:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
   7:STM32F10x_Speex_Lib/libspeex/os_support.h ****    Redistribution and use in source and binary forms, with or without
   8:STM32F10x_Speex_Lib/libspeex/os_support.h ****    modification, are permitted provided that the following conditions are
   9:STM32F10x_Speex_Lib/libspeex/os_support.h ****    met:
  10:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
  11:STM32F10x_Speex_Lib/libspeex/os_support.h ****    1. Redistributions of source code must retain the above copyright notice,
  12:STM32F10x_Speex_Lib/libspeex/os_support.h ****    this list of conditions and the following disclaimer.
  13:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
  14:STM32F10x_Speex_Lib/libspeex/os_support.h ****    2. Redistributions in binary form must reproduce the above copyright
  15:STM32F10x_Speex_Lib/libspeex/os_support.h ****    notice, this list of conditions and the following disclaimer in the
  16:STM32F10x_Speex_Lib/libspeex/os_support.h ****    documentation and/or other materials provided with the distribution.
  17:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
  18:STM32F10x_Speex_Lib/libspeex/os_support.h ****    3. The name of the author may not be used to endorse or promote products
  19:STM32F10x_Speex_Lib/libspeex/os_support.h ****    derived from this software without specific prior written permission.
  20:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
  21:STM32F10x_Speex_Lib/libspeex/os_support.h ****    THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
  22:STM32F10x_Speex_Lib/libspeex/os_support.h ****    IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
  23:STM32F10x_Speex_Lib/libspeex/os_support.h ****    OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  24:STM32F10x_Speex_Lib/libspeex/os_support.h ****    DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
  25:STM32F10x_Speex_Lib/libspeex/os_support.h ****    INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  26:STM32F10x_Speex_Lib/libspeex/os_support.h ****    (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:STM32F10x_Speex_Lib/libspeex/os_support.h ****    SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  28:STM32F10x_Speex_Lib/libspeex/os_support.h ****    HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  29:STM32F10x_Speex_Lib/libspeex/os_support.h ****    STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  30:STM32F10x_Speex_Lib/libspeex/os_support.h ****    ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:STM32F10x_Speex_Lib/libspeex/os_support.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:STM32F10x_Speex_Lib/libspeex/os_support.h **** */
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 2


  33:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
  34:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef OS_SUPPORT_H
  35:STM32F10x_Speex_Lib/libspeex/os_support.h **** #define OS_SUPPORT_H
  36:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
  37:STM32F10x_Speex_Lib/libspeex/os_support.h **** #include <string.h>
  38:STM32F10x_Speex_Lib/libspeex/os_support.h **** #include <stdio.h>
  39:STM32F10x_Speex_Lib/libspeex/os_support.h **** #include <stdlib.h>
  40:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
  41:STM32F10x_Speex_Lib/libspeex/os_support.h **** // #ifdef HAVE_CONFIG_H
  42:STM32F10x_Speex_Lib/libspeex/os_support.h **** #include "config.h"
  43:STM32F10x_Speex_Lib/libspeex/os_support.h **** // #endif
  44:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifdef OS_SUPPORT_CUSTOM
  45:STM32F10x_Speex_Lib/libspeex/os_support.h **** #include "os_support_custom.h"
  46:STM32F10x_Speex_Lib/libspeex/os_support.h **** #endif
  47:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
  48:STM32F10x_Speex_Lib/libspeex/os_support.h **** /** Speex wrapper for calloc. To do your own dynamic allocation, all you need to do is replace this
  49:STM32F10x_Speex_Lib/libspeex/os_support.h ****     NOTE: speex_alloc needs to CLEAR THE MEMORY */
  50:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef OVERRIDE_SPEEX_ALLOC
  51:STM32F10x_Speex_Lib/libspeex/os_support.h **** static inline void *speex_alloc (int size)
  52:STM32F10x_Speex_Lib/libspeex/os_support.h **** {
  27              		.loc 1 52 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
  53:STM32F10x_Speex_Lib/libspeex/os_support.h ****    /* WARNING: this is not equivalent to malloc(). If you want to use malloc() 
  54:STM32F10x_Speex_Lib/libspeex/os_support.h ****       or your own allocator, YOU NEED TO CLEAR THE MEMORY ALLOCATED. Otherwise
  55:STM32F10x_Speex_Lib/libspeex/os_support.h ****       you will experience strange bugs */
  56:STM32F10x_Speex_Lib/libspeex/os_support.h ****    return calloc(size,1);
  43              		.loc 1 56 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 0121     		movs	r1, #1
  46 000c 1846     		mov	r0, r3
  47 000e FFF7FEFF 		bl	calloc
  48 0012 0346     		mov	r3, r0
  57:STM32F10x_Speex_Lib/libspeex/os_support.h **** }
  49              		.loc 1 57 0
  50 0014 1846     		mov	r0, r3
  51 0016 0837     		adds	r7, r7, #8
  52              	.LCFI3:
  53              		.cfi_def_cfa_offset 8
  54 0018 BD46     		mov	sp, r7
  55              	.LCFI4:
  56              		.cfi_def_cfa_register 13
  57              		@ sp needed
  58 001a 80BD     		pop	{r7, pc}
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 3


  59              		.cfi_endproc
  60              	.LFE1:
  62              		.section	.text.speex_realloc,"ax",%progbits
  63              		.align	2
  64              		.thumb
  65              		.thumb_func
  67              	speex_realloc:
  68              	.LFB3:
  58:STM32F10x_Speex_Lib/libspeex/os_support.h **** #endif
  59:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
  60:STM32F10x_Speex_Lib/libspeex/os_support.h **** /** Same as speex_alloc, except that the area is only needed inside a Speex call (might cause probl
  61:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef OVERRIDE_SPEEX_ALLOC_SCRATCH
  62:STM32F10x_Speex_Lib/libspeex/os_support.h **** static inline void *speex_alloc_scratch (int size)
  63:STM32F10x_Speex_Lib/libspeex/os_support.h **** {
  64:STM32F10x_Speex_Lib/libspeex/os_support.h ****    /* Scratch space doesn't need to be cleared */
  65:STM32F10x_Speex_Lib/libspeex/os_support.h ****    return calloc(size,1);
  66:STM32F10x_Speex_Lib/libspeex/os_support.h **** }
  67:STM32F10x_Speex_Lib/libspeex/os_support.h **** #endif
  68:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
  69:STM32F10x_Speex_Lib/libspeex/os_support.h **** /** Speex wrapper for realloc. To do your own dynamic allocation, all you need to do is replace thi
  70:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef OVERRIDE_SPEEX_REALLOC
  71:STM32F10x_Speex_Lib/libspeex/os_support.h **** static inline void *speex_realloc (void *ptr, int size)
  72:STM32F10x_Speex_Lib/libspeex/os_support.h **** {
  69              		.loc 1 72 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 8
  72              		@ frame_needed = 1, uses_anonymous_args = 0
  73 0000 80B5     		push	{r7, lr}
  74              	.LCFI5:
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 7, -8
  77              		.cfi_offset 14, -4
  78 0002 82B0     		sub	sp, sp, #8
  79              	.LCFI6:
  80              		.cfi_def_cfa_offset 16
  81 0004 00AF     		add	r7, sp, #0
  82              	.LCFI7:
  83              		.cfi_def_cfa_register 7
  84 0006 7860     		str	r0, [r7, #4]
  85 0008 3960     		str	r1, [r7]
  73:STM32F10x_Speex_Lib/libspeex/os_support.h ****    return realloc(ptr, size);
  86              		.loc 1 73 0
  87 000a 3B68     		ldr	r3, [r7]
  88 000c 1946     		mov	r1, r3
  89 000e 7868     		ldr	r0, [r7, #4]
  90 0010 FFF7FEFF 		bl	realloc
  91 0014 0346     		mov	r3, r0
  74:STM32F10x_Speex_Lib/libspeex/os_support.h **** }
  92              		.loc 1 74 0
  93 0016 1846     		mov	r0, r3
  94 0018 0837     		adds	r7, r7, #8
  95              	.LCFI8:
  96              		.cfi_def_cfa_offset 8
  97 001a BD46     		mov	sp, r7
  98              	.LCFI9:
  99              		.cfi_def_cfa_register 13
 100              		@ sp needed
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 4


 101 001c 80BD     		pop	{r7, pc}
 102              		.cfi_endproc
 103              	.LFE3:
 105 001e 00BF     		.section	.text.speex_free,"ax",%progbits
 106              		.align	2
 107              		.thumb
 108              		.thumb_func
 110              	speex_free:
 111              	.LFB4:
  75:STM32F10x_Speex_Lib/libspeex/os_support.h **** #endif
  76:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
  77:STM32F10x_Speex_Lib/libspeex/os_support.h **** /** Speex wrapper for calloc. To do your own dynamic allocation, all you need to do is replace this
  78:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef OVERRIDE_SPEEX_FREE
  79:STM32F10x_Speex_Lib/libspeex/os_support.h **** static inline void speex_free (void *ptr)
  80:STM32F10x_Speex_Lib/libspeex/os_support.h **** {
 112              		.loc 1 80 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 8
 115              		@ frame_needed = 1, uses_anonymous_args = 0
 116 0000 80B5     		push	{r7, lr}
 117              	.LCFI10:
 118              		.cfi_def_cfa_offset 8
 119              		.cfi_offset 7, -8
 120              		.cfi_offset 14, -4
 121 0002 82B0     		sub	sp, sp, #8
 122              	.LCFI11:
 123              		.cfi_def_cfa_offset 16
 124 0004 00AF     		add	r7, sp, #0
 125              	.LCFI12:
 126              		.cfi_def_cfa_register 7
 127 0006 7860     		str	r0, [r7, #4]
  81:STM32F10x_Speex_Lib/libspeex/os_support.h ****    free(ptr);
 128              		.loc 1 81 0
 129 0008 7868     		ldr	r0, [r7, #4]
 130 000a FFF7FEFF 		bl	free
  82:STM32F10x_Speex_Lib/libspeex/os_support.h **** }
 131              		.loc 1 82 0
 132 000e 00BF     		nop
 133 0010 0837     		adds	r7, r7, #8
 134              	.LCFI13:
 135              		.cfi_def_cfa_offset 8
 136 0012 BD46     		mov	sp, r7
 137              	.LCFI14:
 138              		.cfi_def_cfa_register 13
 139              		@ sp needed
 140 0014 80BD     		pop	{r7, pc}
 141              		.cfi_endproc
 142              	.LFE4:
 144 0016 00BF     		.section	.text.speex_warning,"ax",%progbits
 145              		.align	2
 146              		.thumb
 147              		.thumb_func
 149              	speex_warning:
 150              	.LFB6:
  83:STM32F10x_Speex_Lib/libspeex/os_support.h **** #endif
  84:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
  85:STM32F10x_Speex_Lib/libspeex/os_support.h **** /** Same as speex_free, except that the area is only needed inside a Speex call (might cause proble
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 5


  86:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef OVERRIDE_SPEEX_FREE_SCRATCH
  87:STM32F10x_Speex_Lib/libspeex/os_support.h **** static inline void speex_free_scratch (void *ptr)
  88:STM32F10x_Speex_Lib/libspeex/os_support.h **** {
  89:STM32F10x_Speex_Lib/libspeex/os_support.h ****    free(ptr);
  90:STM32F10x_Speex_Lib/libspeex/os_support.h **** }
  91:STM32F10x_Speex_Lib/libspeex/os_support.h **** #endif
  92:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
  93:STM32F10x_Speex_Lib/libspeex/os_support.h **** /** Copy n bytes of memory from src to dst. The 0* term provides compile-time type checking  */
  94:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef OVERRIDE_SPEEX_COPY
  95:STM32F10x_Speex_Lib/libspeex/os_support.h **** #define SPEEX_COPY(dst, src, n) (memcpy((dst), (src), (n)*sizeof(*(dst)) + 0*((dst)-(src)) ))
  96:STM32F10x_Speex_Lib/libspeex/os_support.h **** #endif
  97:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
  98:STM32F10x_Speex_Lib/libspeex/os_support.h **** /** Copy n bytes of memory from src to dst, allowing overlapping regions. The 0* term 
  99:STM32F10x_Speex_Lib/libspeex/os_support.h ****     provides compile-time type checking */
 100:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef OVERRIDE_SPEEX_MOVE
 101:STM32F10x_Speex_Lib/libspeex/os_support.h **** #define SPEEX_MOVE(dst, src, n) (memmove((dst), (src), (n)*sizeof(*(dst)) + 0*((dst)-(src)) ))
 102:STM32F10x_Speex_Lib/libspeex/os_support.h **** #endif
 103:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
 104:STM32F10x_Speex_Lib/libspeex/os_support.h **** /** Set n bytes of memory to value of c, starting at address s */
 105:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef OVERRIDE_SPEEX_MEMSET
 106:STM32F10x_Speex_Lib/libspeex/os_support.h **** #define SPEEX_MEMSET(dst, c, n) (memset((dst), (c), (n)*sizeof(*(dst))))
 107:STM32F10x_Speex_Lib/libspeex/os_support.h **** #endif
 108:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
 109:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
 110:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef OVERRIDE_SPEEX_FATAL
 111:STM32F10x_Speex_Lib/libspeex/os_support.h **** static inline void _speex_fatal(const char *str, const char *file, int line)
 112:STM32F10x_Speex_Lib/libspeex/os_support.h **** {
 113:STM32F10x_Speex_Lib/libspeex/os_support.h ****    fprintf (stderr, "Fatal (internal) error in %s, line %d: %s\n", file, line, str);
 114:STM32F10x_Speex_Lib/libspeex/os_support.h ****    exit(1);
 115:STM32F10x_Speex_Lib/libspeex/os_support.h **** }
 116:STM32F10x_Speex_Lib/libspeex/os_support.h **** #endif
 117:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
 118:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef OVERRIDE_SPEEX_WARNING
 119:STM32F10x_Speex_Lib/libspeex/os_support.h **** static inline void speex_warning(const char *str)
 120:STM32F10x_Speex_Lib/libspeex/os_support.h **** {
 151              		.loc 1 120 0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 8
 154              		@ frame_needed = 1, uses_anonymous_args = 0
 155              		@ link register save eliminated.
 156 0000 80B4     		push	{r7}
 157              	.LCFI15:
 158              		.cfi_def_cfa_offset 4
 159              		.cfi_offset 7, -4
 160 0002 83B0     		sub	sp, sp, #12
 161              	.LCFI16:
 162              		.cfi_def_cfa_offset 16
 163 0004 00AF     		add	r7, sp, #0
 164              	.LCFI17:
 165              		.cfi_def_cfa_register 7
 166 0006 7860     		str	r0, [r7, #4]
 121:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef DISABLE_WARNINGS
 122:STM32F10x_Speex_Lib/libspeex/os_support.h ****    fprintf (stderr, "warning: %s\n", str);
 123:STM32F10x_Speex_Lib/libspeex/os_support.h **** #endif
 124:STM32F10x_Speex_Lib/libspeex/os_support.h **** }
 167              		.loc 1 124 0
 168 0008 00BF     		nop
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 6


 169 000a 0C37     		adds	r7, r7, #12
 170              	.LCFI18:
 171              		.cfi_def_cfa_offset 4
 172 000c BD46     		mov	sp, r7
 173              	.LCFI19:
 174              		.cfi_def_cfa_register 13
 175              		@ sp needed
 176 000e 80BC     		pop	{r7}
 177              	.LCFI20:
 178              		.cfi_restore 7
 179              		.cfi_def_cfa_offset 0
 180 0010 7047     		bx	lr
 181              		.cfi_endproc
 182              	.LFE6:
 184 0012 00BF     		.section	.text.speex_notify,"ax",%progbits
 185              		.align	2
 186              		.thumb
 187              		.thumb_func
 189              	speex_notify:
 190              	.LFB8:
 125:STM32F10x_Speex_Lib/libspeex/os_support.h **** #endif
 126:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
 127:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef OVERRIDE_SPEEX_WARNING_INT
 128:STM32F10x_Speex_Lib/libspeex/os_support.h **** static inline void speex_warning_int(const char *str, int val)
 129:STM32F10x_Speex_Lib/libspeex/os_support.h **** {
 130:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef DISABLE_WARNINGS
 131:STM32F10x_Speex_Lib/libspeex/os_support.h ****    fprintf (stderr, "warning: %s %d\n", str, val);
 132:STM32F10x_Speex_Lib/libspeex/os_support.h **** #endif
 133:STM32F10x_Speex_Lib/libspeex/os_support.h **** }
 134:STM32F10x_Speex_Lib/libspeex/os_support.h **** #endif
 135:STM32F10x_Speex_Lib/libspeex/os_support.h **** 
 136:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef OVERRIDE_SPEEX_NOTIFY
 137:STM32F10x_Speex_Lib/libspeex/os_support.h **** static inline void speex_notify(const char *str)
 138:STM32F10x_Speex_Lib/libspeex/os_support.h **** {
 191              		.loc 1 138 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 8
 194              		@ frame_needed = 1, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 196 0000 80B4     		push	{r7}
 197              	.LCFI21:
 198              		.cfi_def_cfa_offset 4
 199              		.cfi_offset 7, -4
 200 0002 83B0     		sub	sp, sp, #12
 201              	.LCFI22:
 202              		.cfi_def_cfa_offset 16
 203 0004 00AF     		add	r7, sp, #0
 204              	.LCFI23:
 205              		.cfi_def_cfa_register 7
 206 0006 7860     		str	r0, [r7, #4]
 139:STM32F10x_Speex_Lib/libspeex/os_support.h **** #ifndef DISABLE_NOTIFICATIONS
 140:STM32F10x_Speex_Lib/libspeex/os_support.h ****    fprintf (stderr, "notification: %s\n", str);
 141:STM32F10x_Speex_Lib/libspeex/os_support.h **** #endif
 142:STM32F10x_Speex_Lib/libspeex/os_support.h **** }
 207              		.loc 1 142 0
 208 0008 00BF     		nop
 209 000a 0C37     		adds	r7, r7, #12
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 7


 210              	.LCFI24:
 211              		.cfi_def_cfa_offset 4
 212 000c BD46     		mov	sp, r7
 213              	.LCFI25:
 214              		.cfi_def_cfa_register 13
 215              		@ sp needed
 216 000e 80BC     		pop	{r7}
 217              	.LCFI26:
 218              		.cfi_restore 7
 219              		.cfi_def_cfa_offset 0
 220 0010 7047     		bx	lr
 221              		.cfi_endproc
 222              	.LFE8:
 224 0012 00BF     		.section	.text.speex_bits_init,"ax",%progbits
 225              		.align	2
 226              		.global	speex_bits_init
 227              		.thumb
 228              		.thumb_func
 230              	speex_bits_init:
 231              	.LFB9:
 232              		.file 2 "STM32F10x_Speex_Lib/libspeex/bits.c"
   1:STM32F10x_Speex_Lib/libspeex/bits.c **** /* Copyright (C) 2002 Jean-Marc Valin 
   2:STM32F10x_Speex_Lib/libspeex/bits.c ****    File: speex_bits.c
   3:STM32F10x_Speex_Lib/libspeex/bits.c **** 
   4:STM32F10x_Speex_Lib/libspeex/bits.c ****    Handles bit packing/unpacking
   5:STM32F10x_Speex_Lib/libspeex/bits.c **** 
   6:STM32F10x_Speex_Lib/libspeex/bits.c ****    Redistribution and use in source and binary forms, with or without
   7:STM32F10x_Speex_Lib/libspeex/bits.c ****    modification, are permitted provided that the following conditions
   8:STM32F10x_Speex_Lib/libspeex/bits.c ****    are met:
   9:STM32F10x_Speex_Lib/libspeex/bits.c ****    
  10:STM32F10x_Speex_Lib/libspeex/bits.c ****    - Redistributions of source code must retain the above copyright
  11:STM32F10x_Speex_Lib/libspeex/bits.c ****    notice, this list of conditions and the following disclaimer.
  12:STM32F10x_Speex_Lib/libspeex/bits.c ****    
  13:STM32F10x_Speex_Lib/libspeex/bits.c ****    - Redistributions in binary form must reproduce the above copyright
  14:STM32F10x_Speex_Lib/libspeex/bits.c ****    notice, this list of conditions and the following disclaimer in the
  15:STM32F10x_Speex_Lib/libspeex/bits.c ****    documentation and/or other materials provided with the distribution.
  16:STM32F10x_Speex_Lib/libspeex/bits.c ****    
  17:STM32F10x_Speex_Lib/libspeex/bits.c ****    - Neither the name of the Xiph.org Foundation nor the names of its
  18:STM32F10x_Speex_Lib/libspeex/bits.c ****    contributors may be used to endorse or promote products derived from
  19:STM32F10x_Speex_Lib/libspeex/bits.c ****    this software without specific prior written permission.
  20:STM32F10x_Speex_Lib/libspeex/bits.c ****    
  21:STM32F10x_Speex_Lib/libspeex/bits.c ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:STM32F10x_Speex_Lib/libspeex/bits.c ****    ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:STM32F10x_Speex_Lib/libspeex/bits.c ****    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
  24:STM32F10x_Speex_Lib/libspeex/bits.c ****    A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR
  25:STM32F10x_Speex_Lib/libspeex/bits.c ****    CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  26:STM32F10x_Speex_Lib/libspeex/bits.c ****    EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
  27:STM32F10x_Speex_Lib/libspeex/bits.c ****    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
  28:STM32F10x_Speex_Lib/libspeex/bits.c ****    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  29:STM32F10x_Speex_Lib/libspeex/bits.c ****    LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  30:STM32F10x_Speex_Lib/libspeex/bits.c ****    NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  31:STM32F10x_Speex_Lib/libspeex/bits.c ****    SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:STM32F10x_Speex_Lib/libspeex/bits.c **** 
  33:STM32F10x_Speex_Lib/libspeex/bits.c **** */
  34:STM32F10x_Speex_Lib/libspeex/bits.c **** 
  35:STM32F10x_Speex_Lib/libspeex/bits.c **** //#ifdef HAVE_CONFIG_H
  36:STM32F10x_Speex_Lib/libspeex/bits.c **** #include "config.h"
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 8


  37:STM32F10x_Speex_Lib/libspeex/bits.c **** //#endif
  38:STM32F10x_Speex_Lib/libspeex/bits.c **** 
  39:STM32F10x_Speex_Lib/libspeex/bits.c **** #include <speex/speex_bits.h>
  40:STM32F10x_Speex_Lib/libspeex/bits.c **** #include "arch.h"
  41:STM32F10x_Speex_Lib/libspeex/bits.c **** #include "os_support.h"
  42:STM32F10x_Speex_Lib/libspeex/bits.c **** 
  43:STM32F10x_Speex_Lib/libspeex/bits.c **** /* Maximum size of the bit-stream (for fixed-size allocation) */
  44:STM32F10x_Speex_Lib/libspeex/bits.c **** #ifndef MAX_CHARS_PER_FRAME
  45:STM32F10x_Speex_Lib/libspeex/bits.c **** #define MAX_CHARS_PER_FRAME (2000/BYTES_PER_CHAR)
  46:STM32F10x_Speex_Lib/libspeex/bits.c **** #endif
  47:STM32F10x_Speex_Lib/libspeex/bits.c **** 
  48:STM32F10x_Speex_Lib/libspeex/bits.c **** EXPORT void speex_bits_init(SpeexBits *bits)
  49:STM32F10x_Speex_Lib/libspeex/bits.c **** {
 233              		.loc 2 49 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 8
 236              		@ frame_needed = 1, uses_anonymous_args = 0
 237 0000 80B5     		push	{r7, lr}
 238              	.LCFI27:
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 7, -8
 241              		.cfi_offset 14, -4
 242 0002 82B0     		sub	sp, sp, #8
 243              	.LCFI28:
 244              		.cfi_def_cfa_offset 16
 245 0004 00AF     		add	r7, sp, #0
 246              	.LCFI29:
 247              		.cfi_def_cfa_register 7
 248 0006 7860     		str	r0, [r7, #4]
  50:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->chars = (char*)speex_alloc(MAX_CHARS_PER_FRAME);
 249              		.loc 2 50 0
 250 0008 1420     		movs	r0, #20
 251 000a FFF7FEFF 		bl	speex_alloc
 252 000e 0246     		mov	r2, r0
 253 0010 7B68     		ldr	r3, [r7, #4]
 254 0012 1A60     		str	r2, [r3]
  51:STM32F10x_Speex_Lib/libspeex/bits.c ****    if (!bits->chars)
 255              		.loc 2 51 0
 256 0014 7B68     		ldr	r3, [r7, #4]
 257 0016 1B68     		ldr	r3, [r3]
 258 0018 002B     		cmp	r3, #0
 259 001a 09D0     		beq	.L11
  52:STM32F10x_Speex_Lib/libspeex/bits.c ****       return;
  53:STM32F10x_Speex_Lib/libspeex/bits.c **** 
  54:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->buf_size = MAX_CHARS_PER_FRAME;
 260              		.loc 2 54 0
 261 001c 7B68     		ldr	r3, [r7, #4]
 262 001e 1422     		movs	r2, #20
 263 0020 9A61     		str	r2, [r3, #24]
  55:STM32F10x_Speex_Lib/libspeex/bits.c **** 
  56:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->owner=1;
 264              		.loc 2 56 0
 265 0022 7B68     		ldr	r3, [r7, #4]
 266 0024 0122     		movs	r2, #1
 267 0026 1A61     		str	r2, [r3, #16]
  57:STM32F10x_Speex_Lib/libspeex/bits.c **** 
  58:STM32F10x_Speex_Lib/libspeex/bits.c ****    speex_bits_reset(bits);
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 9


 268              		.loc 2 58 0
 269 0028 7868     		ldr	r0, [r7, #4]
 270 002a FFF7FEFF 		bl	speex_bits_reset
 271 002e 00E0     		b	.L8
 272              	.L11:
  52:STM32F10x_Speex_Lib/libspeex/bits.c **** 
 273              		.loc 2 52 0
 274 0030 00BF     		nop
 275              	.L8:
  59:STM32F10x_Speex_Lib/libspeex/bits.c **** }
 276              		.loc 2 59 0
 277 0032 0837     		adds	r7, r7, #8
 278              	.LCFI30:
 279              		.cfi_def_cfa_offset 8
 280 0034 BD46     		mov	sp, r7
 281              	.LCFI31:
 282              		.cfi_def_cfa_register 13
 283              		@ sp needed
 284 0036 80BD     		pop	{r7, pc}
 285              		.cfi_endproc
 286              	.LFE9:
 288              		.section	.text.speex_bits_init_buffer,"ax",%progbits
 289              		.align	2
 290              		.global	speex_bits_init_buffer
 291              		.thumb
 292              		.thumb_func
 294              	speex_bits_init_buffer:
 295              	.LFB10:
  60:STM32F10x_Speex_Lib/libspeex/bits.c **** 
  61:STM32F10x_Speex_Lib/libspeex/bits.c **** EXPORT void speex_bits_init_buffer(SpeexBits *bits, void *buff, int buf_size)
  62:STM32F10x_Speex_Lib/libspeex/bits.c **** {
 296              		.loc 2 62 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 16
 299              		@ frame_needed = 1, uses_anonymous_args = 0
 300 0000 80B5     		push	{r7, lr}
 301              	.LCFI32:
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 7, -8
 304              		.cfi_offset 14, -4
 305 0002 84B0     		sub	sp, sp, #16
 306              	.LCFI33:
 307              		.cfi_def_cfa_offset 24
 308 0004 00AF     		add	r7, sp, #0
 309              	.LCFI34:
 310              		.cfi_def_cfa_register 7
 311 0006 F860     		str	r0, [r7, #12]
 312 0008 B960     		str	r1, [r7, #8]
 313 000a 7A60     		str	r2, [r7, #4]
  63:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->chars = (char*)buff;
 314              		.loc 2 63 0
 315 000c FB68     		ldr	r3, [r7, #12]
 316 000e BA68     		ldr	r2, [r7, #8]
 317 0010 1A60     		str	r2, [r3]
  64:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->buf_size = buf_size;
 318              		.loc 2 64 0
 319 0012 FB68     		ldr	r3, [r7, #12]
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 10


 320 0014 7A68     		ldr	r2, [r7, #4]
 321 0016 9A61     		str	r2, [r3, #24]
  65:STM32F10x_Speex_Lib/libspeex/bits.c **** 
  66:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->owner=0;
 322              		.loc 2 66 0
 323 0018 FB68     		ldr	r3, [r7, #12]
 324 001a 0022     		movs	r2, #0
 325 001c 1A61     		str	r2, [r3, #16]
  67:STM32F10x_Speex_Lib/libspeex/bits.c **** 
  68:STM32F10x_Speex_Lib/libspeex/bits.c ****    speex_bits_reset(bits);
 326              		.loc 2 68 0
 327 001e F868     		ldr	r0, [r7, #12]
 328 0020 FFF7FEFF 		bl	speex_bits_reset
  69:STM32F10x_Speex_Lib/libspeex/bits.c **** }
 329              		.loc 2 69 0
 330 0024 00BF     		nop
 331 0026 1037     		adds	r7, r7, #16
 332              	.LCFI35:
 333              		.cfi_def_cfa_offset 8
 334 0028 BD46     		mov	sp, r7
 335              	.LCFI36:
 336              		.cfi_def_cfa_register 13
 337              		@ sp needed
 338 002a 80BD     		pop	{r7, pc}
 339              		.cfi_endproc
 340              	.LFE10:
 342              		.section	.text.speex_bits_set_bit_buffer,"ax",%progbits
 343              		.align	2
 344              		.global	speex_bits_set_bit_buffer
 345              		.thumb
 346              		.thumb_func
 348              	speex_bits_set_bit_buffer:
 349              	.LFB11:
  70:STM32F10x_Speex_Lib/libspeex/bits.c **** 
  71:STM32F10x_Speex_Lib/libspeex/bits.c **** EXPORT void speex_bits_set_bit_buffer(SpeexBits *bits, void *buff, int buf_size)
  72:STM32F10x_Speex_Lib/libspeex/bits.c **** {
 350              		.loc 2 72 0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 16
 353              		@ frame_needed = 1, uses_anonymous_args = 0
 354              		@ link register save eliminated.
 355 0000 80B4     		push	{r7}
 356              	.LCFI37:
 357              		.cfi_def_cfa_offset 4
 358              		.cfi_offset 7, -4
 359 0002 85B0     		sub	sp, sp, #20
 360              	.LCFI38:
 361              		.cfi_def_cfa_offset 24
 362 0004 00AF     		add	r7, sp, #0
 363              	.LCFI39:
 364              		.cfi_def_cfa_register 7
 365 0006 F860     		str	r0, [r7, #12]
 366 0008 B960     		str	r1, [r7, #8]
 367 000a 7A60     		str	r2, [r7, #4]
  73:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->chars = (char*)buff;
 368              		.loc 2 73 0
 369 000c FB68     		ldr	r3, [r7, #12]
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 11


 370 000e BA68     		ldr	r2, [r7, #8]
 371 0010 1A60     		str	r2, [r3]
  74:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->buf_size = buf_size;
 372              		.loc 2 74 0
 373 0012 FB68     		ldr	r3, [r7, #12]
 374 0014 7A68     		ldr	r2, [r7, #4]
 375 0016 9A61     		str	r2, [r3, #24]
  75:STM32F10x_Speex_Lib/libspeex/bits.c **** 
  76:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->owner=0;
 376              		.loc 2 76 0
 377 0018 FB68     		ldr	r3, [r7, #12]
 378 001a 0022     		movs	r2, #0
 379 001c 1A61     		str	r2, [r3, #16]
  77:STM32F10x_Speex_Lib/libspeex/bits.c **** 
  78:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->nbBits=buf_size<<LOG2_BITS_PER_CHAR;
 380              		.loc 2 78 0
 381 001e 7B68     		ldr	r3, [r7, #4]
 382 0020 DA00     		lsls	r2, r3, #3
 383 0022 FB68     		ldr	r3, [r7, #12]
 384 0024 5A60     		str	r2, [r3, #4]
  79:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->charPtr=0;
 385              		.loc 2 79 0
 386 0026 FB68     		ldr	r3, [r7, #12]
 387 0028 0022     		movs	r2, #0
 388 002a 9A60     		str	r2, [r3, #8]
  80:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->bitPtr=0;
 389              		.loc 2 80 0
 390 002c FB68     		ldr	r3, [r7, #12]
 391 002e 0022     		movs	r2, #0
 392 0030 DA60     		str	r2, [r3, #12]
  81:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->overflow=0;
 393              		.loc 2 81 0
 394 0032 FB68     		ldr	r3, [r7, #12]
 395 0034 0022     		movs	r2, #0
 396 0036 5A61     		str	r2, [r3, #20]
  82:STM32F10x_Speex_Lib/libspeex/bits.c ****    
  83:STM32F10x_Speex_Lib/libspeex/bits.c **** }
 397              		.loc 2 83 0
 398 0038 00BF     		nop
 399 003a 1437     		adds	r7, r7, #20
 400              	.LCFI40:
 401              		.cfi_def_cfa_offset 4
 402 003c BD46     		mov	sp, r7
 403              	.LCFI41:
 404              		.cfi_def_cfa_register 13
 405              		@ sp needed
 406 003e 80BC     		pop	{r7}
 407              	.LCFI42:
 408              		.cfi_restore 7
 409              		.cfi_def_cfa_offset 0
 410 0040 7047     		bx	lr
 411              		.cfi_endproc
 412              	.LFE11:
 414 0042 00BF     		.section	.text.speex_bits_destroy,"ax",%progbits
 415              		.align	2
 416              		.global	speex_bits_destroy
 417              		.thumb
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 12


 418              		.thumb_func
 420              	speex_bits_destroy:
 421              	.LFB12:
  84:STM32F10x_Speex_Lib/libspeex/bits.c **** 
  85:STM32F10x_Speex_Lib/libspeex/bits.c **** EXPORT void speex_bits_destroy(SpeexBits *bits)
  86:STM32F10x_Speex_Lib/libspeex/bits.c **** {
 422              		.loc 2 86 0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 8
 425              		@ frame_needed = 1, uses_anonymous_args = 0
 426 0000 80B5     		push	{r7, lr}
 427              	.LCFI43:
 428              		.cfi_def_cfa_offset 8
 429              		.cfi_offset 7, -8
 430              		.cfi_offset 14, -4
 431 0002 82B0     		sub	sp, sp, #8
 432              	.LCFI44:
 433              		.cfi_def_cfa_offset 16
 434 0004 00AF     		add	r7, sp, #0
 435              	.LCFI45:
 436              		.cfi_def_cfa_register 7
 437 0006 7860     		str	r0, [r7, #4]
  87:STM32F10x_Speex_Lib/libspeex/bits.c ****    if (bits->owner)
 438              		.loc 2 87 0
 439 0008 7B68     		ldr	r3, [r7, #4]
 440 000a 1B69     		ldr	r3, [r3, #16]
 441 000c 002B     		cmp	r3, #0
 442 000e 04D0     		beq	.L16
  88:STM32F10x_Speex_Lib/libspeex/bits.c ****       speex_free(bits->chars);
 443              		.loc 2 88 0
 444 0010 7B68     		ldr	r3, [r7, #4]
 445 0012 1B68     		ldr	r3, [r3]
 446 0014 1846     		mov	r0, r3
 447 0016 FFF7FEFF 		bl	speex_free
 448              	.L16:
  89:STM32F10x_Speex_Lib/libspeex/bits.c ****    /* Will do something once the allocation is dynamic */
  90:STM32F10x_Speex_Lib/libspeex/bits.c **** }
 449              		.loc 2 90 0
 450 001a 00BF     		nop
 451 001c 0837     		adds	r7, r7, #8
 452              	.LCFI46:
 453              		.cfi_def_cfa_offset 8
 454 001e BD46     		mov	sp, r7
 455              	.LCFI47:
 456              		.cfi_def_cfa_register 13
 457              		@ sp needed
 458 0020 80BD     		pop	{r7, pc}
 459              		.cfi_endproc
 460              	.LFE12:
 462 0022 00BF     		.section	.text.speex_bits_reset,"ax",%progbits
 463              		.align	2
 464              		.global	speex_bits_reset
 465              		.thumb
 466              		.thumb_func
 468              	speex_bits_reset:
 469              	.LFB13:
  91:STM32F10x_Speex_Lib/libspeex/bits.c **** 
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 13


  92:STM32F10x_Speex_Lib/libspeex/bits.c **** EXPORT void speex_bits_reset(SpeexBits *bits)
  93:STM32F10x_Speex_Lib/libspeex/bits.c **** {
 470              		.loc 2 93 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 8
 473              		@ frame_needed = 1, uses_anonymous_args = 0
 474              		@ link register save eliminated.
 475 0000 80B4     		push	{r7}
 476              	.LCFI48:
 477              		.cfi_def_cfa_offset 4
 478              		.cfi_offset 7, -4
 479 0002 83B0     		sub	sp, sp, #12
 480              	.LCFI49:
 481              		.cfi_def_cfa_offset 16
 482 0004 00AF     		add	r7, sp, #0
 483              	.LCFI50:
 484              		.cfi_def_cfa_register 7
 485 0006 7860     		str	r0, [r7, #4]
  94:STM32F10x_Speex_Lib/libspeex/bits.c ****    /* We only need to clear the first byte now */
  95:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->chars[0]=0;
 486              		.loc 2 95 0
 487 0008 7B68     		ldr	r3, [r7, #4]
 488 000a 1B68     		ldr	r3, [r3]
 489 000c 0022     		movs	r2, #0
 490 000e 1A70     		strb	r2, [r3]
  96:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->nbBits=0;
 491              		.loc 2 96 0
 492 0010 7B68     		ldr	r3, [r7, #4]
 493 0012 0022     		movs	r2, #0
 494 0014 5A60     		str	r2, [r3, #4]
  97:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->charPtr=0;
 495              		.loc 2 97 0
 496 0016 7B68     		ldr	r3, [r7, #4]
 497 0018 0022     		movs	r2, #0
 498 001a 9A60     		str	r2, [r3, #8]
  98:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->bitPtr=0;
 499              		.loc 2 98 0
 500 001c 7B68     		ldr	r3, [r7, #4]
 501 001e 0022     		movs	r2, #0
 502 0020 DA60     		str	r2, [r3, #12]
  99:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->overflow=0;
 503              		.loc 2 99 0
 504 0022 7B68     		ldr	r3, [r7, #4]
 505 0024 0022     		movs	r2, #0
 506 0026 5A61     		str	r2, [r3, #20]
 100:STM32F10x_Speex_Lib/libspeex/bits.c **** }
 507              		.loc 2 100 0
 508 0028 00BF     		nop
 509 002a 0C37     		adds	r7, r7, #12
 510              	.LCFI51:
 511              		.cfi_def_cfa_offset 4
 512 002c BD46     		mov	sp, r7
 513              	.LCFI52:
 514              		.cfi_def_cfa_register 13
 515              		@ sp needed
 516 002e 80BC     		pop	{r7}
 517              	.LCFI53:
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 14


 518              		.cfi_restore 7
 519              		.cfi_def_cfa_offset 0
 520 0030 7047     		bx	lr
 521              		.cfi_endproc
 522              	.LFE13:
 524 0032 00BF     		.section	.text.speex_bits_rewind,"ax",%progbits
 525              		.align	2
 526              		.global	speex_bits_rewind
 527              		.thumb
 528              		.thumb_func
 530              	speex_bits_rewind:
 531              	.LFB14:
 101:STM32F10x_Speex_Lib/libspeex/bits.c **** 
 102:STM32F10x_Speex_Lib/libspeex/bits.c **** EXPORT void speex_bits_rewind(SpeexBits *bits)
 103:STM32F10x_Speex_Lib/libspeex/bits.c **** {
 532              		.loc 2 103 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 8
 535              		@ frame_needed = 1, uses_anonymous_args = 0
 536              		@ link register save eliminated.
 537 0000 80B4     		push	{r7}
 538              	.LCFI54:
 539              		.cfi_def_cfa_offset 4
 540              		.cfi_offset 7, -4
 541 0002 83B0     		sub	sp, sp, #12
 542              	.LCFI55:
 543              		.cfi_def_cfa_offset 16
 544 0004 00AF     		add	r7, sp, #0
 545              	.LCFI56:
 546              		.cfi_def_cfa_register 7
 547 0006 7860     		str	r0, [r7, #4]
 104:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->charPtr=0;
 548              		.loc 2 104 0
 549 0008 7B68     		ldr	r3, [r7, #4]
 550 000a 0022     		movs	r2, #0
 551 000c 9A60     		str	r2, [r3, #8]
 105:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->bitPtr=0;
 552              		.loc 2 105 0
 553 000e 7B68     		ldr	r3, [r7, #4]
 554 0010 0022     		movs	r2, #0
 555 0012 DA60     		str	r2, [r3, #12]
 106:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->overflow=0;
 556              		.loc 2 106 0
 557 0014 7B68     		ldr	r3, [r7, #4]
 558 0016 0022     		movs	r2, #0
 559 0018 5A61     		str	r2, [r3, #20]
 107:STM32F10x_Speex_Lib/libspeex/bits.c **** }
 560              		.loc 2 107 0
 561 001a 00BF     		nop
 562 001c 0C37     		adds	r7, r7, #12
 563              	.LCFI57:
 564              		.cfi_def_cfa_offset 4
 565 001e BD46     		mov	sp, r7
 566              	.LCFI58:
 567              		.cfi_def_cfa_register 13
 568              		@ sp needed
 569 0020 80BC     		pop	{r7}
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 15


 570              	.LCFI59:
 571              		.cfi_restore 7
 572              		.cfi_def_cfa_offset 0
 573 0022 7047     		bx	lr
 574              		.cfi_endproc
 575              	.LFE14:
 577              		.section	.rodata
 578              		.align	2
 579              	.LC0:
 580 0000 5061636B 		.ascii	"Packet is larger than allocated buffer\000"
 580      65742069 
 580      73206C61 
 580      72676572 
 580      20746861 
 581 0027 00       		.align	2
 582              	.LC1:
 583 0028 436F756C 		.ascii	"Could not resize input buffer: truncating input\000"
 583      64206E6F 
 583      74207265 
 583      73697A65 
 583      20696E70 
 584              		.align	2
 585              	.LC2:
 586 0058 446F206E 		.ascii	"Do not own input buffer: truncating oversize input\000"
 586      6F74206F 
 586      776E2069 
 586      6E707574 
 586      20627566 
 587              		.section	.text.speex_bits_read_from,"ax",%progbits
 588              		.align	2
 589              		.global	speex_bits_read_from
 590              		.thumb
 591              		.thumb_func
 593              	speex_bits_read_from:
 594              	.LFB15:
 108:STM32F10x_Speex_Lib/libspeex/bits.c **** 
 109:STM32F10x_Speex_Lib/libspeex/bits.c **** EXPORT void speex_bits_read_from(SpeexBits *bits, char *chars, int len)
 110:STM32F10x_Speex_Lib/libspeex/bits.c **** {
 595              		.loc 2 110 0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 32
 598              		@ frame_needed = 1, uses_anonymous_args = 0
 599 0000 80B5     		push	{r7, lr}
 600              	.LCFI60:
 601              		.cfi_def_cfa_offset 8
 602              		.cfi_offset 7, -8
 603              		.cfi_offset 14, -4
 604 0002 88B0     		sub	sp, sp, #32
 605              	.LCFI61:
 606              		.cfi_def_cfa_offset 40
 607 0004 00AF     		add	r7, sp, #0
 608              	.LCFI62:
 609              		.cfi_def_cfa_register 7
 610 0006 F860     		str	r0, [r7, #12]
 611 0008 B960     		str	r1, [r7, #8]
 612 000a 7A60     		str	r2, [r7, #4]
 111:STM32F10x_Speex_Lib/libspeex/bits.c ****    int i;
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 16


 112:STM32F10x_Speex_Lib/libspeex/bits.c ****    int nchars = len / BYTES_PER_CHAR;
 613              		.loc 2 112 0
 614 000c 7B68     		ldr	r3, [r7, #4]
 615 000e BB61     		str	r3, [r7, #24]
 113:STM32F10x_Speex_Lib/libspeex/bits.c ****    if (nchars > bits->buf_size)
 616              		.loc 2 113 0
 617 0010 FB68     		ldr	r3, [r7, #12]
 618 0012 9A69     		ldr	r2, [r3, #24]
 619 0014 BB69     		ldr	r3, [r7, #24]
 620 0016 9A42     		cmp	r2, r3
 621 0018 24DA     		bge	.L20
 114:STM32F10x_Speex_Lib/libspeex/bits.c ****    {
 115:STM32F10x_Speex_Lib/libspeex/bits.c ****       speex_notify("Packet is larger than allocated buffer");
 622              		.loc 2 115 0
 623 001a 2448     		ldr	r0, .L26
 624 001c FFF7FEFF 		bl	speex_notify
 116:STM32F10x_Speex_Lib/libspeex/bits.c ****       if (bits->owner)
 625              		.loc 2 116 0
 626 0020 FB68     		ldr	r3, [r7, #12]
 627 0022 1B69     		ldr	r3, [r3, #16]
 628 0024 002B     		cmp	r3, #0
 629 0026 17D0     		beq	.L21
 630              	.LBB2:
 117:STM32F10x_Speex_Lib/libspeex/bits.c ****       {
 118:STM32F10x_Speex_Lib/libspeex/bits.c ****          char *tmp = (char*)speex_realloc(bits->chars, nchars);
 631              		.loc 2 118 0
 632 0028 FB68     		ldr	r3, [r7, #12]
 633 002a 1B68     		ldr	r3, [r3]
 634 002c B969     		ldr	r1, [r7, #24]
 635 002e 1846     		mov	r0, r3
 636 0030 FFF7FEFF 		bl	speex_realloc
 637 0034 7861     		str	r0, [r7, #20]
 119:STM32F10x_Speex_Lib/libspeex/bits.c ****          if (tmp)
 638              		.loc 2 119 0
 639 0036 7B69     		ldr	r3, [r7, #20]
 640 0038 002B     		cmp	r3, #0
 641 003a 06D0     		beq	.L22
 120:STM32F10x_Speex_Lib/libspeex/bits.c ****          {
 121:STM32F10x_Speex_Lib/libspeex/bits.c ****             bits->buf_size=nchars;
 642              		.loc 2 121 0
 643 003c FB68     		ldr	r3, [r7, #12]
 644 003e BA69     		ldr	r2, [r7, #24]
 645 0040 9A61     		str	r2, [r3, #24]
 122:STM32F10x_Speex_Lib/libspeex/bits.c ****             bits->chars=tmp;
 646              		.loc 2 122 0
 647 0042 FB68     		ldr	r3, [r7, #12]
 648 0044 7A69     		ldr	r2, [r7, #20]
 649 0046 1A60     		str	r2, [r3]
 650 0048 0CE0     		b	.L20
 651              	.L22:
 123:STM32F10x_Speex_Lib/libspeex/bits.c ****          } else {
 124:STM32F10x_Speex_Lib/libspeex/bits.c ****             nchars=bits->buf_size;
 652              		.loc 2 124 0
 653 004a FB68     		ldr	r3, [r7, #12]
 654 004c 9B69     		ldr	r3, [r3, #24]
 655 004e BB61     		str	r3, [r7, #24]
 125:STM32F10x_Speex_Lib/libspeex/bits.c ****             speex_warning("Could not resize input buffer: truncating input");
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 17


 656              		.loc 2 125 0
 657 0050 1748     		ldr	r0, .L26+4
 658 0052 FFF7FEFF 		bl	speex_warning
 659 0056 05E0     		b	.L20
 660              	.L21:
 661              	.LBE2:
 126:STM32F10x_Speex_Lib/libspeex/bits.c ****          }
 127:STM32F10x_Speex_Lib/libspeex/bits.c ****       } else {
 128:STM32F10x_Speex_Lib/libspeex/bits.c ****          speex_warning("Do not own input buffer: truncating oversize input");
 662              		.loc 2 128 0
 663 0058 1648     		ldr	r0, .L26+8
 664 005a FFF7FEFF 		bl	speex_warning
 129:STM32F10x_Speex_Lib/libspeex/bits.c ****          nchars=bits->buf_size;
 665              		.loc 2 129 0
 666 005e FB68     		ldr	r3, [r7, #12]
 667 0060 9B69     		ldr	r3, [r3, #24]
 668 0062 BB61     		str	r3, [r7, #24]
 669              	.L20:
 130:STM32F10x_Speex_Lib/libspeex/bits.c ****       }
 131:STM32F10x_Speex_Lib/libspeex/bits.c ****    }
 132:STM32F10x_Speex_Lib/libspeex/bits.c **** #if (BYTES_PER_CHAR==2)
 133:STM32F10x_Speex_Lib/libspeex/bits.c **** /* Swap bytes to proper endian order (could be done externally) */
 134:STM32F10x_Speex_Lib/libspeex/bits.c **** #define HTOLS(A) ((((A) >> 8)&0xff)|(((A) & 0xff)<<8))
 135:STM32F10x_Speex_Lib/libspeex/bits.c **** #else
 136:STM32F10x_Speex_Lib/libspeex/bits.c **** #define HTOLS(A) (A)
 137:STM32F10x_Speex_Lib/libspeex/bits.c **** #endif
 138:STM32F10x_Speex_Lib/libspeex/bits.c ****    for (i=0;i<nchars;i++)
 670              		.loc 2 138 0
 671 0064 0023     		movs	r3, #0
 672 0066 FB61     		str	r3, [r7, #28]
 673 0068 0BE0     		b	.L24
 674              	.L25:
 139:STM32F10x_Speex_Lib/libspeex/bits.c ****       bits->chars[i]=HTOLS(chars[i]);
 675              		.loc 2 139 0 discriminator 3
 676 006a FB68     		ldr	r3, [r7, #12]
 677 006c 1A68     		ldr	r2, [r3]
 678 006e FB69     		ldr	r3, [r7, #28]
 679 0070 1344     		add	r3, r3, r2
 680 0072 FA69     		ldr	r2, [r7, #28]
 681 0074 B968     		ldr	r1, [r7, #8]
 682 0076 0A44     		add	r2, r2, r1
 683 0078 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 684 007a 1A70     		strb	r2, [r3]
 138:STM32F10x_Speex_Lib/libspeex/bits.c ****       bits->chars[i]=HTOLS(chars[i]);
 685              		.loc 2 138 0 discriminator 3
 686 007c FB69     		ldr	r3, [r7, #28]
 687 007e 0133     		adds	r3, r3, #1
 688 0080 FB61     		str	r3, [r7, #28]
 689              	.L24:
 138:STM32F10x_Speex_Lib/libspeex/bits.c ****       bits->chars[i]=HTOLS(chars[i]);
 690              		.loc 2 138 0 is_stmt 0 discriminator 1
 691 0082 FA69     		ldr	r2, [r7, #28]
 692 0084 BB69     		ldr	r3, [r7, #24]
 693 0086 9A42     		cmp	r2, r3
 694 0088 EFDB     		blt	.L25
 140:STM32F10x_Speex_Lib/libspeex/bits.c **** 
 141:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->nbBits=nchars<<LOG2_BITS_PER_CHAR;
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 18


 695              		.loc 2 141 0 is_stmt 1
 696 008a BB69     		ldr	r3, [r7, #24]
 697 008c DA00     		lsls	r2, r3, #3
 698 008e FB68     		ldr	r3, [r7, #12]
 699 0090 5A60     		str	r2, [r3, #4]
 142:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->charPtr=0;
 700              		.loc 2 142 0
 701 0092 FB68     		ldr	r3, [r7, #12]
 702 0094 0022     		movs	r2, #0
 703 0096 9A60     		str	r2, [r3, #8]
 143:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->bitPtr=0;
 704              		.loc 2 143 0
 705 0098 FB68     		ldr	r3, [r7, #12]
 706 009a 0022     		movs	r2, #0
 707 009c DA60     		str	r2, [r3, #12]
 144:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->overflow=0;
 708              		.loc 2 144 0
 709 009e FB68     		ldr	r3, [r7, #12]
 710 00a0 0022     		movs	r2, #0
 711 00a2 5A61     		str	r2, [r3, #20]
 145:STM32F10x_Speex_Lib/libspeex/bits.c **** }
 712              		.loc 2 145 0
 713 00a4 00BF     		nop
 714 00a6 2037     		adds	r7, r7, #32
 715              	.LCFI63:
 716              		.cfi_def_cfa_offset 8
 717 00a8 BD46     		mov	sp, r7
 718              	.LCFI64:
 719              		.cfi_def_cfa_register 13
 720              		@ sp needed
 721 00aa 80BD     		pop	{r7, pc}
 722              	.L27:
 723              		.align	2
 724              	.L26:
 725 00ac 00000000 		.word	.LC0
 726 00b0 28000000 		.word	.LC1
 727 00b4 58000000 		.word	.LC2
 728              		.cfi_endproc
 729              	.LFE15:
 731              		.section	.text.speex_bits_flush,"ax",%progbits
 732              		.align	2
 733              		.thumb
 734              		.thumb_func
 736              	speex_bits_flush:
 737              	.LFB16:
 146:STM32F10x_Speex_Lib/libspeex/bits.c **** 
 147:STM32F10x_Speex_Lib/libspeex/bits.c **** static void speex_bits_flush(SpeexBits *bits)
 148:STM32F10x_Speex_Lib/libspeex/bits.c **** {
 738              		.loc 2 148 0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 16
 741              		@ frame_needed = 1, uses_anonymous_args = 0
 742 0000 80B5     		push	{r7, lr}
 743              	.LCFI65:
 744              		.cfi_def_cfa_offset 8
 745              		.cfi_offset 7, -8
 746              		.cfi_offset 14, -4
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 19


 747 0002 84B0     		sub	sp, sp, #16
 748              	.LCFI66:
 749              		.cfi_def_cfa_offset 24
 750 0004 00AF     		add	r7, sp, #0
 751              	.LCFI67:
 752              		.cfi_def_cfa_register 7
 753 0006 7860     		str	r0, [r7, #4]
 149:STM32F10x_Speex_Lib/libspeex/bits.c ****    int nchars = ((bits->nbBits+BITS_PER_CHAR-1)>>LOG2_BITS_PER_CHAR);
 754              		.loc 2 149 0
 755 0008 7B68     		ldr	r3, [r7, #4]
 756 000a 5B68     		ldr	r3, [r3, #4]
 757 000c 0733     		adds	r3, r3, #7
 758 000e DB10     		asrs	r3, r3, #3
 759 0010 FB60     		str	r3, [r7, #12]
 150:STM32F10x_Speex_Lib/libspeex/bits.c ****    if (bits->charPtr>0)
 760              		.loc 2 150 0
 761 0012 7B68     		ldr	r3, [r7, #4]
 762 0014 9B68     		ldr	r3, [r3, #8]
 763 0016 002B     		cmp	r3, #0
 764 0018 0DDD     		ble	.L29
 151:STM32F10x_Speex_Lib/libspeex/bits.c ****       SPEEX_MOVE(bits->chars, &bits->chars[bits->charPtr], nchars-bits->charPtr);
 765              		.loc 2 151 0
 766 001a 7B68     		ldr	r3, [r7, #4]
 767 001c 1868     		ldr	r0, [r3]
 768 001e 7B68     		ldr	r3, [r7, #4]
 769 0020 1B68     		ldr	r3, [r3]
 770 0022 7A68     		ldr	r2, [r7, #4]
 771 0024 9268     		ldr	r2, [r2, #8]
 772 0026 9918     		adds	r1, r3, r2
 773 0028 7B68     		ldr	r3, [r7, #4]
 774 002a 9B68     		ldr	r3, [r3, #8]
 775 002c FA68     		ldr	r2, [r7, #12]
 776 002e D31A     		subs	r3, r2, r3
 777 0030 1A46     		mov	r2, r3
 778 0032 FFF7FEFF 		bl	memmove
 779              	.L29:
 152:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->nbBits -= bits->charPtr<<LOG2_BITS_PER_CHAR;
 780              		.loc 2 152 0
 781 0036 7B68     		ldr	r3, [r7, #4]
 782 0038 5A68     		ldr	r2, [r3, #4]
 783 003a 7B68     		ldr	r3, [r7, #4]
 784 003c 9B68     		ldr	r3, [r3, #8]
 785 003e DB00     		lsls	r3, r3, #3
 786 0040 D21A     		subs	r2, r2, r3
 787 0042 7B68     		ldr	r3, [r7, #4]
 788 0044 5A60     		str	r2, [r3, #4]
 153:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->charPtr=0;
 789              		.loc 2 153 0
 790 0046 7B68     		ldr	r3, [r7, #4]
 791 0048 0022     		movs	r2, #0
 792 004a 9A60     		str	r2, [r3, #8]
 154:STM32F10x_Speex_Lib/libspeex/bits.c **** }
 793              		.loc 2 154 0
 794 004c 00BF     		nop
 795 004e 1037     		adds	r7, r7, #16
 796              	.LCFI68:
 797              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 20


 798 0050 BD46     		mov	sp, r7
 799              	.LCFI69:
 800              		.cfi_def_cfa_register 13
 801              		@ sp needed
 802 0052 80BD     		pop	{r7, pc}
 803              		.cfi_endproc
 804              	.LFE16:
 806              		.section	.rodata
 807 008b 00       		.align	2
 808              	.LC3:
 809 008c 436F756C 		.ascii	"Could not resize input buffer: truncating oversize "
 809      64206E6F 
 809      74207265 
 809      73697A65 
 809      20696E70 
 810 00bf 696E7075 		.ascii	"input\000"
 810      7400
 811              		.section	.text.speex_bits_read_whole_bytes,"ax",%progbits
 812              		.align	2
 813              		.global	speex_bits_read_whole_bytes
 814              		.thumb
 815              		.thumb_func
 817              	speex_bits_read_whole_bytes:
 818              	.LFB17:
 155:STM32F10x_Speex_Lib/libspeex/bits.c **** 
 156:STM32F10x_Speex_Lib/libspeex/bits.c **** EXPORT void speex_bits_read_whole_bytes(SpeexBits *bits, char *chars, int nbytes)
 157:STM32F10x_Speex_Lib/libspeex/bits.c **** {
 819              		.loc 2 157 0
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 32
 822              		@ frame_needed = 1, uses_anonymous_args = 0
 823 0000 80B5     		push	{r7, lr}
 824              	.LCFI70:
 825              		.cfi_def_cfa_offset 8
 826              		.cfi_offset 7, -8
 827              		.cfi_offset 14, -4
 828 0002 88B0     		sub	sp, sp, #32
 829              	.LCFI71:
 830              		.cfi_def_cfa_offset 40
 831 0004 00AF     		add	r7, sp, #0
 832              	.LCFI72:
 833              		.cfi_def_cfa_register 7
 834 0006 F860     		str	r0, [r7, #12]
 835 0008 B960     		str	r1, [r7, #8]
 836 000a 7A60     		str	r2, [r7, #4]
 158:STM32F10x_Speex_Lib/libspeex/bits.c ****    int i,pos;
 159:STM32F10x_Speex_Lib/libspeex/bits.c ****    int nchars = nbytes/BYTES_PER_CHAR;
 837              		.loc 2 159 0
 838 000c 7B68     		ldr	r3, [r7, #4]
 839 000e BB61     		str	r3, [r7, #24]
 160:STM32F10x_Speex_Lib/libspeex/bits.c **** 
 161:STM32F10x_Speex_Lib/libspeex/bits.c ****    if (((bits->nbBits+BITS_PER_CHAR-1)>>LOG2_BITS_PER_CHAR)+nchars > bits->buf_size)
 840              		.loc 2 161 0
 841 0010 FB68     		ldr	r3, [r7, #12]
 842 0012 5B68     		ldr	r3, [r3, #4]
 843 0014 0733     		adds	r3, r3, #7
 844 0016 DA10     		asrs	r2, r3, #3
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 21


 845 0018 BB69     		ldr	r3, [r7, #24]
 846 001a 1A44     		add	r2, r2, r3
 847 001c FB68     		ldr	r3, [r7, #12]
 848 001e 9B69     		ldr	r3, [r3, #24]
 849 0020 9A42     		cmp	r2, r3
 850 0022 30DD     		ble	.L31
 162:STM32F10x_Speex_Lib/libspeex/bits.c ****    {
 163:STM32F10x_Speex_Lib/libspeex/bits.c ****       /* Packet is larger than allocated buffer */
 164:STM32F10x_Speex_Lib/libspeex/bits.c ****       if (bits->owner)
 851              		.loc 2 164 0
 852 0024 FB68     		ldr	r3, [r7, #12]
 853 0026 1B69     		ldr	r3, [r3, #16]
 854 0028 002B     		cmp	r3, #0
 855 002a 26D0     		beq	.L32
 856              	.LBB3:
 165:STM32F10x_Speex_Lib/libspeex/bits.c ****       {
 166:STM32F10x_Speex_Lib/libspeex/bits.c ****          char *tmp = (char*)speex_realloc(bits->chars, (bits->nbBits>>LOG2_BITS_PER_CHAR)+nchars+1)
 857              		.loc 2 166 0
 858 002c FB68     		ldr	r3, [r7, #12]
 859 002e 1868     		ldr	r0, [r3]
 860 0030 FB68     		ldr	r3, [r7, #12]
 861 0032 5B68     		ldr	r3, [r3, #4]
 862 0034 DA10     		asrs	r2, r3, #3
 863 0036 BB69     		ldr	r3, [r7, #24]
 864 0038 1344     		add	r3, r3, r2
 865 003a 0133     		adds	r3, r3, #1
 866 003c 1946     		mov	r1, r3
 867 003e FFF7FEFF 		bl	speex_realloc
 868 0042 7861     		str	r0, [r7, #20]
 167:STM32F10x_Speex_Lib/libspeex/bits.c ****          if (tmp)
 869              		.loc 2 167 0
 870 0044 7B69     		ldr	r3, [r7, #20]
 871 0046 002B     		cmp	r3, #0
 872 0048 0BD0     		beq	.L33
 168:STM32F10x_Speex_Lib/libspeex/bits.c ****          {
 169:STM32F10x_Speex_Lib/libspeex/bits.c ****             bits->buf_size=(bits->nbBits>>LOG2_BITS_PER_CHAR)+nchars+1;
 873              		.loc 2 169 0
 874 004a FB68     		ldr	r3, [r7, #12]
 875 004c 5B68     		ldr	r3, [r3, #4]
 876 004e DA10     		asrs	r2, r3, #3
 877 0050 BB69     		ldr	r3, [r7, #24]
 878 0052 1344     		add	r3, r3, r2
 879 0054 5A1C     		adds	r2, r3, #1
 880 0056 FB68     		ldr	r3, [r7, #12]
 881 0058 9A61     		str	r2, [r3, #24]
 170:STM32F10x_Speex_Lib/libspeex/bits.c ****             bits->chars=tmp;
 882              		.loc 2 170 0
 883 005a FB68     		ldr	r3, [r7, #12]
 884 005c 7A69     		ldr	r2, [r7, #20]
 885 005e 1A60     		str	r2, [r3]
 886 0060 11E0     		b	.L31
 887              	.L33:
 171:STM32F10x_Speex_Lib/libspeex/bits.c ****          } else {
 172:STM32F10x_Speex_Lib/libspeex/bits.c ****             nchars=bits->buf_size-(bits->nbBits>>LOG2_BITS_PER_CHAR)-1;
 888              		.loc 2 172 0
 889 0062 FB68     		ldr	r3, [r7, #12]
 890 0064 9A69     		ldr	r2, [r3, #24]
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 22


 891 0066 FB68     		ldr	r3, [r7, #12]
 892 0068 5B68     		ldr	r3, [r3, #4]
 893 006a DB10     		asrs	r3, r3, #3
 894 006c D31A     		subs	r3, r2, r3
 895 006e 013B     		subs	r3, r3, #1
 896 0070 BB61     		str	r3, [r7, #24]
 173:STM32F10x_Speex_Lib/libspeex/bits.c ****             speex_warning("Could not resize input buffer: truncating oversize input");
 897              		.loc 2 173 0
 898 0072 1848     		ldr	r0, .L37
 899 0074 FFF7FEFF 		bl	speex_warning
 900 0078 05E0     		b	.L31
 901              	.L32:
 902              	.LBE3:
 174:STM32F10x_Speex_Lib/libspeex/bits.c ****          }
 175:STM32F10x_Speex_Lib/libspeex/bits.c ****       } else {
 176:STM32F10x_Speex_Lib/libspeex/bits.c ****          speex_warning("Do not own input buffer: truncating oversize input");
 903              		.loc 2 176 0
 904 007a 1748     		ldr	r0, .L37+4
 905 007c FFF7FEFF 		bl	speex_warning
 177:STM32F10x_Speex_Lib/libspeex/bits.c ****          nchars=bits->buf_size;
 906              		.loc 2 177 0
 907 0080 FB68     		ldr	r3, [r7, #12]
 908 0082 9B69     		ldr	r3, [r3, #24]
 909 0084 BB61     		str	r3, [r7, #24]
 910              	.L31:
 178:STM32F10x_Speex_Lib/libspeex/bits.c ****       }
 179:STM32F10x_Speex_Lib/libspeex/bits.c ****    }
 180:STM32F10x_Speex_Lib/libspeex/bits.c **** 
 181:STM32F10x_Speex_Lib/libspeex/bits.c ****    speex_bits_flush(bits);
 911              		.loc 2 181 0
 912 0086 F868     		ldr	r0, [r7, #12]
 913 0088 FFF7FEFF 		bl	speex_bits_flush
 182:STM32F10x_Speex_Lib/libspeex/bits.c ****    pos=bits->nbBits>>LOG2_BITS_PER_CHAR;
 914              		.loc 2 182 0
 915 008c FB68     		ldr	r3, [r7, #12]
 916 008e 5B68     		ldr	r3, [r3, #4]
 917 0090 DB10     		asrs	r3, r3, #3
 918 0092 3B61     		str	r3, [r7, #16]
 183:STM32F10x_Speex_Lib/libspeex/bits.c ****    for (i=0;i<nchars;i++)
 919              		.loc 2 183 0
 920 0094 0023     		movs	r3, #0
 921 0096 FB61     		str	r3, [r7, #28]
 922 0098 0DE0     		b	.L35
 923              	.L36:
 184:STM32F10x_Speex_Lib/libspeex/bits.c ****       bits->chars[pos+i]=HTOLS(chars[i]);
 924              		.loc 2 184 0 discriminator 3
 925 009a FB68     		ldr	r3, [r7, #12]
 926 009c 1B68     		ldr	r3, [r3]
 927 009e 3969     		ldr	r1, [r7, #16]
 928 00a0 FA69     		ldr	r2, [r7, #28]
 929 00a2 0A44     		add	r2, r2, r1
 930 00a4 1344     		add	r3, r3, r2
 931 00a6 FA69     		ldr	r2, [r7, #28]
 932 00a8 B968     		ldr	r1, [r7, #8]
 933 00aa 0A44     		add	r2, r2, r1
 934 00ac 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 935 00ae 1A70     		strb	r2, [r3]
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 23


 183:STM32F10x_Speex_Lib/libspeex/bits.c ****    for (i=0;i<nchars;i++)
 936              		.loc 2 183 0 discriminator 3
 937 00b0 FB69     		ldr	r3, [r7, #28]
 938 00b2 0133     		adds	r3, r3, #1
 939 00b4 FB61     		str	r3, [r7, #28]
 940              	.L35:
 183:STM32F10x_Speex_Lib/libspeex/bits.c ****    for (i=0;i<nchars;i++)
 941              		.loc 2 183 0 is_stmt 0 discriminator 1
 942 00b6 FA69     		ldr	r2, [r7, #28]
 943 00b8 BB69     		ldr	r3, [r7, #24]
 944 00ba 9A42     		cmp	r2, r3
 945 00bc EDDB     		blt	.L36
 185:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->nbBits+=nchars<<LOG2_BITS_PER_CHAR;
 946              		.loc 2 185 0 is_stmt 1
 947 00be FB68     		ldr	r3, [r7, #12]
 948 00c0 5A68     		ldr	r2, [r3, #4]
 949 00c2 BB69     		ldr	r3, [r7, #24]
 950 00c4 DB00     		lsls	r3, r3, #3
 951 00c6 1A44     		add	r2, r2, r3
 952 00c8 FB68     		ldr	r3, [r7, #12]
 953 00ca 5A60     		str	r2, [r3, #4]
 186:STM32F10x_Speex_Lib/libspeex/bits.c **** }
 954              		.loc 2 186 0
 955 00cc 00BF     		nop
 956 00ce 2037     		adds	r7, r7, #32
 957              	.LCFI73:
 958              		.cfi_def_cfa_offset 8
 959 00d0 BD46     		mov	sp, r7
 960              	.LCFI74:
 961              		.cfi_def_cfa_register 13
 962              		@ sp needed
 963 00d2 80BD     		pop	{r7, pc}
 964              	.L38:
 965              		.align	2
 966              	.L37:
 967 00d4 8C000000 		.word	.LC3
 968 00d8 58000000 		.word	.LC2
 969              		.cfi_endproc
 970              	.LFE17:
 972              		.section	.text.speex_bits_write,"ax",%progbits
 973              		.align	2
 974              		.global	speex_bits_write
 975              		.thumb
 976              		.thumb_func
 978              	speex_bits_write:
 979              	.LFB18:
 187:STM32F10x_Speex_Lib/libspeex/bits.c **** 
 188:STM32F10x_Speex_Lib/libspeex/bits.c **** EXPORT int speex_bits_write(SpeexBits *bits, char *chars, int max_nbytes)
 189:STM32F10x_Speex_Lib/libspeex/bits.c **** {
 980              		.loc 2 189 0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 40
 983              		@ frame_needed = 1, uses_anonymous_args = 0
 984 0000 80B5     		push	{r7, lr}
 985              	.LCFI75:
 986              		.cfi_def_cfa_offset 8
 987              		.cfi_offset 7, -8
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 24


 988              		.cfi_offset 14, -4
 989 0002 8AB0     		sub	sp, sp, #40
 990              	.LCFI76:
 991              		.cfi_def_cfa_offset 48
 992 0004 00AF     		add	r7, sp, #0
 993              	.LCFI77:
 994              		.cfi_def_cfa_register 7
 995 0006 F860     		str	r0, [r7, #12]
 996 0008 B960     		str	r1, [r7, #8]
 997 000a 7A60     		str	r2, [r7, #4]
 190:STM32F10x_Speex_Lib/libspeex/bits.c ****    int i;
 191:STM32F10x_Speex_Lib/libspeex/bits.c ****    int max_nchars = max_nbytes/BYTES_PER_CHAR;
 998              		.loc 2 191 0
 999 000c 7B68     		ldr	r3, [r7, #4]
 1000 000e 3B62     		str	r3, [r7, #32]
 192:STM32F10x_Speex_Lib/libspeex/bits.c ****    int charPtr, bitPtr, nbBits;
 193:STM32F10x_Speex_Lib/libspeex/bits.c **** 
 194:STM32F10x_Speex_Lib/libspeex/bits.c ****    /* Insert terminator, but save the data so we can put it back after */
 195:STM32F10x_Speex_Lib/libspeex/bits.c ****    bitPtr=bits->bitPtr;
 1001              		.loc 2 195 0
 1002 0010 FB68     		ldr	r3, [r7, #12]
 1003 0012 DB68     		ldr	r3, [r3, #12]
 1004 0014 FB61     		str	r3, [r7, #28]
 196:STM32F10x_Speex_Lib/libspeex/bits.c ****    charPtr=bits->charPtr;
 1005              		.loc 2 196 0
 1006 0016 FB68     		ldr	r3, [r7, #12]
 1007 0018 9B68     		ldr	r3, [r3, #8]
 1008 001a BB61     		str	r3, [r7, #24]
 197:STM32F10x_Speex_Lib/libspeex/bits.c ****    nbBits=bits->nbBits;
 1009              		.loc 2 197 0
 1010 001c FB68     		ldr	r3, [r7, #12]
 1011 001e 5B68     		ldr	r3, [r3, #4]
 1012 0020 7B61     		str	r3, [r7, #20]
 198:STM32F10x_Speex_Lib/libspeex/bits.c ****    speex_bits_insert_terminator(bits);
 1013              		.loc 2 198 0
 1014 0022 F868     		ldr	r0, [r7, #12]
 1015 0024 FFF7FEFF 		bl	speex_bits_insert_terminator
 199:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->bitPtr=bitPtr;
 1016              		.loc 2 199 0
 1017 0028 FB68     		ldr	r3, [r7, #12]
 1018 002a FA69     		ldr	r2, [r7, #28]
 1019 002c DA60     		str	r2, [r3, #12]
 200:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->charPtr=charPtr;
 1020              		.loc 2 200 0
 1021 002e FB68     		ldr	r3, [r7, #12]
 1022 0030 BA69     		ldr	r2, [r7, #24]
 1023 0032 9A60     		str	r2, [r3, #8]
 201:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->nbBits=nbBits;
 1024              		.loc 2 201 0
 1025 0034 FB68     		ldr	r3, [r7, #12]
 1026 0036 7A69     		ldr	r2, [r7, #20]
 1027 0038 5A60     		str	r2, [r3, #4]
 202:STM32F10x_Speex_Lib/libspeex/bits.c **** 
 203:STM32F10x_Speex_Lib/libspeex/bits.c ****    if (max_nchars > ((bits->nbBits+BITS_PER_CHAR-1)>>LOG2_BITS_PER_CHAR))
 1028              		.loc 2 203 0
 1029 003a FB68     		ldr	r3, [r7, #12]
 1030 003c 5B68     		ldr	r3, [r3, #4]
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 25


 1031 003e 0733     		adds	r3, r3, #7
 1032 0040 DA10     		asrs	r2, r3, #3
 1033 0042 3B6A     		ldr	r3, [r7, #32]
 1034 0044 9A42     		cmp	r2, r3
 1035 0046 04DA     		bge	.L40
 204:STM32F10x_Speex_Lib/libspeex/bits.c ****       max_nchars = ((bits->nbBits+BITS_PER_CHAR-1)>>LOG2_BITS_PER_CHAR);
 1036              		.loc 2 204 0
 1037 0048 FB68     		ldr	r3, [r7, #12]
 1038 004a 5B68     		ldr	r3, [r3, #4]
 1039 004c 0733     		adds	r3, r3, #7
 1040 004e DB10     		asrs	r3, r3, #3
 1041 0050 3B62     		str	r3, [r7, #32]
 1042              	.L40:
 205:STM32F10x_Speex_Lib/libspeex/bits.c **** 
 206:STM32F10x_Speex_Lib/libspeex/bits.c ****    for (i=0;i<max_nchars;i++)
 1043              		.loc 2 206 0
 1044 0052 0023     		movs	r3, #0
 1045 0054 7B62     		str	r3, [r7, #36]
 1046 0056 0BE0     		b	.L41
 1047              	.L42:
 207:STM32F10x_Speex_Lib/libspeex/bits.c ****       chars[i]=HTOLS(bits->chars[i]);
 1048              		.loc 2 207 0 discriminator 3
 1049 0058 7B6A     		ldr	r3, [r7, #36]
 1050 005a BA68     		ldr	r2, [r7, #8]
 1051 005c 1344     		add	r3, r3, r2
 1052 005e FA68     		ldr	r2, [r7, #12]
 1053 0060 1168     		ldr	r1, [r2]
 1054 0062 7A6A     		ldr	r2, [r7, #36]
 1055 0064 0A44     		add	r2, r2, r1
 1056 0066 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1057 0068 1A70     		strb	r2, [r3]
 206:STM32F10x_Speex_Lib/libspeex/bits.c ****       chars[i]=HTOLS(bits->chars[i]);
 1058              		.loc 2 206 0 discriminator 3
 1059 006a 7B6A     		ldr	r3, [r7, #36]
 1060 006c 0133     		adds	r3, r3, #1
 1061 006e 7B62     		str	r3, [r7, #36]
 1062              	.L41:
 206:STM32F10x_Speex_Lib/libspeex/bits.c ****       chars[i]=HTOLS(bits->chars[i]);
 1063              		.loc 2 206 0 is_stmt 0 discriminator 1
 1064 0070 7A6A     		ldr	r2, [r7, #36]
 1065 0072 3B6A     		ldr	r3, [r7, #32]
 1066 0074 9A42     		cmp	r2, r3
 1067 0076 EFDB     		blt	.L42
 208:STM32F10x_Speex_Lib/libspeex/bits.c ****    return max_nchars*BYTES_PER_CHAR;
 1068              		.loc 2 208 0 is_stmt 1
 1069 0078 3B6A     		ldr	r3, [r7, #32]
 209:STM32F10x_Speex_Lib/libspeex/bits.c **** }
 1070              		.loc 2 209 0
 1071 007a 1846     		mov	r0, r3
 1072 007c 2837     		adds	r7, r7, #40
 1073              	.LCFI78:
 1074              		.cfi_def_cfa_offset 8
 1075 007e BD46     		mov	sp, r7
 1076              	.LCFI79:
 1077              		.cfi_def_cfa_register 13
 1078              		@ sp needed
 1079 0080 80BD     		pop	{r7, pc}
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 26


 1080              		.cfi_endproc
 1081              	.LFE18:
 1083 0082 00BF     		.section	.text.speex_bits_write_whole_bytes,"ax",%progbits
 1084              		.align	2
 1085              		.global	speex_bits_write_whole_bytes
 1086              		.thumb
 1087              		.thumb_func
 1089              	speex_bits_write_whole_bytes:
 1090              	.LFB19:
 210:STM32F10x_Speex_Lib/libspeex/bits.c **** 
 211:STM32F10x_Speex_Lib/libspeex/bits.c **** EXPORT int speex_bits_write_whole_bytes(SpeexBits *bits, char *chars, int max_nbytes)
 212:STM32F10x_Speex_Lib/libspeex/bits.c **** {
 1091              		.loc 2 212 0
 1092              		.cfi_startproc
 1093              		@ args = 0, pretend = 0, frame = 24
 1094              		@ frame_needed = 1, uses_anonymous_args = 0
 1095              		@ link register save eliminated.
 1096 0000 80B4     		push	{r7}
 1097              	.LCFI80:
 1098              		.cfi_def_cfa_offset 4
 1099              		.cfi_offset 7, -4
 1100 0002 87B0     		sub	sp, sp, #28
 1101              	.LCFI81:
 1102              		.cfi_def_cfa_offset 32
 1103 0004 00AF     		add	r7, sp, #0
 1104              	.LCFI82:
 1105              		.cfi_def_cfa_register 7
 1106 0006 F860     		str	r0, [r7, #12]
 1107 0008 B960     		str	r1, [r7, #8]
 1108 000a 7A60     		str	r2, [r7, #4]
 213:STM32F10x_Speex_Lib/libspeex/bits.c ****    int max_nchars = max_nbytes/BYTES_PER_CHAR;
 1109              		.loc 2 213 0
 1110 000c 7B68     		ldr	r3, [r7, #4]
 1111 000e 7B61     		str	r3, [r7, #20]
 214:STM32F10x_Speex_Lib/libspeex/bits.c ****    int i;
 215:STM32F10x_Speex_Lib/libspeex/bits.c ****    if (max_nchars > ((bits->nbBits)>>LOG2_BITS_PER_CHAR))
 1112              		.loc 2 215 0
 1113 0010 FB68     		ldr	r3, [r7, #12]
 1114 0012 5B68     		ldr	r3, [r3, #4]
 1115 0014 DA10     		asrs	r2, r3, #3
 1116 0016 7B69     		ldr	r3, [r7, #20]
 1117 0018 9A42     		cmp	r2, r3
 1118 001a 03DA     		bge	.L45
 216:STM32F10x_Speex_Lib/libspeex/bits.c ****       max_nchars = ((bits->nbBits)>>LOG2_BITS_PER_CHAR);
 1119              		.loc 2 216 0
 1120 001c FB68     		ldr	r3, [r7, #12]
 1121 001e 5B68     		ldr	r3, [r3, #4]
 1122 0020 DB10     		asrs	r3, r3, #3
 1123 0022 7B61     		str	r3, [r7, #20]
 1124              	.L45:
 217:STM32F10x_Speex_Lib/libspeex/bits.c ****    for (i=0;i<max_nchars;i++)
 1125              		.loc 2 217 0
 1126 0024 0023     		movs	r3, #0
 1127 0026 3B61     		str	r3, [r7, #16]
 1128 0028 0BE0     		b	.L46
 1129              	.L47:
 218:STM32F10x_Speex_Lib/libspeex/bits.c ****       chars[i]=HTOLS(bits->chars[i]);
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 27


 1130              		.loc 2 218 0 discriminator 3
 1131 002a 3B69     		ldr	r3, [r7, #16]
 1132 002c BA68     		ldr	r2, [r7, #8]
 1133 002e 1344     		add	r3, r3, r2
 1134 0030 FA68     		ldr	r2, [r7, #12]
 1135 0032 1168     		ldr	r1, [r2]
 1136 0034 3A69     		ldr	r2, [r7, #16]
 1137 0036 0A44     		add	r2, r2, r1
 1138 0038 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1139 003a 1A70     		strb	r2, [r3]
 217:STM32F10x_Speex_Lib/libspeex/bits.c ****    for (i=0;i<max_nchars;i++)
 1140              		.loc 2 217 0 discriminator 3
 1141 003c 3B69     		ldr	r3, [r7, #16]
 1142 003e 0133     		adds	r3, r3, #1
 1143 0040 3B61     		str	r3, [r7, #16]
 1144              	.L46:
 217:STM32F10x_Speex_Lib/libspeex/bits.c ****    for (i=0;i<max_nchars;i++)
 1145              		.loc 2 217 0 is_stmt 0 discriminator 1
 1146 0042 3A69     		ldr	r2, [r7, #16]
 1147 0044 7B69     		ldr	r3, [r7, #20]
 1148 0046 9A42     		cmp	r2, r3
 1149 0048 EFDB     		blt	.L47
 219:STM32F10x_Speex_Lib/libspeex/bits.c **** 
 220:STM32F10x_Speex_Lib/libspeex/bits.c ****    if (bits->bitPtr>0)
 1150              		.loc 2 220 0 is_stmt 1
 1151 004a FB68     		ldr	r3, [r7, #12]
 1152 004c DB68     		ldr	r3, [r3, #12]
 1153 004e 002B     		cmp	r3, #0
 1154 0050 08DD     		ble	.L48
 221:STM32F10x_Speex_Lib/libspeex/bits.c ****       bits->chars[0]=bits->chars[max_nchars];
 1155              		.loc 2 221 0
 1156 0052 FB68     		ldr	r3, [r7, #12]
 1157 0054 1B68     		ldr	r3, [r3]
 1158 0056 FA68     		ldr	r2, [r7, #12]
 1159 0058 1168     		ldr	r1, [r2]
 1160 005a 7A69     		ldr	r2, [r7, #20]
 1161 005c 0A44     		add	r2, r2, r1
 1162 005e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1163 0060 1A70     		strb	r2, [r3]
 1164 0062 03E0     		b	.L49
 1165              	.L48:
 222:STM32F10x_Speex_Lib/libspeex/bits.c ****    else
 223:STM32F10x_Speex_Lib/libspeex/bits.c ****       bits->chars[0]=0;
 1166              		.loc 2 223 0
 1167 0064 FB68     		ldr	r3, [r7, #12]
 1168 0066 1B68     		ldr	r3, [r3]
 1169 0068 0022     		movs	r2, #0
 1170 006a 1A70     		strb	r2, [r3]
 1171              	.L49:
 224:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->charPtr=0;
 1172              		.loc 2 224 0
 1173 006c FB68     		ldr	r3, [r7, #12]
 1174 006e 0022     		movs	r2, #0
 1175 0070 9A60     		str	r2, [r3, #8]
 225:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->nbBits &= (BITS_PER_CHAR-1);
 1176              		.loc 2 225 0
 1177 0072 FB68     		ldr	r3, [r7, #12]
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 28


 1178 0074 5B68     		ldr	r3, [r3, #4]
 1179 0076 03F00702 		and	r2, r3, #7
 1180 007a FB68     		ldr	r3, [r7, #12]
 1181 007c 5A60     		str	r2, [r3, #4]
 226:STM32F10x_Speex_Lib/libspeex/bits.c ****    return max_nchars*BYTES_PER_CHAR;
 1182              		.loc 2 226 0
 1183 007e 7B69     		ldr	r3, [r7, #20]
 227:STM32F10x_Speex_Lib/libspeex/bits.c **** }
 1184              		.loc 2 227 0
 1185 0080 1846     		mov	r0, r3
 1186 0082 1C37     		adds	r7, r7, #28
 1187              	.LCFI83:
 1188              		.cfi_def_cfa_offset 4
 1189 0084 BD46     		mov	sp, r7
 1190              	.LCFI84:
 1191              		.cfi_def_cfa_register 13
 1192              		@ sp needed
 1193 0086 80BC     		pop	{r7}
 1194              	.LCFI85:
 1195              		.cfi_restore 7
 1196              		.cfi_def_cfa_offset 0
 1197 0088 7047     		bx	lr
 1198              		.cfi_endproc
 1199              	.LFE19:
 1201 008a 00BF     		.section	.rodata
 1202 00c5 000000   		.align	2
 1203              	.LC4:
 1204 00c8 42756666 		.ascii	"Buffer too small to pack bits\000"
 1204      65722074 
 1204      6F6F2073 
 1204      6D616C6C 
 1204      20746F20 
 1205 00e6 0000     		.align	2
 1206              	.LC5:
 1207 00e8 436F756C 		.ascii	"Could not resize input buffer: not packing\000"
 1207      64206E6F 
 1207      74207265 
 1207      73697A65 
 1207      20696E70 
 1208 0113 00       		.align	2
 1209              	.LC6:
 1210 0114 446F206E 		.ascii	"Do not own input buffer: not packing\000"
 1210      6F74206F 
 1210      776E2069 
 1210      6E707574 
 1210      20627566 
 1211              		.section	.text.speex_bits_pack,"ax",%progbits
 1212              		.align	2
 1213              		.global	speex_bits_pack
 1214              		.thumb
 1215              		.thumb_func
 1217              	speex_bits_pack:
 1218              	.LFB20:
 228:STM32F10x_Speex_Lib/libspeex/bits.c **** 
 229:STM32F10x_Speex_Lib/libspeex/bits.c **** EXPORT void speex_bits_pack(SpeexBits *bits, int data, int nbBits)
 230:STM32F10x_Speex_Lib/libspeex/bits.c **** {
 1219              		.loc 2 230 0
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 29


 1220              		.cfi_startproc
 1221              		@ args = 0, pretend = 0, frame = 32
 1222              		@ frame_needed = 1, uses_anonymous_args = 0
 1223 0000 80B5     		push	{r7, lr}
 1224              	.LCFI86:
 1225              		.cfi_def_cfa_offset 8
 1226              		.cfi_offset 7, -8
 1227              		.cfi_offset 14, -4
 1228 0002 88B0     		sub	sp, sp, #32
 1229              	.LCFI87:
 1230              		.cfi_def_cfa_offset 40
 1231 0004 00AF     		add	r7, sp, #0
 1232              	.LCFI88:
 1233              		.cfi_def_cfa_register 7
 1234 0006 F860     		str	r0, [r7, #12]
 1235 0008 B960     		str	r1, [r7, #8]
 1236 000a 7A60     		str	r2, [r7, #4]
 231:STM32F10x_Speex_Lib/libspeex/bits.c ****    unsigned int d=data;
 1237              		.loc 2 231 0
 1238 000c BB68     		ldr	r3, [r7, #8]
 1239 000e FB61     		str	r3, [r7, #28]
 232:STM32F10x_Speex_Lib/libspeex/bits.c **** 
 233:STM32F10x_Speex_Lib/libspeex/bits.c ****    if (bits->charPtr+((nbBits+bits->bitPtr)>>LOG2_BITS_PER_CHAR) >= bits->buf_size)
 1240              		.loc 2 233 0
 1241 0010 FB68     		ldr	r3, [r7, #12]
 1242 0012 9A68     		ldr	r2, [r3, #8]
 1243 0014 FB68     		ldr	r3, [r7, #12]
 1244 0016 D968     		ldr	r1, [r3, #12]
 1245 0018 7B68     		ldr	r3, [r7, #4]
 1246 001a 0B44     		add	r3, r3, r1
 1247 001c DB10     		asrs	r3, r3, #3
 1248 001e 1A44     		add	r2, r2, r3
 1249 0020 FB68     		ldr	r3, [r7, #12]
 1250 0022 9B69     		ldr	r3, [r3, #24]
 1251 0024 9A42     		cmp	r2, r3
 1252 0026 67DB     		blt	.L57
 234:STM32F10x_Speex_Lib/libspeex/bits.c ****    {
 235:STM32F10x_Speex_Lib/libspeex/bits.c ****       speex_notify("Buffer too small to pack bits");
 1253              		.loc 2 235 0
 1254 0028 3648     		ldr	r0, .L60
 1255 002a FFF7FEFF 		bl	speex_notify
 236:STM32F10x_Speex_Lib/libspeex/bits.c ****       if (bits->owner)
 1256              		.loc 2 236 0
 1257 002e FB68     		ldr	r3, [r7, #12]
 1258 0030 1B69     		ldr	r3, [r3, #16]
 1259 0032 002B     		cmp	r3, #0
 1260 0034 1CD0     		beq	.L53
 1261              	.LBB4:
 237:STM32F10x_Speex_Lib/libspeex/bits.c ****       {
 238:STM32F10x_Speex_Lib/libspeex/bits.c ****          int new_nchars = ((bits->buf_size+5)*3)>>1;
 1262              		.loc 2 238 0
 1263 0036 FB68     		ldr	r3, [r7, #12]
 1264 0038 9B69     		ldr	r3, [r3, #24]
 1265 003a 5A1D     		adds	r2, r3, #5
 1266 003c 1346     		mov	r3, r2
 1267 003e 5B00     		lsls	r3, r3, #1
 1268 0040 1344     		add	r3, r3, r2
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 30


 1269 0042 5B10     		asrs	r3, r3, #1
 1270 0044 BB61     		str	r3, [r7, #24]
 239:STM32F10x_Speex_Lib/libspeex/bits.c ****          char *tmp = (char*)speex_realloc(bits->chars, new_nchars);
 1271              		.loc 2 239 0
 1272 0046 FB68     		ldr	r3, [r7, #12]
 1273 0048 1B68     		ldr	r3, [r3]
 1274 004a B969     		ldr	r1, [r7, #24]
 1275 004c 1846     		mov	r0, r3
 1276 004e FFF7FEFF 		bl	speex_realloc
 1277 0052 7861     		str	r0, [r7, #20]
 240:STM32F10x_Speex_Lib/libspeex/bits.c ****          if (tmp)
 1278              		.loc 2 240 0
 1279 0054 7B69     		ldr	r3, [r7, #20]
 1280 0056 002B     		cmp	r3, #0
 1281 0058 06D0     		beq	.L54
 241:STM32F10x_Speex_Lib/libspeex/bits.c ****          {
 242:STM32F10x_Speex_Lib/libspeex/bits.c ****             bits->buf_size=new_nchars;
 1282              		.loc 2 242 0
 1283 005a FB68     		ldr	r3, [r7, #12]
 1284 005c BA69     		ldr	r2, [r7, #24]
 1285 005e 9A61     		str	r2, [r3, #24]
 243:STM32F10x_Speex_Lib/libspeex/bits.c ****             bits->chars=tmp;
 1286              		.loc 2 243 0
 1287 0060 FB68     		ldr	r3, [r7, #12]
 1288 0062 7A69     		ldr	r2, [r7, #20]
 1289 0064 1A60     		str	r2, [r3]
 1290 0066 47E0     		b	.L57
 1291              	.L54:
 244:STM32F10x_Speex_Lib/libspeex/bits.c ****          } else {
 245:STM32F10x_Speex_Lib/libspeex/bits.c ****             speex_warning("Could not resize input buffer: not packing");
 1292              		.loc 2 245 0
 1293 0068 2748     		ldr	r0, .L60+4
 1294 006a FFF7FEFF 		bl	speex_warning
 246:STM32F10x_Speex_Lib/libspeex/bits.c ****             return;
 1295              		.loc 2 246 0
 1296 006e 46E0     		b	.L51
 1297              	.L53:
 1298              	.LBE4:
 247:STM32F10x_Speex_Lib/libspeex/bits.c ****          }
 248:STM32F10x_Speex_Lib/libspeex/bits.c ****       } else {
 249:STM32F10x_Speex_Lib/libspeex/bits.c ****          speex_warning("Do not own input buffer: not packing");
 1299              		.loc 2 249 0
 1300 0070 2648     		ldr	r0, .L60+8
 1301 0072 FFF7FEFF 		bl	speex_warning
 250:STM32F10x_Speex_Lib/libspeex/bits.c ****          return;
 1302              		.loc 2 250 0
 1303 0076 42E0     		b	.L51
 1304              	.L59:
 1305              	.LBB5:
 251:STM32F10x_Speex_Lib/libspeex/bits.c ****       }
 252:STM32F10x_Speex_Lib/libspeex/bits.c ****    }
 253:STM32F10x_Speex_Lib/libspeex/bits.c **** 
 254:STM32F10x_Speex_Lib/libspeex/bits.c ****    while(nbBits)
 255:STM32F10x_Speex_Lib/libspeex/bits.c ****    {
 256:STM32F10x_Speex_Lib/libspeex/bits.c ****       int bit;
 257:STM32F10x_Speex_Lib/libspeex/bits.c ****       bit = (d>>(nbBits-1))&1;
 1306              		.loc 2 257 0
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 31


 1307 0078 7B68     		ldr	r3, [r7, #4]
 1308 007a 013B     		subs	r3, r3, #1
 1309 007c FA69     		ldr	r2, [r7, #28]
 1310 007e 22FA03F3 		lsr	r3, r2, r3
 1311 0082 03F00103 		and	r3, r3, #1
 1312 0086 3B61     		str	r3, [r7, #16]
 258:STM32F10x_Speex_Lib/libspeex/bits.c ****       bits->chars[bits->charPtr] |= bit<<(BITS_PER_CHAR-1-bits->bitPtr);
 1313              		.loc 2 258 0
 1314 0088 FB68     		ldr	r3, [r7, #12]
 1315 008a 1B68     		ldr	r3, [r3]
 1316 008c FA68     		ldr	r2, [r7, #12]
 1317 008e 9268     		ldr	r2, [r2, #8]
 1318 0090 1344     		add	r3, r3, r2
 1319 0092 FA68     		ldr	r2, [r7, #12]
 1320 0094 1268     		ldr	r2, [r2]
 1321 0096 F968     		ldr	r1, [r7, #12]
 1322 0098 8968     		ldr	r1, [r1, #8]
 1323 009a 0A44     		add	r2, r2, r1
 1324 009c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1325 009e 51B2     		sxtb	r1, r2
 1326 00a0 FA68     		ldr	r2, [r7, #12]
 1327 00a2 D268     		ldr	r2, [r2, #12]
 1328 00a4 C2F10702 		rsb	r2, r2, #7
 1329 00a8 3869     		ldr	r0, [r7, #16]
 1330 00aa 00FA02F2 		lsl	r2, r0, r2
 1331 00ae 52B2     		sxtb	r2, r2
 1332 00b0 0A43     		orrs	r2, r2, r1
 1333 00b2 52B2     		sxtb	r2, r2
 1334 00b4 D2B2     		uxtb	r2, r2
 1335 00b6 1A70     		strb	r2, [r3]
 259:STM32F10x_Speex_Lib/libspeex/bits.c ****       bits->bitPtr++;
 1336              		.loc 2 259 0
 1337 00b8 FB68     		ldr	r3, [r7, #12]
 1338 00ba DB68     		ldr	r3, [r3, #12]
 1339 00bc 5A1C     		adds	r2, r3, #1
 1340 00be FB68     		ldr	r3, [r7, #12]
 1341 00c0 DA60     		str	r2, [r3, #12]
 260:STM32F10x_Speex_Lib/libspeex/bits.c **** 
 261:STM32F10x_Speex_Lib/libspeex/bits.c ****       if (bits->bitPtr==BITS_PER_CHAR)
 1342              		.loc 2 261 0
 1343 00c2 FB68     		ldr	r3, [r7, #12]
 1344 00c4 DB68     		ldr	r3, [r3, #12]
 1345 00c6 082B     		cmp	r3, #8
 1346 00c8 0ED1     		bne	.L58
 262:STM32F10x_Speex_Lib/libspeex/bits.c ****       {
 263:STM32F10x_Speex_Lib/libspeex/bits.c ****          bits->bitPtr=0;
 1347              		.loc 2 263 0
 1348 00ca FB68     		ldr	r3, [r7, #12]
 1349 00cc 0022     		movs	r2, #0
 1350 00ce DA60     		str	r2, [r3, #12]
 264:STM32F10x_Speex_Lib/libspeex/bits.c ****          bits->charPtr++;
 1351              		.loc 2 264 0
 1352 00d0 FB68     		ldr	r3, [r7, #12]
 1353 00d2 9B68     		ldr	r3, [r3, #8]
 1354 00d4 5A1C     		adds	r2, r3, #1
 1355 00d6 FB68     		ldr	r3, [r7, #12]
 1356 00d8 9A60     		str	r2, [r3, #8]
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 32


 265:STM32F10x_Speex_Lib/libspeex/bits.c ****          bits->chars[bits->charPtr] = 0;
 1357              		.loc 2 265 0
 1358 00da FB68     		ldr	r3, [r7, #12]
 1359 00dc 1B68     		ldr	r3, [r3]
 1360 00de FA68     		ldr	r2, [r7, #12]
 1361 00e0 9268     		ldr	r2, [r2, #8]
 1362 00e2 1344     		add	r3, r3, r2
 1363 00e4 0022     		movs	r2, #0
 1364 00e6 1A70     		strb	r2, [r3]
 1365              	.L58:
 266:STM32F10x_Speex_Lib/libspeex/bits.c ****       }
 267:STM32F10x_Speex_Lib/libspeex/bits.c ****       bits->nbBits++;
 1366              		.loc 2 267 0
 1367 00e8 FB68     		ldr	r3, [r7, #12]
 1368 00ea 5B68     		ldr	r3, [r3, #4]
 1369 00ec 5A1C     		adds	r2, r3, #1
 1370 00ee FB68     		ldr	r3, [r7, #12]
 1371 00f0 5A60     		str	r2, [r3, #4]
 268:STM32F10x_Speex_Lib/libspeex/bits.c ****       nbBits--;
 1372              		.loc 2 268 0
 1373 00f2 7B68     		ldr	r3, [r7, #4]
 1374 00f4 013B     		subs	r3, r3, #1
 1375 00f6 7B60     		str	r3, [r7, #4]
 1376              	.L57:
 1377              	.LBE5:
 254:STM32F10x_Speex_Lib/libspeex/bits.c ****    {
 1378              		.loc 2 254 0
 1379 00f8 7B68     		ldr	r3, [r7, #4]
 1380 00fa 002B     		cmp	r3, #0
 1381 00fc BCD1     		bne	.L59
 1382              	.L51:
 269:STM32F10x_Speex_Lib/libspeex/bits.c ****    }
 270:STM32F10x_Speex_Lib/libspeex/bits.c **** }
 1383              		.loc 2 270 0
 1384 00fe 2037     		adds	r7, r7, #32
 1385              	.LCFI89:
 1386              		.cfi_def_cfa_offset 8
 1387 0100 BD46     		mov	sp, r7
 1388              	.LCFI90:
 1389              		.cfi_def_cfa_register 13
 1390              		@ sp needed
 1391 0102 80BD     		pop	{r7, pc}
 1392              	.L61:
 1393              		.align	2
 1394              	.L60:
 1395 0104 C8000000 		.word	.LC4
 1396 0108 E8000000 		.word	.LC5
 1397 010c 14010000 		.word	.LC6
 1398              		.cfi_endproc
 1399              	.LFE20:
 1401              		.section	.text.speex_bits_unpack_signed,"ax",%progbits
 1402              		.align	2
 1403              		.global	speex_bits_unpack_signed
 1404              		.thumb
 1405              		.thumb_func
 1407              	speex_bits_unpack_signed:
 1408              	.LFB21:
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 33


 271:STM32F10x_Speex_Lib/libspeex/bits.c **** 
 272:STM32F10x_Speex_Lib/libspeex/bits.c **** EXPORT int speex_bits_unpack_signed(SpeexBits *bits, int nbBits)
 273:STM32F10x_Speex_Lib/libspeex/bits.c **** {
 1409              		.loc 2 273 0
 1410              		.cfi_startproc
 1411              		@ args = 0, pretend = 0, frame = 16
 1412              		@ frame_needed = 1, uses_anonymous_args = 0
 1413 0000 80B5     		push	{r7, lr}
 1414              	.LCFI91:
 1415              		.cfi_def_cfa_offset 8
 1416              		.cfi_offset 7, -8
 1417              		.cfi_offset 14, -4
 1418 0002 84B0     		sub	sp, sp, #16
 1419              	.LCFI92:
 1420              		.cfi_def_cfa_offset 24
 1421 0004 00AF     		add	r7, sp, #0
 1422              	.LCFI93:
 1423              		.cfi_def_cfa_register 7
 1424 0006 7860     		str	r0, [r7, #4]
 1425 0008 3960     		str	r1, [r7]
 274:STM32F10x_Speex_Lib/libspeex/bits.c ****    unsigned int d=speex_bits_unpack_unsigned(bits,nbBits);
 1426              		.loc 2 274 0
 1427 000a 3968     		ldr	r1, [r7]
 1428 000c 7868     		ldr	r0, [r7, #4]
 1429 000e FFF7FEFF 		bl	speex_bits_unpack_unsigned
 1430 0012 F860     		str	r0, [r7, #12]
 275:STM32F10x_Speex_Lib/libspeex/bits.c ****    /* If number is negative */
 276:STM32F10x_Speex_Lib/libspeex/bits.c ****    if (d>>(nbBits-1))
 1431              		.loc 2 276 0
 1432 0014 3B68     		ldr	r3, [r7]
 1433 0016 013B     		subs	r3, r3, #1
 1434 0018 FA68     		ldr	r2, [r7, #12]
 1435 001a 22FA03F3 		lsr	r3, r2, r3
 1436 001e 002B     		cmp	r3, #0
 1437 0020 08D0     		beq	.L63
 277:STM32F10x_Speex_Lib/libspeex/bits.c ****    {
 278:STM32F10x_Speex_Lib/libspeex/bits.c ****       d |= (-1)<<nbBits;
 1438              		.loc 2 278 0
 1439 0022 4FF0FF32 		mov	r2, #-1
 1440 0026 3B68     		ldr	r3, [r7]
 1441 0028 02FA03F3 		lsl	r3, r2, r3
 1442 002c 1A46     		mov	r2, r3
 1443 002e FB68     		ldr	r3, [r7, #12]
 1444 0030 1343     		orrs	r3, r3, r2
 1445 0032 FB60     		str	r3, [r7, #12]
 1446              	.L63:
 279:STM32F10x_Speex_Lib/libspeex/bits.c ****    }
 280:STM32F10x_Speex_Lib/libspeex/bits.c ****    return d;
 1447              		.loc 2 280 0
 1448 0034 FB68     		ldr	r3, [r7, #12]
 281:STM32F10x_Speex_Lib/libspeex/bits.c **** }
 1449              		.loc 2 281 0
 1450 0036 1846     		mov	r0, r3
 1451 0038 1037     		adds	r7, r7, #16
 1452              	.LCFI94:
 1453              		.cfi_def_cfa_offset 8
 1454 003a BD46     		mov	sp, r7
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 34


 1455              	.LCFI95:
 1456              		.cfi_def_cfa_register 13
 1457              		@ sp needed
 1458 003c 80BD     		pop	{r7, pc}
 1459              		.cfi_endproc
 1460              	.LFE21:
 1462 003e 00BF     		.section	.text.speex_bits_unpack_unsigned,"ax",%progbits
 1463              		.align	2
 1464              		.global	speex_bits_unpack_unsigned
 1465              		.thumb
 1466              		.thumb_func
 1468              	speex_bits_unpack_unsigned:
 1469              	.LFB22:
 282:STM32F10x_Speex_Lib/libspeex/bits.c **** 
 283:STM32F10x_Speex_Lib/libspeex/bits.c **** EXPORT unsigned int speex_bits_unpack_unsigned(SpeexBits *bits, int nbBits)
 284:STM32F10x_Speex_Lib/libspeex/bits.c **** {
 1470              		.loc 2 284 0
 1471              		.cfi_startproc
 1472              		@ args = 0, pretend = 0, frame = 16
 1473              		@ frame_needed = 1, uses_anonymous_args = 0
 1474              		@ link register save eliminated.
 1475 0000 80B4     		push	{r7}
 1476              	.LCFI96:
 1477              		.cfi_def_cfa_offset 4
 1478              		.cfi_offset 7, -4
 1479 0002 85B0     		sub	sp, sp, #20
 1480              	.LCFI97:
 1481              		.cfi_def_cfa_offset 24
 1482 0004 00AF     		add	r7, sp, #0
 1483              	.LCFI98:
 1484              		.cfi_def_cfa_register 7
 1485 0006 7860     		str	r0, [r7, #4]
 1486 0008 3960     		str	r1, [r7]
 285:STM32F10x_Speex_Lib/libspeex/bits.c ****    unsigned int d=0;
 1487              		.loc 2 285 0
 1488 000a 0023     		movs	r3, #0
 1489 000c FB60     		str	r3, [r7, #12]
 286:STM32F10x_Speex_Lib/libspeex/bits.c ****    if ((bits->charPtr<<LOG2_BITS_PER_CHAR)+bits->bitPtr+nbBits>bits->nbBits)
 1490              		.loc 2 286 0
 1491 000e 7B68     		ldr	r3, [r7, #4]
 1492 0010 9B68     		ldr	r3, [r3, #8]
 1493 0012 DA00     		lsls	r2, r3, #3
 1494 0014 7B68     		ldr	r3, [r7, #4]
 1495 0016 DB68     		ldr	r3, [r3, #12]
 1496 0018 1A44     		add	r2, r2, r3
 1497 001a 3B68     		ldr	r3, [r7]
 1498 001c 1A44     		add	r2, r2, r3
 1499 001e 7B68     		ldr	r3, [r7, #4]
 1500 0020 5B68     		ldr	r3, [r3, #4]
 1501 0022 9A42     		cmp	r2, r3
 1502 0024 02DD     		ble	.L66
 287:STM32F10x_Speex_Lib/libspeex/bits.c ****       bits->overflow=1;
 1503              		.loc 2 287 0
 1504 0026 7B68     		ldr	r3, [r7, #4]
 1505 0028 0122     		movs	r2, #1
 1506 002a 5A61     		str	r2, [r3, #20]
 1507              	.L66:
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 35


 288:STM32F10x_Speex_Lib/libspeex/bits.c ****    if (bits->overflow)
 1508              		.loc 2 288 0
 1509 002c 7B68     		ldr	r3, [r7, #4]
 1510 002e 5B69     		ldr	r3, [r3, #20]
 1511 0030 002B     		cmp	r3, #0
 1512 0032 2AD0     		beq	.L69
 289:STM32F10x_Speex_Lib/libspeex/bits.c ****       return 0;
 1513              		.loc 2 289 0
 1514 0034 0023     		movs	r3, #0
 1515 0036 2CE0     		b	.L68
 1516              	.L71:
 290:STM32F10x_Speex_Lib/libspeex/bits.c ****    while(nbBits)
 291:STM32F10x_Speex_Lib/libspeex/bits.c ****    {
 292:STM32F10x_Speex_Lib/libspeex/bits.c ****       d<<=1;
 1517              		.loc 2 292 0
 1518 0038 FB68     		ldr	r3, [r7, #12]
 1519 003a 5B00     		lsls	r3, r3, #1
 1520 003c FB60     		str	r3, [r7, #12]
 293:STM32F10x_Speex_Lib/libspeex/bits.c ****       d |= (bits->chars[bits->charPtr]>>(BITS_PER_CHAR-1 - bits->bitPtr))&1;
 1521              		.loc 2 293 0
 1522 003e 7B68     		ldr	r3, [r7, #4]
 1523 0040 1B68     		ldr	r3, [r3]
 1524 0042 7A68     		ldr	r2, [r7, #4]
 1525 0044 9268     		ldr	r2, [r2, #8]
 1526 0046 1344     		add	r3, r3, r2
 1527 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1528 004a 1A46     		mov	r2, r3
 1529 004c 7B68     		ldr	r3, [r7, #4]
 1530 004e DB68     		ldr	r3, [r3, #12]
 1531 0050 C3F10703 		rsb	r3, r3, #7
 1532 0054 42FA03F3 		asr	r3, r2, r3
 1533 0058 03F00103 		and	r3, r3, #1
 1534 005c FA68     		ldr	r2, [r7, #12]
 1535 005e 1343     		orrs	r3, r3, r2
 1536 0060 FB60     		str	r3, [r7, #12]
 294:STM32F10x_Speex_Lib/libspeex/bits.c ****       bits->bitPtr++;
 1537              		.loc 2 294 0
 1538 0062 7B68     		ldr	r3, [r7, #4]
 1539 0064 DB68     		ldr	r3, [r3, #12]
 1540 0066 5A1C     		adds	r2, r3, #1
 1541 0068 7B68     		ldr	r3, [r7, #4]
 1542 006a DA60     		str	r2, [r3, #12]
 295:STM32F10x_Speex_Lib/libspeex/bits.c ****       if (bits->bitPtr==BITS_PER_CHAR)
 1543              		.loc 2 295 0
 1544 006c 7B68     		ldr	r3, [r7, #4]
 1545 006e DB68     		ldr	r3, [r3, #12]
 1546 0070 082B     		cmp	r3, #8
 1547 0072 07D1     		bne	.L70
 296:STM32F10x_Speex_Lib/libspeex/bits.c ****       {
 297:STM32F10x_Speex_Lib/libspeex/bits.c ****          bits->bitPtr=0;
 1548              		.loc 2 297 0
 1549 0074 7B68     		ldr	r3, [r7, #4]
 1550 0076 0022     		movs	r2, #0
 1551 0078 DA60     		str	r2, [r3, #12]
 298:STM32F10x_Speex_Lib/libspeex/bits.c ****          bits->charPtr++;
 1552              		.loc 2 298 0
 1553 007a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 36


 1554 007c 9B68     		ldr	r3, [r3, #8]
 1555 007e 5A1C     		adds	r2, r3, #1
 1556 0080 7B68     		ldr	r3, [r7, #4]
 1557 0082 9A60     		str	r2, [r3, #8]
 1558              	.L70:
 299:STM32F10x_Speex_Lib/libspeex/bits.c ****       }
 300:STM32F10x_Speex_Lib/libspeex/bits.c ****       nbBits--;
 1559              		.loc 2 300 0
 1560 0084 3B68     		ldr	r3, [r7]
 1561 0086 013B     		subs	r3, r3, #1
 1562 0088 3B60     		str	r3, [r7]
 1563              	.L69:
 290:STM32F10x_Speex_Lib/libspeex/bits.c ****    {
 1564              		.loc 2 290 0
 1565 008a 3B68     		ldr	r3, [r7]
 1566 008c 002B     		cmp	r3, #0
 1567 008e D3D1     		bne	.L71
 301:STM32F10x_Speex_Lib/libspeex/bits.c ****    }
 302:STM32F10x_Speex_Lib/libspeex/bits.c ****    return d;
 1568              		.loc 2 302 0
 1569 0090 FB68     		ldr	r3, [r7, #12]
 1570              	.L68:
 303:STM32F10x_Speex_Lib/libspeex/bits.c **** }
 1571              		.loc 2 303 0
 1572 0092 1846     		mov	r0, r3
 1573 0094 1437     		adds	r7, r7, #20
 1574              	.LCFI99:
 1575              		.cfi_def_cfa_offset 4
 1576 0096 BD46     		mov	sp, r7
 1577              	.LCFI100:
 1578              		.cfi_def_cfa_register 13
 1579              		@ sp needed
 1580 0098 80BC     		pop	{r7}
 1581              	.LCFI101:
 1582              		.cfi_restore 7
 1583              		.cfi_def_cfa_offset 0
 1584 009a 7047     		bx	lr
 1585              		.cfi_endproc
 1586              	.LFE22:
 1588              		.section	.text.speex_bits_peek_unsigned,"ax",%progbits
 1589              		.align	2
 1590              		.global	speex_bits_peek_unsigned
 1591              		.thumb
 1592              		.thumb_func
 1594              	speex_bits_peek_unsigned:
 1595              	.LFB23:
 304:STM32F10x_Speex_Lib/libspeex/bits.c **** 
 305:STM32F10x_Speex_Lib/libspeex/bits.c **** EXPORT unsigned int speex_bits_peek_unsigned(SpeexBits *bits, int nbBits)
 306:STM32F10x_Speex_Lib/libspeex/bits.c **** {
 1596              		.loc 2 306 0
 1597              		.cfi_startproc
 1598              		@ args = 0, pretend = 0, frame = 24
 1599              		@ frame_needed = 1, uses_anonymous_args = 0
 1600              		@ link register save eliminated.
 1601 0000 80B4     		push	{r7}
 1602              	.LCFI102:
 1603              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 37


 1604              		.cfi_offset 7, -4
 1605 0002 87B0     		sub	sp, sp, #28
 1606              	.LCFI103:
 1607              		.cfi_def_cfa_offset 32
 1608 0004 00AF     		add	r7, sp, #0
 1609              	.LCFI104:
 1610              		.cfi_def_cfa_register 7
 1611 0006 7860     		str	r0, [r7, #4]
 1612 0008 3960     		str	r1, [r7]
 307:STM32F10x_Speex_Lib/libspeex/bits.c ****    unsigned int d=0;
 1613              		.loc 2 307 0
 1614 000a 0023     		movs	r3, #0
 1615 000c 7B61     		str	r3, [r7, #20]
 308:STM32F10x_Speex_Lib/libspeex/bits.c ****    int bitPtr, charPtr;
 309:STM32F10x_Speex_Lib/libspeex/bits.c ****    char *chars;
 310:STM32F10x_Speex_Lib/libspeex/bits.c **** 
 311:STM32F10x_Speex_Lib/libspeex/bits.c ****    if ((bits->charPtr<<LOG2_BITS_PER_CHAR)+bits->bitPtr+nbBits>bits->nbBits)
 1616              		.loc 2 311 0
 1617 000e 7B68     		ldr	r3, [r7, #4]
 1618 0010 9B68     		ldr	r3, [r3, #8]
 1619 0012 DA00     		lsls	r2, r3, #3
 1620 0014 7B68     		ldr	r3, [r7, #4]
 1621 0016 DB68     		ldr	r3, [r3, #12]
 1622 0018 1A44     		add	r2, r2, r3
 1623 001a 3B68     		ldr	r3, [r7]
 1624 001c 1A44     		add	r2, r2, r3
 1625 001e 7B68     		ldr	r3, [r7, #4]
 1626 0020 5B68     		ldr	r3, [r3, #4]
 1627 0022 9A42     		cmp	r2, r3
 1628 0024 02DD     		ble	.L73
 312:STM32F10x_Speex_Lib/libspeex/bits.c ****      bits->overflow=1;
 1629              		.loc 2 312 0
 1630 0026 7B68     		ldr	r3, [r7, #4]
 1631 0028 0122     		movs	r2, #1
 1632 002a 5A61     		str	r2, [r3, #20]
 1633              	.L73:
 313:STM32F10x_Speex_Lib/libspeex/bits.c ****    if (bits->overflow)
 1634              		.loc 2 313 0
 1635 002c 7B68     		ldr	r3, [r7, #4]
 1636 002e 5B69     		ldr	r3, [r3, #20]
 1637 0030 002B     		cmp	r3, #0
 1638 0032 01D0     		beq	.L74
 314:STM32F10x_Speex_Lib/libspeex/bits.c ****       return 0;
 1639              		.loc 2 314 0
 1640 0034 0023     		movs	r3, #0
 1641 0036 2DE0     		b	.L75
 1642              	.L74:
 315:STM32F10x_Speex_Lib/libspeex/bits.c **** 
 316:STM32F10x_Speex_Lib/libspeex/bits.c ****    bitPtr=bits->bitPtr;
 1643              		.loc 2 316 0
 1644 0038 7B68     		ldr	r3, [r7, #4]
 1645 003a DB68     		ldr	r3, [r3, #12]
 1646 003c 3B61     		str	r3, [r7, #16]
 317:STM32F10x_Speex_Lib/libspeex/bits.c ****    charPtr=bits->charPtr;
 1647              		.loc 2 317 0
 1648 003e 7B68     		ldr	r3, [r7, #4]
 1649 0040 9B68     		ldr	r3, [r3, #8]
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 38


 1650 0042 FB60     		str	r3, [r7, #12]
 318:STM32F10x_Speex_Lib/libspeex/bits.c ****    chars = bits->chars;
 1651              		.loc 2 318 0
 1652 0044 7B68     		ldr	r3, [r7, #4]
 1653 0046 1B68     		ldr	r3, [r3]
 1654 0048 BB60     		str	r3, [r7, #8]
 319:STM32F10x_Speex_Lib/libspeex/bits.c ****    while(nbBits)
 1655              		.loc 2 319 0
 1656 004a 1FE0     		b	.L76
 1657              	.L78:
 320:STM32F10x_Speex_Lib/libspeex/bits.c ****    {
 321:STM32F10x_Speex_Lib/libspeex/bits.c ****       d<<=1;
 1658              		.loc 2 321 0
 1659 004c 7B69     		ldr	r3, [r7, #20]
 1660 004e 5B00     		lsls	r3, r3, #1
 1661 0050 7B61     		str	r3, [r7, #20]
 322:STM32F10x_Speex_Lib/libspeex/bits.c ****       d |= (chars[charPtr]>>(BITS_PER_CHAR-1 - bitPtr))&1;
 1662              		.loc 2 322 0
 1663 0052 FB68     		ldr	r3, [r7, #12]
 1664 0054 BA68     		ldr	r2, [r7, #8]
 1665 0056 1344     		add	r3, r3, r2
 1666 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1667 005a 1A46     		mov	r2, r3
 1668 005c 3B69     		ldr	r3, [r7, #16]
 1669 005e C3F10703 		rsb	r3, r3, #7
 1670 0062 42FA03F3 		asr	r3, r2, r3
 1671 0066 03F00103 		and	r3, r3, #1
 1672 006a 7A69     		ldr	r2, [r7, #20]
 1673 006c 1343     		orrs	r3, r3, r2
 1674 006e 7B61     		str	r3, [r7, #20]
 323:STM32F10x_Speex_Lib/libspeex/bits.c ****       bitPtr++;
 1675              		.loc 2 323 0
 1676 0070 3B69     		ldr	r3, [r7, #16]
 1677 0072 0133     		adds	r3, r3, #1
 1678 0074 3B61     		str	r3, [r7, #16]
 324:STM32F10x_Speex_Lib/libspeex/bits.c ****       if (bitPtr==BITS_PER_CHAR)
 1679              		.loc 2 324 0
 1680 0076 3B69     		ldr	r3, [r7, #16]
 1681 0078 082B     		cmp	r3, #8
 1682 007a 04D1     		bne	.L77
 325:STM32F10x_Speex_Lib/libspeex/bits.c ****       {
 326:STM32F10x_Speex_Lib/libspeex/bits.c ****          bitPtr=0;
 1683              		.loc 2 326 0
 1684 007c 0023     		movs	r3, #0
 1685 007e 3B61     		str	r3, [r7, #16]
 327:STM32F10x_Speex_Lib/libspeex/bits.c ****          charPtr++;
 1686              		.loc 2 327 0
 1687 0080 FB68     		ldr	r3, [r7, #12]
 1688 0082 0133     		adds	r3, r3, #1
 1689 0084 FB60     		str	r3, [r7, #12]
 1690              	.L77:
 328:STM32F10x_Speex_Lib/libspeex/bits.c ****       }
 329:STM32F10x_Speex_Lib/libspeex/bits.c ****       nbBits--;
 1691              		.loc 2 329 0
 1692 0086 3B68     		ldr	r3, [r7]
 1693 0088 013B     		subs	r3, r3, #1
 1694 008a 3B60     		str	r3, [r7]
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 39


 1695              	.L76:
 319:STM32F10x_Speex_Lib/libspeex/bits.c ****    {
 1696              		.loc 2 319 0
 1697 008c 3B68     		ldr	r3, [r7]
 1698 008e 002B     		cmp	r3, #0
 1699 0090 DCD1     		bne	.L78
 330:STM32F10x_Speex_Lib/libspeex/bits.c ****    }
 331:STM32F10x_Speex_Lib/libspeex/bits.c ****    return d;
 1700              		.loc 2 331 0
 1701 0092 7B69     		ldr	r3, [r7, #20]
 1702              	.L75:
 332:STM32F10x_Speex_Lib/libspeex/bits.c **** }
 1703              		.loc 2 332 0
 1704 0094 1846     		mov	r0, r3
 1705 0096 1C37     		adds	r7, r7, #28
 1706              	.LCFI105:
 1707              		.cfi_def_cfa_offset 4
 1708 0098 BD46     		mov	sp, r7
 1709              	.LCFI106:
 1710              		.cfi_def_cfa_register 13
 1711              		@ sp needed
 1712 009a 80BC     		pop	{r7}
 1713              	.LCFI107:
 1714              		.cfi_restore 7
 1715              		.cfi_def_cfa_offset 0
 1716 009c 7047     		bx	lr
 1717              		.cfi_endproc
 1718              	.LFE23:
 1720 009e 00BF     		.section	.text.speex_bits_peek,"ax",%progbits
 1721              		.align	2
 1722              		.global	speex_bits_peek
 1723              		.thumb
 1724              		.thumb_func
 1726              	speex_bits_peek:
 1727              	.LFB24:
 333:STM32F10x_Speex_Lib/libspeex/bits.c **** 
 334:STM32F10x_Speex_Lib/libspeex/bits.c **** EXPORT int speex_bits_peek(SpeexBits *bits)
 335:STM32F10x_Speex_Lib/libspeex/bits.c **** {
 1728              		.loc 2 335 0
 1729              		.cfi_startproc
 1730              		@ args = 0, pretend = 0, frame = 8
 1731              		@ frame_needed = 1, uses_anonymous_args = 0
 1732              		@ link register save eliminated.
 1733 0000 80B4     		push	{r7}
 1734              	.LCFI108:
 1735              		.cfi_def_cfa_offset 4
 1736              		.cfi_offset 7, -4
 1737 0002 83B0     		sub	sp, sp, #12
 1738              	.LCFI109:
 1739              		.cfi_def_cfa_offset 16
 1740 0004 00AF     		add	r7, sp, #0
 1741              	.LCFI110:
 1742              		.cfi_def_cfa_register 7
 1743 0006 7860     		str	r0, [r7, #4]
 336:STM32F10x_Speex_Lib/libspeex/bits.c ****    if ((bits->charPtr<<LOG2_BITS_PER_CHAR)+bits->bitPtr+1>bits->nbBits)
 1744              		.loc 2 336 0
 1745 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 40


 1746 000a 9B68     		ldr	r3, [r3, #8]
 1747 000c DA00     		lsls	r2, r3, #3
 1748 000e 7B68     		ldr	r3, [r7, #4]
 1749 0010 DB68     		ldr	r3, [r3, #12]
 1750 0012 1344     		add	r3, r3, r2
 1751 0014 5A1C     		adds	r2, r3, #1
 1752 0016 7B68     		ldr	r3, [r7, #4]
 1753 0018 5B68     		ldr	r3, [r3, #4]
 1754 001a 9A42     		cmp	r2, r3
 1755 001c 02DD     		ble	.L80
 337:STM32F10x_Speex_Lib/libspeex/bits.c ****       bits->overflow=1;
 1756              		.loc 2 337 0
 1757 001e 7B68     		ldr	r3, [r7, #4]
 1758 0020 0122     		movs	r2, #1
 1759 0022 5A61     		str	r2, [r3, #20]
 1760              	.L80:
 338:STM32F10x_Speex_Lib/libspeex/bits.c ****    if (bits->overflow)
 1761              		.loc 2 338 0
 1762 0024 7B68     		ldr	r3, [r7, #4]
 1763 0026 5B69     		ldr	r3, [r3, #20]
 1764 0028 002B     		cmp	r3, #0
 1765 002a 01D0     		beq	.L81
 339:STM32F10x_Speex_Lib/libspeex/bits.c ****       return 0;
 1766              		.loc 2 339 0
 1767 002c 0023     		movs	r3, #0
 1768 002e 0EE0     		b	.L82
 1769              	.L81:
 340:STM32F10x_Speex_Lib/libspeex/bits.c ****    return (bits->chars[bits->charPtr]>>(BITS_PER_CHAR-1 - bits->bitPtr))&1;
 1770              		.loc 2 340 0
 1771 0030 7B68     		ldr	r3, [r7, #4]
 1772 0032 1B68     		ldr	r3, [r3]
 1773 0034 7A68     		ldr	r2, [r7, #4]
 1774 0036 9268     		ldr	r2, [r2, #8]
 1775 0038 1344     		add	r3, r3, r2
 1776 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1777 003c 1A46     		mov	r2, r3
 1778 003e 7B68     		ldr	r3, [r7, #4]
 1779 0040 DB68     		ldr	r3, [r3, #12]
 1780 0042 C3F10703 		rsb	r3, r3, #7
 1781 0046 42FA03F3 		asr	r3, r2, r3
 1782 004a 03F00103 		and	r3, r3, #1
 1783              	.L82:
 341:STM32F10x_Speex_Lib/libspeex/bits.c **** }
 1784              		.loc 2 341 0
 1785 004e 1846     		mov	r0, r3
 1786 0050 0C37     		adds	r7, r7, #12
 1787              	.LCFI111:
 1788              		.cfi_def_cfa_offset 4
 1789 0052 BD46     		mov	sp, r7
 1790              	.LCFI112:
 1791              		.cfi_def_cfa_register 13
 1792              		@ sp needed
 1793 0054 80BC     		pop	{r7}
 1794              	.LCFI113:
 1795              		.cfi_restore 7
 1796              		.cfi_def_cfa_offset 0
 1797 0056 7047     		bx	lr
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 41


 1798              		.cfi_endproc
 1799              	.LFE24:
 1801              		.section	.text.speex_bits_advance,"ax",%progbits
 1802              		.align	2
 1803              		.global	speex_bits_advance
 1804              		.thumb
 1805              		.thumb_func
 1807              	speex_bits_advance:
 1808              	.LFB25:
 342:STM32F10x_Speex_Lib/libspeex/bits.c **** 
 343:STM32F10x_Speex_Lib/libspeex/bits.c **** EXPORT void speex_bits_advance(SpeexBits *bits, int n)
 344:STM32F10x_Speex_Lib/libspeex/bits.c **** {
 1809              		.loc 2 344 0
 1810              		.cfi_startproc
 1811              		@ args = 0, pretend = 0, frame = 8
 1812              		@ frame_needed = 1, uses_anonymous_args = 0
 1813              		@ link register save eliminated.
 1814 0000 80B4     		push	{r7}
 1815              	.LCFI114:
 1816              		.cfi_def_cfa_offset 4
 1817              		.cfi_offset 7, -4
 1818 0002 83B0     		sub	sp, sp, #12
 1819              	.LCFI115:
 1820              		.cfi_def_cfa_offset 16
 1821 0004 00AF     		add	r7, sp, #0
 1822              	.LCFI116:
 1823              		.cfi_def_cfa_register 7
 1824 0006 7860     		str	r0, [r7, #4]
 1825 0008 3960     		str	r1, [r7]
 345:STM32F10x_Speex_Lib/libspeex/bits.c ****     if (((bits->charPtr<<LOG2_BITS_PER_CHAR)+bits->bitPtr+n>bits->nbBits) || bits->overflow){
 1826              		.loc 2 345 0
 1827 000a 7B68     		ldr	r3, [r7, #4]
 1828 000c 9B68     		ldr	r3, [r3, #8]
 1829 000e DA00     		lsls	r2, r3, #3
 1830 0010 7B68     		ldr	r3, [r7, #4]
 1831 0012 DB68     		ldr	r3, [r3, #12]
 1832 0014 1A44     		add	r2, r2, r3
 1833 0016 3B68     		ldr	r3, [r7]
 1834 0018 1A44     		add	r2, r2, r3
 1835 001a 7B68     		ldr	r3, [r7, #4]
 1836 001c 5B68     		ldr	r3, [r3, #4]
 1837 001e 9A42     		cmp	r2, r3
 1838 0020 03DC     		bgt	.L84
 1839              		.loc 2 345 0 is_stmt 0 discriminator 1
 1840 0022 7B68     		ldr	r3, [r7, #4]
 1841 0024 5B69     		ldr	r3, [r3, #20]
 1842 0026 002B     		cmp	r3, #0
 1843 0028 03D0     		beq	.L85
 1844              	.L84:
 346:STM32F10x_Speex_Lib/libspeex/bits.c ****       bits->overflow=1;
 1845              		.loc 2 346 0 is_stmt 1
 1846 002a 7B68     		ldr	r3, [r7, #4]
 1847 002c 0122     		movs	r2, #1
 1848 002e 5A61     		str	r2, [r3, #20]
 347:STM32F10x_Speex_Lib/libspeex/bits.c ****       return;
 1849              		.loc 2 347 0
 1850 0030 11E0     		b	.L83
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 42


 1851              	.L85:
 348:STM32F10x_Speex_Lib/libspeex/bits.c ****     }
 349:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->charPtr += (bits->bitPtr+n) >> LOG2_BITS_PER_CHAR; /* divide by BITS_PER_CHAR */
 1852              		.loc 2 349 0
 1853 0032 7B68     		ldr	r3, [r7, #4]
 1854 0034 9A68     		ldr	r2, [r3, #8]
 1855 0036 7B68     		ldr	r3, [r7, #4]
 1856 0038 D968     		ldr	r1, [r3, #12]
 1857 003a 3B68     		ldr	r3, [r7]
 1858 003c 0B44     		add	r3, r3, r1
 1859 003e DB10     		asrs	r3, r3, #3
 1860 0040 1A44     		add	r2, r2, r3
 1861 0042 7B68     		ldr	r3, [r7, #4]
 1862 0044 9A60     		str	r2, [r3, #8]
 350:STM32F10x_Speex_Lib/libspeex/bits.c ****    bits->bitPtr = (bits->bitPtr+n) & (BITS_PER_CHAR-1);       /* modulo by BITS_PER_CHAR */
 1863              		.loc 2 350 0
 1864 0046 7B68     		ldr	r3, [r7, #4]
 1865 0048 DA68     		ldr	r2, [r3, #12]
 1866 004a 3B68     		ldr	r3, [r7]
 1867 004c 1344     		add	r3, r3, r2
 1868 004e 03F00702 		and	r2, r3, #7
 1869 0052 7B68     		ldr	r3, [r7, #4]
 1870 0054 DA60     		str	r2, [r3, #12]
 1871              	.L83:
 351:STM32F10x_Speex_Lib/libspeex/bits.c **** }
 1872              		.loc 2 351 0
 1873 0056 0C37     		adds	r7, r7, #12
 1874              	.LCFI117:
 1875              		.cfi_def_cfa_offset 4
 1876 0058 BD46     		mov	sp, r7
 1877              	.LCFI118:
 1878              		.cfi_def_cfa_register 13
 1879              		@ sp needed
 1880 005a 80BC     		pop	{r7}
 1881              	.LCFI119:
 1882              		.cfi_restore 7
 1883              		.cfi_def_cfa_offset 0
 1884 005c 7047     		bx	lr
 1885              		.cfi_endproc
 1886              	.LFE25:
 1888 005e 00BF     		.section	.text.speex_bits_remaining,"ax",%progbits
 1889              		.align	2
 1890              		.global	speex_bits_remaining
 1891              		.thumb
 1892              		.thumb_func
 1894              	speex_bits_remaining:
 1895              	.LFB26:
 352:STM32F10x_Speex_Lib/libspeex/bits.c **** 
 353:STM32F10x_Speex_Lib/libspeex/bits.c **** EXPORT int speex_bits_remaining(SpeexBits *bits)
 354:STM32F10x_Speex_Lib/libspeex/bits.c **** {
 1896              		.loc 2 354 0
 1897              		.cfi_startproc
 1898              		@ args = 0, pretend = 0, frame = 8
 1899              		@ frame_needed = 1, uses_anonymous_args = 0
 1900              		@ link register save eliminated.
 1901 0000 80B4     		push	{r7}
 1902              	.LCFI120:
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 43


 1903              		.cfi_def_cfa_offset 4
 1904              		.cfi_offset 7, -4
 1905 0002 83B0     		sub	sp, sp, #12
 1906              	.LCFI121:
 1907              		.cfi_def_cfa_offset 16
 1908 0004 00AF     		add	r7, sp, #0
 1909              	.LCFI122:
 1910              		.cfi_def_cfa_register 7
 1911 0006 7860     		str	r0, [r7, #4]
 355:STM32F10x_Speex_Lib/libspeex/bits.c ****    if (bits->overflow)
 1912              		.loc 2 355 0
 1913 0008 7B68     		ldr	r3, [r7, #4]
 1914 000a 5B69     		ldr	r3, [r3, #20]
 1915 000c 002B     		cmp	r3, #0
 1916 000e 02D0     		beq	.L88
 356:STM32F10x_Speex_Lib/libspeex/bits.c ****       return -1;
 1917              		.loc 2 356 0
 1918 0010 4FF0FF33 		mov	r3, #-1
 1919 0014 08E0     		b	.L89
 1920              	.L88:
 357:STM32F10x_Speex_Lib/libspeex/bits.c ****    else
 358:STM32F10x_Speex_Lib/libspeex/bits.c ****       return bits->nbBits-((bits->charPtr<<LOG2_BITS_PER_CHAR)+bits->bitPtr);
 1921              		.loc 2 358 0
 1922 0016 7B68     		ldr	r3, [r7, #4]
 1923 0018 5A68     		ldr	r2, [r3, #4]
 1924 001a 7B68     		ldr	r3, [r7, #4]
 1925 001c 9B68     		ldr	r3, [r3, #8]
 1926 001e D900     		lsls	r1, r3, #3
 1927 0020 7B68     		ldr	r3, [r7, #4]
 1928 0022 DB68     		ldr	r3, [r3, #12]
 1929 0024 0B44     		add	r3, r3, r1
 1930 0026 D31A     		subs	r3, r2, r3
 1931              	.L89:
 359:STM32F10x_Speex_Lib/libspeex/bits.c **** }
 1932              		.loc 2 359 0
 1933 0028 1846     		mov	r0, r3
 1934 002a 0C37     		adds	r7, r7, #12
 1935              	.LCFI123:
 1936              		.cfi_def_cfa_offset 4
 1937 002c BD46     		mov	sp, r7
 1938              	.LCFI124:
 1939              		.cfi_def_cfa_register 13
 1940              		@ sp needed
 1941 002e 80BC     		pop	{r7}
 1942              	.LCFI125:
 1943              		.cfi_restore 7
 1944              		.cfi_def_cfa_offset 0
 1945 0030 7047     		bx	lr
 1946              		.cfi_endproc
 1947              	.LFE26:
 1949 0032 00BF     		.section	.text.speex_bits_nbytes,"ax",%progbits
 1950              		.align	2
 1951              		.global	speex_bits_nbytes
 1952              		.thumb
 1953              		.thumb_func
 1955              	speex_bits_nbytes:
 1956              	.LFB27:
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 44


 360:STM32F10x_Speex_Lib/libspeex/bits.c **** 
 361:STM32F10x_Speex_Lib/libspeex/bits.c **** EXPORT int speex_bits_nbytes(SpeexBits *bits)
 362:STM32F10x_Speex_Lib/libspeex/bits.c **** {
 1957              		.loc 2 362 0
 1958              		.cfi_startproc
 1959              		@ args = 0, pretend = 0, frame = 8
 1960              		@ frame_needed = 1, uses_anonymous_args = 0
 1961              		@ link register save eliminated.
 1962 0000 80B4     		push	{r7}
 1963              	.LCFI126:
 1964              		.cfi_def_cfa_offset 4
 1965              		.cfi_offset 7, -4
 1966 0002 83B0     		sub	sp, sp, #12
 1967              	.LCFI127:
 1968              		.cfi_def_cfa_offset 16
 1969 0004 00AF     		add	r7, sp, #0
 1970              	.LCFI128:
 1971              		.cfi_def_cfa_register 7
 1972 0006 7860     		str	r0, [r7, #4]
 363:STM32F10x_Speex_Lib/libspeex/bits.c ****    return ((bits->nbBits+BITS_PER_CHAR-1)>>LOG2_BITS_PER_CHAR);
 1973              		.loc 2 363 0
 1974 0008 7B68     		ldr	r3, [r7, #4]
 1975 000a 5B68     		ldr	r3, [r3, #4]
 1976 000c 0733     		adds	r3, r3, #7
 1977 000e DB10     		asrs	r3, r3, #3
 364:STM32F10x_Speex_Lib/libspeex/bits.c **** }
 1978              		.loc 2 364 0
 1979 0010 1846     		mov	r0, r3
 1980 0012 0C37     		adds	r7, r7, #12
 1981              	.LCFI129:
 1982              		.cfi_def_cfa_offset 4
 1983 0014 BD46     		mov	sp, r7
 1984              	.LCFI130:
 1985              		.cfi_def_cfa_register 13
 1986              		@ sp needed
 1987 0016 80BC     		pop	{r7}
 1988              	.LCFI131:
 1989              		.cfi_restore 7
 1990              		.cfi_def_cfa_offset 0
 1991 0018 7047     		bx	lr
 1992              		.cfi_endproc
 1993              	.LFE27:
 1995 001a 00BF     		.section	.text.speex_bits_insert_terminator,"ax",%progbits
 1996              		.align	2
 1997              		.global	speex_bits_insert_terminator
 1998              		.thumb
 1999              		.thumb_func
 2001              	speex_bits_insert_terminator:
 2002              	.LFB28:
 365:STM32F10x_Speex_Lib/libspeex/bits.c **** 
 366:STM32F10x_Speex_Lib/libspeex/bits.c **** EXPORT void speex_bits_insert_terminator(SpeexBits *bits)
 367:STM32F10x_Speex_Lib/libspeex/bits.c **** {
 2003              		.loc 2 367 0
 2004              		.cfi_startproc
 2005              		@ args = 0, pretend = 0, frame = 8
 2006              		@ frame_needed = 1, uses_anonymous_args = 0
 2007 0000 80B5     		push	{r7, lr}
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 45


 2008              	.LCFI132:
 2009              		.cfi_def_cfa_offset 8
 2010              		.cfi_offset 7, -8
 2011              		.cfi_offset 14, -4
 2012 0002 82B0     		sub	sp, sp, #8
 2013              	.LCFI133:
 2014              		.cfi_def_cfa_offset 16
 2015 0004 00AF     		add	r7, sp, #0
 2016              	.LCFI134:
 2017              		.cfi_def_cfa_register 7
 2018 0006 7860     		str	r0, [r7, #4]
 368:STM32F10x_Speex_Lib/libspeex/bits.c ****    if (bits->bitPtr)
 2019              		.loc 2 368 0
 2020 0008 7B68     		ldr	r3, [r7, #4]
 2021 000a DB68     		ldr	r3, [r3, #12]
 2022 000c 002B     		cmp	r3, #0
 2023 000e 0AD0     		beq	.L94
 369:STM32F10x_Speex_Lib/libspeex/bits.c ****       speex_bits_pack(bits, 0, 1);
 2024              		.loc 2 369 0
 2025 0010 0122     		movs	r2, #1
 2026 0012 0021     		movs	r1, #0
 2027 0014 7868     		ldr	r0, [r7, #4]
 2028 0016 FFF7FEFF 		bl	speex_bits_pack
 370:STM32F10x_Speex_Lib/libspeex/bits.c ****    while (bits->bitPtr)
 2029              		.loc 2 370 0
 2030 001a 04E0     		b	.L94
 2031              	.L95:
 371:STM32F10x_Speex_Lib/libspeex/bits.c ****       speex_bits_pack(bits, 1, 1);
 2032              		.loc 2 371 0
 2033 001c 0122     		movs	r2, #1
 2034 001e 0121     		movs	r1, #1
 2035 0020 7868     		ldr	r0, [r7, #4]
 2036 0022 FFF7FEFF 		bl	speex_bits_pack
 2037              	.L94:
 370:STM32F10x_Speex_Lib/libspeex/bits.c ****    while (bits->bitPtr)
 2038              		.loc 2 370 0
 2039 0026 7B68     		ldr	r3, [r7, #4]
 2040 0028 DB68     		ldr	r3, [r3, #12]
 2041 002a 002B     		cmp	r3, #0
 2042 002c F6D1     		bne	.L95
 372:STM32F10x_Speex_Lib/libspeex/bits.c **** }
 2043              		.loc 2 372 0
 2044 002e 00BF     		nop
 2045 0030 0837     		adds	r7, r7, #8
 2046              	.LCFI135:
 2047              		.cfi_def_cfa_offset 8
 2048 0032 BD46     		mov	sp, r7
 2049              	.LCFI136:
 2050              		.cfi_def_cfa_register 13
 2051              		@ sp needed
 2052 0034 80BD     		pop	{r7, pc}
 2053              		.cfi_endproc
 2054              	.LFE28:
 2056 0036 00BF     		.text
 2057              	.Letext0:
 2058              		.file 3 "Inc/speex/speex_bits.h"
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 46


DEFINED SYMBOLS
                            *ABS*:0000000000000000 bits.c
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:20     .text.speex_alloc:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:24     .text.speex_alloc:0000000000000000 speex_alloc
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:63     .text.speex_realloc:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:67     .text.speex_realloc:0000000000000000 speex_realloc
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:106    .text.speex_free:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:110    .text.speex_free:0000000000000000 speex_free
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:145    .text.speex_warning:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:149    .text.speex_warning:0000000000000000 speex_warning
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:185    .text.speex_notify:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:189    .text.speex_notify:0000000000000000 speex_notify
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:225    .text.speex_bits_init:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:230    .text.speex_bits_init:0000000000000000 speex_bits_init
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:468    .text.speex_bits_reset:0000000000000000 speex_bits_reset
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:289    .text.speex_bits_init_buffer:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:294    .text.speex_bits_init_buffer:0000000000000000 speex_bits_init_buffer
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:343    .text.speex_bits_set_bit_buffer:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:348    .text.speex_bits_set_bit_buffer:0000000000000000 speex_bits_set_bit_buffer
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:415    .text.speex_bits_destroy:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:420    .text.speex_bits_destroy:0000000000000000 speex_bits_destroy
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:463    .text.speex_bits_reset:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:525    .text.speex_bits_rewind:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:530    .text.speex_bits_rewind:0000000000000000 speex_bits_rewind
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:578    .rodata:0000000000000000 $d
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:588    .text.speex_bits_read_from:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:593    .text.speex_bits_read_from:0000000000000000 speex_bits_read_from
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:725    .text.speex_bits_read_from:00000000000000ac $d
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:732    .text.speex_bits_flush:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:736    .text.speex_bits_flush:0000000000000000 speex_bits_flush
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:812    .text.speex_bits_read_whole_bytes:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:817    .text.speex_bits_read_whole_bytes:0000000000000000 speex_bits_read_whole_bytes
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:967    .text.speex_bits_read_whole_bytes:00000000000000d4 $d
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:973    .text.speex_bits_write:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:978    .text.speex_bits_write:0000000000000000 speex_bits_write
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:2001   .text.speex_bits_insert_terminator:0000000000000000 speex_bits_insert_terminator
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:1084   .text.speex_bits_write_whole_bytes:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:1089   .text.speex_bits_write_whole_bytes:0000000000000000 speex_bits_write_whole_bytes
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:1212   .text.speex_bits_pack:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:1217   .text.speex_bits_pack:0000000000000000 speex_bits_pack
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:1395   .text.speex_bits_pack:0000000000000104 $d
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:1402   .text.speex_bits_unpack_signed:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:1407   .text.speex_bits_unpack_signed:0000000000000000 speex_bits_unpack_signed
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:1468   .text.speex_bits_unpack_unsigned:0000000000000000 speex_bits_unpack_unsigned
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:1463   .text.speex_bits_unpack_unsigned:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:1589   .text.speex_bits_peek_unsigned:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:1594   .text.speex_bits_peek_unsigned:0000000000000000 speex_bits_peek_unsigned
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:1721   .text.speex_bits_peek:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:1726   .text.speex_bits_peek:0000000000000000 speex_bits_peek
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:1802   .text.speex_bits_advance:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:1807   .text.speex_bits_advance:0000000000000000 speex_bits_advance
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:1889   .text.speex_bits_remaining:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:1894   .text.speex_bits_remaining:0000000000000000 speex_bits_remaining
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:1950   .text.speex_bits_nbytes:0000000000000000 $t
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:1955   .text.speex_bits_nbytes:0000000000000000 speex_bits_nbytes
/var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s:1996   .text.speex_bits_insert_terminator:0000000000000000 $t
                     .debug_frame:0000000000000010 $d
ARM GAS  /var/folders/kh/x4vltyy52lbg7p4pcyglc5080000gp/T//ccgubEas.s 			page 47



UNDEFINED SYMBOLS
calloc
realloc
free
memmove
